	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 06692445"
	.compiler_invocation	"ctc -f cc98284a --dep-file=Aurix_MC-ISAR\\dio_infineon_tricore\\src\\.Dio.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --fp-model=+float -D_TASKING_C_TRICORE_ -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\.settings -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Asw -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\compiler -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC\\SupportDocuments -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\lib -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\obj -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Asw -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\dio_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\dio_infineon_tricore\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\integration_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\integration_general\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Hal_Sensor -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output\\generated -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output\\generated\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\PWM3Ph -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Qspi -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Adc_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Adc3ph_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Can_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TLE_9180_Drive -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\UART_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Hal_Sensor -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\Demo_Aurix -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\mak -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\PWM3Ph -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Qspi -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Adc_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Adc3ph_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Can_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TLE_9180_Drive -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\UART_Test -g2 --make-target=Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.src ..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c"
	.compiler_name		"ctc"
	;source	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c'

	
$TC16X
	.sdecl	'.zrodata.Dio..1.cnt',data,rom
	.sect	'.zrodata.Dio..1.cnt'
	.align	2
.1.cnt:	.type	object
	.size	.1.cnt,4
	.word	-268197888
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_ReadChannelGroup')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_ReadChannelGroup

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     1  /******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     2  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     3  ** Copyright (C) Infineon Technologies (2014)                                **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     4  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     5  ** All rights reserved.                                                      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     6  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     7  ** This document contains proprietary information belonging to Infineon      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     8  ** Technologies. Passing on and copying of this document, and communication  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	     9  ** of its contents is not permitted without prior written authorization.     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    10  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    11  *******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    12  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    13  **  $FILENAME   : Dio.c $                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    14  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    15  **  $CC VERSION : \main\69 $                                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    16  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    17  **  $DATE       : 2016-07-01 $                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    18  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    20  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    21  **  VENDOR      : Infineon Technologies                                      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    22  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    23  **  DESCRIPTION : This contains the functionality for DIO driver             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    24  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    26  **                                                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    27  *******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    28  **  TRACEABILITY : [cover parentID=DS_AS40X_DIO106,DS_AS_DIO001,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    29                      DS_AS_DIO005,DS_AS_DIO051_DIO055,DS_NAS_DIO_PR228,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    30                      DS_NAS_DIO_PR127,SAS_AS4XX_DIO_PR913,DS_MCAL_DIO_0517
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    31                      SAS_AS40X_DIO117_DIO168_DIO169_DIO170,DS_NAS_DIO_PR716,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    32                      SAS_AS4XX_DIO171,DS_MCAL_DIO_0517,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    33                      DS_MCAL_DIO_0503_0504_0508,SAS_AS321_DIO117,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    34                      DS_MCAL_DIO_0509_2_0513_1,SAS_NAS_ALL_PR70,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    35                      DS_MCAL_DIO_0509_3_0513_2,SAS_NAS_ALL_PR630_PR631,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    36                      DS_MCAL_DIO_0509_4_0513_3,SAS_NAS_ALL_PR1652,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    37                      DS_MCAL_DIO_0509_5_0513_4,SAS_NAS_ALL_PR748,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    38                      DS_MCAL_DIO_0509_6_0513_5,SAS_NAS_ALL_PR749,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    39                      DS_MCAL_DIO_0509_7_0513_7,DS_AS_DIO_PR123,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    40                      DS_MCAL_DIO_0513_8_0509_8,SAS_AS_DIO194,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    41                      DS_MCAL_DIO_0509_7_0513_6]                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    42  **                 [/cover]                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    43  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    44  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    45  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    46  **                      Includes                                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    47  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    48  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    49  /* Own header file, this includes own configuration file also */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    50  /* DIO117: Inclusion structure */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    51  #include "Dio.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    52  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    53  /* Version sepcific header file */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    54  #include "Dio_Ver.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    55  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    56  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    57  **                      Imported Compiler Switch Check                        **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    58  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    59  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    60  /* Version checks */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    61  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    62  #ifndef DIO_SW_MAJOR_VERSION
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    63    #error "DIO_SW_MAJOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    64  #endif
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    65  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    66  #ifndef DIO_SW_MINOR_VERSION
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    67    #error "DIO_SW_MINOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    68  #endif
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    69  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    70  #ifndef DIO_SW_PATCH_VERSION
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    71    #error "DIO_SW_PATCH_VERSION is not defined. "
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    72  #endif
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    73  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    74  /* Check for Correct inclusion of headers */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    75  #if ( DIO_SW_MAJOR_VERSION != 3U )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    76    #error "DIO_SW_MAJOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    77  #endif
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    78  #if ( DIO_SW_MINOR_VERSION != 1U )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    79    #error "DIO_SW_MINOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    80  #endif
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    81  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    82  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    83  **                      Private Macro Definitions                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    84  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    85  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    86  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    87  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    88  /* Maximum Port Pin ID */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    89  #define DIO_MAX_VALID_PORT_PIN_ID    (0x28FU)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    90  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    91  /* 0th Bit Mask value */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    92  #define DIO_CHANNEL_BIT_MASK         (0x01U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    93  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    94  /* Port numbers */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    95  #define DIO_NUMBER_31                (31U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    96  #define DIO_NUMBER_32                (32U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    97  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    98  #endif /* DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	    99  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   100  /* To optimize Dio_lGetPortAdr */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   101  #define DIO_QUOTIENT_EXTRACT_NUM     (0xCDU)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   102  #define DIO_QUOTIENT_SHIFT           (11U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   103  #define DIO_SHIFT_FOUR               (4U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   104  #define DIO_SHIFT_THREE              (3U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   105  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   106  /* This macro is used to reset the Port pins */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   107  #define DIO_CHANNEL_GROUP_RESET     ((uint32)16)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   108  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   109  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   110  **                   Function like macro definitions                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   111  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   112  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   113  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   114  **                      Private Type Definitions                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   115  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   116  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   117  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   118  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   119  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   120  **                      Private Function Declarations                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   121  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   122  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   123  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   124  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   125  #define DIO_START_SEC_CODE
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   126  /*mapping of code and data to specific memory sections via memory mapping file*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   127  #include "MemMap.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   128  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   129  /* INLINE Function to check if the port is
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   130        available or not for the microcontroller*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   131  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable31(uint32 Port);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   132  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   133  /* INLINE Function to check if the port is
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   134         available or not for the microcontroller*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   135  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable40(uint32 Port);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   136  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   137  /* INLINE Function to check if the port
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   138              is read only or it is writable*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   139  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable(uint32 Port);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   140  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   141  /* INLINE Function to check if the
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   142       port is read only or it is writable */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   143  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly31(uint32 Port);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   144  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   145  /* INLINE Function to check if the
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   146       port is read only or it is writable */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   147  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly40(uint32 Port);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   148  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   149  /* INLINE Function to check if the port
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   150            is read only or it is writable */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   151  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly(uint32 Port);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   152  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   153  /* INLINE Function to check if the Pin
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   154            available or not */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   155  IFX_LOCAL_INLINE uint16 Dio_lIsPinAvailable(uint32 Port, uint8 Pin);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   156  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   157  #define DIO_STOP_SEC_CODE
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   158  /*mapping of code and data to specific memory sections via memory mapping file*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   159  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   160    is allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   161  #include "MemMap.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   162  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   163  #endif /* (DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON)*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   164  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   165  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   166  **                      Global Constant Definitions                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   167  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   168  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   169  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   170  **                      Global Variable Definitions                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   171  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   172  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   173  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   174  **                      Private Constant Definitions                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   175  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   176  /* The following private definitions are available only if development error
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   177     detection is enabled */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   178  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   179  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   180    /* Start of memory mapping of 8 bit constant */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   181    #define DIO_START_SEC_CONST_8BIT
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   182  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   183    is allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   184    #include "MemMap.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   185  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   186    /* Information on the most significant pin for each port */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   187  /*IFX_MISRA_RULE_08_07_STATUS=Fixing the issue,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   188    doesn't hv impact on the memory allotment of the variable
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   189    and also makes the code not readable*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   190    static const uint8 Dio_kMSPortPin[] =
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   191    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   192      DIO_PORT_0_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   193      DIO_PORT_1_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   194      DIO_PORT_2_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   195      DIO_PORT_3_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   196      DIO_PORT_4_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   197      DIO_PORT_5_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   198      DIO_PORT_6_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   199      DIO_PORT_7_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   200      DIO_PORT_8_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   201      DIO_PORT_9_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   202      DIO_PORT_10_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   203      DIO_PORT_11_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   204      DIO_PORT_12_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   205      DIO_PORT_13_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   206      DIO_PORT_14_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   207      DIO_PORT_15_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   208      DIO_PORT_16_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   209      DIO_PORT_17_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   210      DIO_PORT_18_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   211      DIO_PORT_19_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   212      DIO_PORT_20_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   213      DIO_PORT_21_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   214      DIO_PORT_22_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   215      DIO_PORT_23_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   216      DIO_PORT_24_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   217      DIO_PORT_25_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   218      DIO_PORT_26_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   219      DIO_PORT_27_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   220      DIO_PORT_28_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   221      DIO_PORT_29_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   222      DIO_PORT_30_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   223      DIO_PORT_31_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   224      DIO_PORT_32_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   225      DIO_PORT_33_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   226      DIO_PORT_34_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   227      DIO_PORT_35_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   228      DIO_PORT_36_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   229      DIO_PORT_37_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   230      DIO_PORT_38_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   231      DIO_PORT_39_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   232      DIO_PORT_40_MSPIN,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   233      DIO_PORT_41_MSPIN
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   234    };
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   235  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   236    /* End of memory mapping of 8 bit constant */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   237    #define DIO_STOP_SEC_CONST_8BIT
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   238  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   239    is allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   240    #include "MemMap.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   241  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   242  #endif /* DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   243  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   244  /* Start of memory mapping of 16 bit constant */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   245  #define DIO_START_SEC_CONST_16BIT
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   246  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   247    is allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   248  #include "MemMap.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   249  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   250  /* Mask values for all the ports.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   251     This constant is used to mask the undefined port pins within the port */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   252  /*IFX_MISRA_RULE_08_07_STATUS= (occurs with DET OFF)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   253    Fixing the issue, doesn't have impact on the memory allotment
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   254    of the variable and also makes the code not readable*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   255  static const Dio_PortLevelType Dio_kMaskUndefinedPortPins[] =
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   256  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   257    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT0,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   258    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT1,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   259    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT2,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   260    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT3,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   261    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT4,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   262    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT5,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   263    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT6,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   264    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT7,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   265    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT8,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   266    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT9,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   267    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT10,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   268    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT11,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   269    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT12,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   270    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT13,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   271    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT14,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   272    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT15,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   273    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT16,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   274    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT17,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   275    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT18,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   276    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT19,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   277    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT20,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   278    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT21,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   279    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT22,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   280    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT23,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   281    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT24,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   282    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT25,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   283    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT26,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   284    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT27,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   285    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT28,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   286    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT29,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   287    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT30,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   288    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT31,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   289    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT32,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   290    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT33,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   291    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT34,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   292    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT35,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   293    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT36,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   294    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT37,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   295    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT38,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   296    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT39,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   297    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT40,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   298    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT41
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   299  };
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   300  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   301  /* Stop of memory mapping of 16 bit constant */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   302  #define DIO_STOP_SEC_CONST_16BIT
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   303  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   304    is allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   305  #include "MemMap.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   306  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   307  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   308  **                      Private Variable Definitions                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   309  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   310  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   311  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   312  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   313  **                      Private Function Definitions                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   314  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   315  /* Memory Map of the DIO Code */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   316  #define DIO_START_SEC_CODE
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   317  /*mapping of code and data to specific memory sections via memory mapping file*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   318  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   319    is allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   320  #include "MemMap.h"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   321  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   322  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   323  **                      Global Function Definitions                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   324  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   325  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   326  /* DIO001: DIO driver does not provide the initialization interface */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   327  /* DIO102: It is the users responsibility to initialize the PORT driver before
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   328     using any functionality of the DIO driver */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   329  /* DIO002: Direction change of pin is supported by the PORT driver */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   330  /* DIO049: DIO061: The run time configuration for DIO ports and port pins is
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   331     handled by PORT driver */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   332  /* DIO051: All DIO services writes or read directly the hardware registers
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   333     and no buffering is done */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   334  /* DIO055: All the services of this driver are synchronous */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   335  /* DIO101: This driver does not provide any callback notifications */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   336  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   337  /* Enable / Disable DET check functions with DIO_DEV_ERROR_DETECT switch */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   338  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   339  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   340  ** Traceability     : [cover parentID=DS_AS_DIO074,DS_AS40X_DIO175,DS_AS_DIO179]
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   341  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   342  ** Syntax           : uint8 Dio_lCheckChannelId                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   343  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   344  **                      uint8 ApiId,                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   345  **                      Dio_ChannelType ChannelId                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   346  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   347  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   348  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   349  ** Service ID       : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   350  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   351  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   352  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   353  ** Reentrancy       : reentrant                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   354  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   355  ** Parameters (in)  : ApiId - Service ID of API that calls this function      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   356  **                    ChannelId - that needs to be checked for validity       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   357  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   358  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   359  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   360  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   361  **                    DIO_NO_ERROR: if no error is detected                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   362  **                    DIO_ERROR: if DET error is detected                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   363  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   364  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   365  **  - DIO048: This function checks ChannelId for DET error                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   366  **    DIO_E_PARAM_INVALID_CHANNEL_ID                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   367  **  - is not for the user of DIO driver                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   368  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   369  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   370  uint8 Dio_lCheckChannelId(uint8 ApiId, Dio_ChannelType ChannelId)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   371  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   372    uint32       PortNumber;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   373    uint32       Index;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   374    uint32       ConfigIndex;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   375    uint32       PortReadOnly;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   376    uint32       PortAvailable;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   377    uint32       PinAvailable;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   378    uint8        PinNumber;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   379    uint8        ErrStatus;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   380  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   381    ErrStatus = (uint8)DIO_NO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   382    ConfigIndex = 0U;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   383  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   384    /* If the DIO channel ID is greater than the max value of Port pin ID */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   385    if(ChannelId > DIO_MAX_VALID_PORT_PIN_ID)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   386    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   387      ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   388    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   389    else
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   390    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   391      /* Derive the port and pin number from symbolic channel ID */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   392      PortNumber = (uint32)Dio_lGetPortNumber(ChannelId);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   393      PinNumber  = (uint8)Dio_lGetPinNumber(ChannelId);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   394  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   395      PortAvailable = Dio_lIsPortAvailable(PortNumber);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   396      PinAvailable  = Dio_lIsPinAvailable(PortNumber,PinNumber);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   397  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   398      if( (PortAvailable == 0U) || (PinAvailable == 0U) )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   399      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   400         ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   401      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   402      else
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   403      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   404         for(Index = 0U;Index <= PortNumber;Index++)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   405         {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   406           if(Dio_lIsPortAvailable(Index) != 0U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   407           {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   408             ConfigIndex++; /* to identify the Index of configuration*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   409           }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   410         }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   411           /*decremented since the ConfigIndex value is 1 for Index 0*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   412         ConfigIndex--;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   413         PortReadOnly = Dio_lIsPortReadOnly(PortNumber);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   414  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   415         /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   416           due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   417         if(
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   418          Dio_kConfigPtr->Dio_PortChannelConfigPtr[ConfigIndex].Dio_PortIdConfig
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   419                                                     == DIO_PORT_NOT_CONFIGURED)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   420         {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   421           ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   422         }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   423  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   424         /* Check for the validity of symbolic Channel ID */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   425         else if(Dio_lCheckAnalogChannel(ApiId,PortReadOnly) == DIO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   426         {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   427           ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   428         }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   429         /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   430           due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   431         else if(((Dio_kConfigPtr->
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   432                   Dio_PortChannelConfigPtr[ConfigIndex].Dio_ChannelConfig) &
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   433                  ((uint32)0x1U << PinNumber)) == 0U
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   434                 )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   435         {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   436           ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   437         }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   438         else
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   439         {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   440           /*Misra check*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   441         }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   442       }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   443    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   444  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   445    if(ErrStatus == (uint8)DIO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   446    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   447      #if (DIO_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   448        /* The channel id passed to the function is invalid. Report error id.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   449           DIO_E_PARAM_INVALID_CHANNEL_ID to the error hook function */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   450        Det_ReportError( (uint16)DIO_MODULE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   451                          DIO_INSTANCE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   452                          ApiId,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   453                          DIO_E_PARAM_INVALID_CHANNEL_ID
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   454                        );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   455     #endif /*DIO_DEV_ERROR_DETECT == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   456  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   457     #if (DIO_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   458        SafeMcal_ReportError(
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   459                          (uint16)DIO_MODULE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   460                           DIO_INSTANCE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   461                           ApiId,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   462                           DIO_E_PARAM_INVALID_CHANNEL_ID
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   463                        );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   464     #endif /*DIO_SAFETY_ENABLE == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   465    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   466  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   467    return (ErrStatus);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   468  }/* Dio_lCheckChannelId */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   469  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   470  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   471  ** Traceability     : [cover parentID=DS_AS_DIO075,DS_AS40X_DIO177,DS_AS_DIO179]
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   472  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   473  ** Syntax           : uint8 Dio_lCheckPortId                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   474  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   475  **                      uint8 ApiId,                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   476  **                      Dio_PortType PortId                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   477  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   478  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   479  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   480  ** Service ID       : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   481  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   482  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   483  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   484  ** Reentrancy       : reentrant                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   485  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   486  ** Parameters (in)  : ApiId  - Service ID of API that calls this function     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   487  **                    PortId - that needs to be checked for validity          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   488  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   489  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   490  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   491  ** Return value     : uint16                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   492  **                    DIO_NO_ERROR: if no error is detected                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   493  **                    DIO_ERROR: if DET error is detected                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   494  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   495  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   496  ** - This function checks the validity of the PortId. In case error is        **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   497  **   detected, the error DIO_E_PARAM_INVALID_PORT_ID is reported              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   498  ** - This function is local to the driver module and is not for the user of   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   499  **   DIO driver                                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   500  ** - This function is available only if DET is enabled                        **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   501  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   502  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   503  uint8 Dio_lCheckPortId (uint8 ApiId, Dio_PortType PortId)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   504  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   505    uint32      Index;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   506    uint32      ConfigIndex;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   507    uint32      PortReadOnly;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   508    uint32      PortAvailable;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   509    uint8       ErrStatus;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   510  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   511    ErrStatus = (uint8)DIO_NO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   512    ConfigIndex = 0U;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   513  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   514    PortAvailable = (uint32)Dio_lIsPortAvailable((uint32)PortId);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   515  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   516    /* Check for the validity of symbolic port ID */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   517    if( (PortAvailable == 0U) )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   518    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   519      ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   520    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   521    else
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   522    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   523      for(Index = 0U;Index <= PortId;Index++)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   524      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   525        if(Dio_lIsPortAvailable(Index) != 0U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   526        {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   527          ConfigIndex++; /* to identify the Index of configuration*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   528        }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   529      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   530  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   531      ConfigIndex--;/*decremented since the ConfigIndex value is 1 for Index 0*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   532  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   533      PortReadOnly = Dio_lIsPortReadOnly((uint32)PortId);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   534  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   535      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   536        due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   537      if(Dio_kConfigPtr->Dio_PortChannelConfigPtr[ConfigIndex].Dio_PortIdConfig
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   538                                                    == DIO_PORT_NOT_CONFIGURED)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   539      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   540         ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   541      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   542      else if(Dio_lCheckAnalogPort(ApiId,PortReadOnly) == DIO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   543      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   544         ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   545      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   546      else
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   547      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   548        /*Misra check*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   549      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   550    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   551    if(ErrStatus == (uint8)DIO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   552    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   553      #if (DIO_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   554        /* The port id passed to the function is invalid. Report error id
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   555           DIO_E_PARAM_INVALID_PORT_ID to the error hook function */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   556        Det_ReportError( (uint16)DIO_MODULE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   557                          DIO_INSTANCE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   558                          ApiId,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   559                          DIO_E_PARAM_INVALID_PORT_ID
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   560                        );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   561     #endif /*DIO_DEV_ERROR_DETECT == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   562  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   563     #if (DIO_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   564        SafeMcal_ReportError(
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   565                          (uint16)DIO_MODULE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   566                           DIO_INSTANCE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   567                           ApiId,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   568                           DIO_E_PARAM_INVALID_PORT_ID
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   569                        );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   570     #endif /*DIO_SAFETY_ENABLE == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   571    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   572    return (ErrStatus);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   573  }/* Dio_lCheckPortId */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   574  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   575  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   576  ** Traceability     : [cover parentID=DS_AS_DIO114,DS_AS40X_DIO178,DS_AS_DIO179]
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   577  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   578  ** Syntax           : uint8 Dio_lCheckGroupId                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   579  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   580  **                      uint8 ApiId,                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   581  **                      const Dio_ChannelGroupType *GroupIdPtr                **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   582  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   583  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   584  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   585  ** Service ID       : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   586  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   587  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   588  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   589  ** Reentrancy       : reentrant                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   590  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   591  ** Parameters (in)  : ApiId - Service ID of API that calls this function      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   592  **                    GroupIdPtr - Pointer to group configuration that needs  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   593  **                    to be checked for any DET error                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   594  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   595  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   596  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   597  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   598  **                    DIO_NO_ERROR: if no error is detected                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   599  **                    DIO_ERROR: if DET error is detected                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   600  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   601  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   602  **  - DIO048: This function checks the GroupIdPtr for DET error               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   603  **    DIO_E_PARAM_INVALID_GROUP_ID                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   604  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   605  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   606  uint8 Dio_lCheckGroupId(uint8 ApiId, const Dio_ChannelGroupType *GroupIdPtr)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   607  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   608    uint32 PortReadOnly;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   609    uint32 PortAvailable;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   610    uint8  ErrStatus;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   611  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   612    /* Initialise the Error status to DIO_ERROR */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   613    ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   614  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   615    /* Check GroupIdPtr for NULL_PTR */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   616    if (GroupIdPtr != NULL_PTR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   617    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   618      ErrStatus = Dio_lCheckChGrpValue(GroupIdPtr);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   619  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   620      if (ErrStatus != (uint8)DIO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   621      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   622        /*Check if the port is Analog port for Write operation*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   623        PortReadOnly = Dio_lIsPortReadOnly((uint32)(GroupIdPtr->port));
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   624        PortAvailable = Dio_lIsPortAvailable((uint32)(GroupIdPtr->port));
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   625  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   626        if( ((ApiId == DIO_SID_WRITECHANNELGROUP) && (PortReadOnly != 0U))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   627               || (PortAvailable == 0U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   628           )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   629        {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   630          /* Error status = Error has occurred */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   631          ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   632        }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   633        /* Check if mask = 0 */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   634        else if( ((GroupIdPtr->mask) == 0U) )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   635        {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   636          ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   637        }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   638        /* Check if mask value is invalid, i.e., mask value contains the
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   639           unimplemented bits */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   640        else if( ( (GroupIdPtr->mask) &
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   641                   (~((uint32)Dio_kMaskUndefinedPortPins[GroupIdPtr->port]))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   642                 ) != (Dio_PortLevelType)0U)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   643        {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   644          ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   645        }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   646  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   647        /* Check if offset is greater than the most significant pin on the port
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   648           Note that existence of the port is checked earlier */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   649        else if((uint32)(GroupIdPtr->offset) >
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   650                                  (uint32)(Dio_kMSPortPin[GroupIdPtr->port]))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   651        {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   652          ErrStatus = (uint8)DIO_ERROR;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   653        }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   654        else
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   655        {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   656          /* No functionality to implement. This is to avoid MISRA violation */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   657        }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   658     }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   659    } /* GroupIdPtr != NULL_PTR */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   660  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   661    if (ErrStatus == (uint8)DIO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   662    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   663      #if (DIO_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   664      /* DIO114: Reporting error Invalid Channel Group for wrong
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   665         group configuration ID */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   666      Det_ReportError(
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   667                     (uint16)DIO_MODULE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   668                      DIO_INSTANCE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   669                      ApiId,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   670                      DIO_E_PARAM_L_INVALID_GROUP
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   671                      );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   672      #endif /*DIO_DEV_ERROR_DETECT == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   673  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   674      #if (DIO_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   675      SafeMcal_ReportError(
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   676                      (uint16)DIO_MODULE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   677                       DIO_INSTANCE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   678                       ApiId,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   679                       DIO_E_PARAM_L_INVALID_GROUP
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   680                       );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   681      #endif /*DIO_SAFETY_ENABLE == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   682    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   683    return (ErrStatus);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   684  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   685  }/* Dio_lCheckGroupId */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   686  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   687  #endif /* (DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON )*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   688  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   689  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   690  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   691  ** Traceability     : [cover parentID=DS_AS_DIO137,DS_AS_DIO014_DIO037,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   692                         DS_AS_DIO092,DS_AS_DIO093,DS_AS_DIO060_6,DS_AS_DIO012,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   693                         DS_AS_DIO083,DS_AS_DIO118_3]                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   694  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   695  ** Syntax           : Dio_PortLevelType Dio_ReadChannelGroup                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   696  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   697  **                      const Dio_ChannelGroupType *ChannelGroupIdPtr         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   698  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   699  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   700  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   701  ** Service ID       : 0x04                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   702  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   703  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   704  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   705  ** Reentrancy       : DIO005: reentrant                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   706  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   707  ** Parameters (in)  : ChannelGroupIdPtr -                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   708                          pointer to channel group configuration                **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   709  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   710  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   711  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   712  ** Return value     : Dio_PortLevelType                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   713  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   714  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   715  **  - DIO014: DIO037: returns the level of specified channel group            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   716  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   717  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   718  Dio_PortLevelType Dio_ReadChannelGroup
; Function Dio_ReadChannelGroup
.L11:
Dio_ReadChannelGroup:	.type	func
	mov.aa	a15,a4
.L120:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   719  (
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   720    const Dio_ChannelGroupType *ChannelGroupIdPtr
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   721  )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   722  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   723    Ifx_P             *GetPortAddressPtr;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   724    Dio_PortLevelType  RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   725  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   726    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   727  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   728    /* Return value should be zero for errors*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   729    RetVal = (Dio_PortLevelType)STD_LOW;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   730  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   731    if(
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   732      Dio_lErrorCheckChannelGroupDet(ChannelGroupIdPtr,DIO_SID_READCHANNELGROUP)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   733                           == DIO_NO_ERROR
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   734      )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   735    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   736    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   737       /* DIO092: The input port value is masked with the configured mask value
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   738       GetPortAddressPtr will hold the port address of Port0 to Port11 or
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   739       Port12 to Port16 depending on the Port number */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   740       GetPortAddressPtr = Dio_lGetPortAdr(ChannelGroupIdPtr->port);
	ld.bu	d4,[a15]3
	call	Dio_lGetPortAdr
.L119:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   741       RetVal = (Dio_PortLevelType)(DIO_SFR_RUNTIME_USER_MODE_READ32\ 
	ld.w	d15,[a2]36
.L176:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   742                    (GetPortAddressPtr->IN.U) & (uint32)ChannelGroupIdPtr->mask);
	extr.u	d0,d15,#0,#16
	ld.hu	d15,[a15]0
.L177:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   743  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   744       /* DIO093: shift the level by configured offset value and then return */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   745       RetVal = (RetVal >> ChannelGroupIdPtr->offset);
	and	d0,d15
	ld.bu	d15,[a15]2
.L178:
	rsub	d15,#0
.L179:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   746    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   747    return (RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   748  } /* Dio_ReadChannelGroup */
	sha	d2,d0,d15
	ret
.L101:
	
__Dio_ReadChannelGroup_function_end:
	.size	Dio_ReadChannelGroup,__Dio_ReadChannelGroup_function_end-Dio_ReadChannelGroup
.L56:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_WriteChannelGroup')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_WriteChannelGroup

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   749  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   750  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   751  ** Traceability     : [cover parentID=DS_AS_DIO138,DS_AS_DIO008_DIO039,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   752                         DS_AS_DIO040,DS_AS_DIO090,DS_AS_DIO091,DS_AS_DIO060_7,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   753                         DS_AS_DIO109,DS_AS_DIO064,DS_AS_DIO119_3]              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   754  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   755  ** Syntax           : void Dio_WriteChannelGroup                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   756  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   757  **                      const Dio_ChannelGroupType *ChannelGroupIdPtr,        **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   758  **                      Dio_PortLevelType Level                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   759  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   760  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   761  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   762  ** Service ID       : 0x05                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   763  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   764  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   765  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   766  ** Reentrancy       : DIO005: reentrant                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   767  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   768  ** Parameters (in)  : ChannelGroupIdPtr -                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   769                          pointer to channel group configuration                **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   770  **                    Level - Sets level of specified channel group           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   771  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   772  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   773  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   774  ** Return value     : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   775  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   776  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   777  **  - DIO039: sets the level of specified channel group                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   778  **  - DIO008: The value for all the pins the channel group are set at         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   779  **    one shot                                                                **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   780  **  - DIO040: Other pins of the port and pins that are configured as          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   781  **    input remains unchanged                                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   782  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   783  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   784  void Dio_WriteChannelGroup
; Function Dio_WriteChannelGroup
.L13:
Dio_WriteChannelGroup:	.type	func

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   785  (
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   786    const Dio_ChannelGroupType *ChannelGroupIdPtr,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   787    Dio_PortLevelType Level
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   788  )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   789  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   790    /*
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   791      Note: volatile is used for the variable GetPortAddressPtr.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   792      The compiler may optimise the function call and the desired Level may not
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   793      be written to the Channel or to the Port.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   794    */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   795    volatile Ifx_P *GetPortAddressPtr;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   796    uint32          PortVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   797    uint32          PortResetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   798  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   799    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   800    if(
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   801     Dio_lErrorCheckChannelGroupDet(ChannelGroupIdPtr,DIO_SID_WRITECHANNELGROUP)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   802                           == DIO_NO_ERROR )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   803    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   804    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   805      /* DIO090: passed Level is masked as per the configuration */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   806      /* DIO091: Level is shifted by the configured offset */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   807      /* PortVal is used to set the bits */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   808      PortVal = (uint32)(((uint32)Level << ChannelGroupIdPtr->offset) & \ 
	ld.bu	d15,[a4]2
.L184:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   809                                                 ChannelGroupIdPtr->mask);
	ld.hu	d0,[a4]0
.L185:
	sh	d4,d4,d15
.L122:
	and	d4,d0
.L186:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   810  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   811      /* PortResetVal is used to reset the bits */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   812      PortResetVal = ((~PortVal) & ((uint32)ChannelGroupIdPtr->mask));
	mov	d15,#-1
	xor	d15,d4
.L187:
	and	d0,d15
.L188:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   813  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   814      PortVal = (PortVal | (PortResetVal << DIO_CHANNEL_GROUP_RESET));
	sh	d15,d0,#16
.L124:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   815  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   816      /* GetPortAddressPtr will hold the port address of Port0 to Port11 or
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   817         Port12 to Port16 depending on the Port number */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   818      GetPortAddressPtr = Dio_lGetPortAdr(ChannelGroupIdPtr->port);
	or	d15,d4
	ld.bu	d4,[a4]3
.L123:
	call	Dio_lGetPortAdr
.L121:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   819      /* Mapping of code and data to specific memory sections via memory mapping
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   820         file*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   821      /* IFX_MISRA_RULE_14_03_STATUS=File inclusion after pre-processor directives
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   822         is allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   823      DIO_SFR_RUNTIME_USER_MODE_WRITE32((GetPortAddressPtr->OMR.U),PortVal);
	st.w	[a2]4,d15
.L189:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   824    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   825  } /* Dio_WriteChannelGroup */
	ret
.L106:
	
__Dio_WriteChannelGroup_function_end:
	.size	Dio_WriteChannelGroup,__Dio_WriteChannelGroup_function_end-Dio_WriteChannelGroup
.L61:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_ReadChannel')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_ReadChannel

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   826  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   827  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   828  ** Traceability     : [cover parentID=DS_AS_DIO133,DS_AS_DIO027,DS_AS_DIO011,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   829                         DS_AS_DIO060_1,DS_AS_DIO089,DS_AS_DIO012,DS_AS_DIO083,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   830                         DS_AS_DIO118_1]                                        **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   831  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   832  ** Syntax           : Dio_LevelType Dio_ReadChannel                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   833  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   834  **                      Dio_ChannelType ChannelId                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   835  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   836  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   837  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   838  ** Service ID       : 0x00                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   839  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   840  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   841  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   842  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   843  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   844  ** Parameters (in)  : ChannelId - ChannelId whose level to be read            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   845  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   846  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   847  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   848  ** Return value     : Dio_LevelType - The function returns value or the level **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   849  **                  of the specified channel which is of type Dio_LevelType   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   850  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   851  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   852  **      - DIO011: DIO27: returns the level of specified channel               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   853  **      - DIO012: The specified channel can be input or output                **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   854  **      - DIO085: returns the physical level of the channel                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   855  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   856  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   857  Dio_LevelType Dio_ReadChannel(Dio_ChannelType ChannelId)
; Function Dio_ReadChannel
.L15:
Dio_ReadChannel:	.type	func
	mov	d15,d4
.L126:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   858  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   859    uint32        PinPosition;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   860    Dio_LevelType RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   861    Ifx_P *GetPortAddressPtr;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   862  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   863    /* Return value should be zero for errors*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   864    RetVal = (Dio_LevelType)STD_LOW;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   865  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   866  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   867    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   868    if(Dio_lErrorCheckChannelDet(ChannelId,DIO_SID_READCHANNEL)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   869                           == DIO_NO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   870    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   871    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   872      /*
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   873        GetPortAddressPtr will hold the port address
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   874      */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   875      GetPortAddressPtr = Dio_lGetPortAdr(Dio_lGetPortNumber(ChannelId));
	mov	d9,#0
	call	Dio_lGetPortNumber
.L125:
	mov	d4,d2
	call	Dio_lGetPortAdr
.L128:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   876  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   877      /* Get the Pin position */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   878      PinPosition = ((uint32)0x01U << Dio_lGetPinNumber(ChannelId));
	mov	d4,d15
	mov.aa	a15,a2
.L130:
	mov	d8,#1
	call	Dio_lGetPinNumber
.L129:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   879  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   880      /* Read the Channel level and decide the return value */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   881      if ( (PinPosition & (DIO_SFR_RUNTIME_USER_MODE_READ32\ 
	sh	d8,d8,d2
	ld.w	d15,[a15]36
.L127:
	and	d8,d15
.L131:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   882                          (GetPortAddressPtr->IN.U))) != (Dio_LevelType)STD_LOW )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   883      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   884        RetVal = (Dio_LevelType)STD_HIGH;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   885      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   886    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   887    return RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   888  }/* Dio_ReadChannel */
	seln	d2,d8,d9,#1
	ret
.L80:
	
__Dio_ReadChannel_function_end:
	.size	Dio_ReadChannel,__Dio_ReadChannel_function_end-Dio_ReadChannel
.L36:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_WriteChannel')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_WriteChannel

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   889  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   890  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   891  ** Traceability   : [cover parentID=DS_AS_DIO134,DS_AS_DIO006,DS_AS_DIO028,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   892                       DS_AS_DIO029_DIO070,DS_AS_DIO079,DS_AS_DIO060_2,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   893                       DS_AS_DIO109,DS_AS_DIO089,DS_AS_DIO064,DS_AS_DIO119_1]   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   894  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   895  ** Syntax : void Dio_WriteChannel                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   896  **          (                                                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   897  **             Dio_ChannelType ChannelId,                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   898  **             Dio_LevelType Level                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   899  **          )                                                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   900  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   901  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   902  ** Service ID:  1                                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   903  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   904  ** Sync/Async:  Synchronous                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   905  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   906  ** Reentrancy:  DIO005: DIO060: Reentrant                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   907  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   908  ** Parameters (in):  ChannelId - ChannelId whose level to be set              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   909  **                   Level - Channel level to be set                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   910  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   911  ** Parameters (out):  none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   912  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   913  ** Return value:  none                                                        **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   914  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   915  ** Description : This function:                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   916  **      - DIO006: DIO028: DIO064: sets the specified level for specified      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   917  **        channel                                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   918  **      - DIO023: Possible levels for channel are STD_HIGH and STD_LOW        **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   919  **      - DIO029: DIO070: DIO079: The real physical level of pin is not       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   920  **        modified if the specified channel is configured as input            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   921  **      - DIO109: For input channel this function writes into the output      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   922  **        register, so that pin level can be set immediately when direction   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   923  **        changed by PORT driver                                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   924  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   925  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   926  void Dio_WriteChannel(Dio_ChannelType ChannelId, Dio_LevelType Level)
; Function Dio_WriteChannel
.L17:
Dio_WriteChannel:	.type	func
	mov	d8,d4
.L133:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   927  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   928    /*
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   929      Note: volatile is used for the variable GetPortAddressPtr.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   930      The compiler may optimise the function call and the desired Level may not
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   931      be written to the Channel or to the Port.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   932    */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   933    volatile Ifx_P *GetPortAddressPtr;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   934    uint32 OmrVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   935  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   936    OmrVal = DIO_OMR_RESET_BIT;
	movh	d15,#1
.L134:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   937  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   938    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   939    if(Dio_lErrorCheckChannelDet(ChannelId,DIO_SID_WRITECHANNEL)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   940                           == DIO_NO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   941    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   942    {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   943      #if(DIO_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   944      if( (Level == (Dio_LevelType)STD_LOW) ||
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   945          (Level == (Dio_LevelType)STD_HIGH)   )
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   946      #endif /* (DIO_SAFETY_ENABLE == ON) */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   947      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   948        /* Decide the value to be written depending
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   949            on the input parameter Level */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   950        if (Level != (Dio_LevelType)STD_LOW)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   951        {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   952          OmrVal = 0x01U;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   953        }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   954        /* GetPortAddressPtr will hold the port address */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   955        GetPortAddressPtr = Dio_lGetPortAdr(Dio_lGetPortNumber(ChannelId));
	seln	d15,d5,d15,#1
	call	Dio_lGetPortNumber
.L132:
	mov	d4,d2
	call	Dio_lGetPortAdr
.L136:
	mov.aa	a15,a2
.L138:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   956  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   957        /* Write to the PORT OMR register to reflect at the channel*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   958        DIO_SFR_RUNTIME_USER_MODE_WRITE32((GetPortAddressPtr->OMR.U),
	mov	d4,d8
	call	Dio_lGetPinNumber
.L137:
	sh	d15,d15,d2
	st.w	[a15]4,d15
.L135:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   959         ((unsigned_int)(OmrVal << Dio_lGetPinNumber(ChannelId))));
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   960      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   961      #if (DIO_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   962      else
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   963      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   964         SafeMcal_ReportError(
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   965               (uint16)DIO_MODULE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   966                DIO_INSTANCE_ID,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   967                DIO_SID_WRITECHANNEL,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   968                DIO_E_PARAM_INVALID_LEVEL);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   969      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   970      #endif /*DIO_SAFETY_ENABLE == STD_ON */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   971    }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   972  }/* Dio_WriteChannel */
	ret
.L88:
	
__Dio_WriteChannel_function_end:
	.size	Dio_WriteChannel,__Dio_WriteChannel_function_end-Dio_WriteChannel
.L41:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_ReadPort')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_ReadPort

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   973  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   974  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   975  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   976  ** Traceability    : [cover parentID=DS_AS_DIO135,DS_AS_DIO013,DS_AS_DIO031,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   977                        DS_AS_DIO104,DS_AS_DIO060_4,DS_AS_DIO012,DS_AS_DIO083,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   978                        DS_AS_DIO118_2]                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   979  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   980  ** Syntax : Dio_PortLevelType Dio_ReadPort(Dio_PortType PortId)               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   981  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   982  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   983  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   984  ** Service ID:  2                                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   985  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   986  ** Sync/Async:  Synchronous                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   987  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   988  ** Reentrancy:  DIO005: DIO060: reentrant                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   989  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   990  ** Parameters (in):  PortId - Port id whose level to be read                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   991  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   992  ** Parameters (out):  none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   993  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   994  ** Return value:  Dio_PortLevelType - The function returns value or the level **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   995  **                of the specified channel which is of type Dio_PortLevelType **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   996  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   997  ** Description : This function:                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   998  **      - DIO013: DIO031: returns the level of specified port                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	   999  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1000  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1001  Dio_PortLevelType Dio_ReadPort(Dio_PortType PortId)
; Function Dio_ReadPort
.L19:
Dio_ReadPort:	.type	func

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1002  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1003    Ifx_P             *GetPortAddressPtr;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1004    Dio_PortLevelType  RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1005  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1006    /* Check for the validity of symbolic Port ID
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1007       Reported DET if error detected
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1008    */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1009    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1010  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1011    /* Return value should be zero for errors*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1012    RetVal = (Dio_PortLevelType)STD_LOW;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1013  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1014    if(Dio_lErrorCheckPortDet(PortId,DIO_SID_READPORT)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1015                           == DIO_NO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1016    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1017      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1018        /* Return the Port IN register value
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1019           DIO104: MSB for small port size are zero from hardware itself
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1020           GetPortAddressPtr will hold the port address
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1021        */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1022        GetPortAddressPtr = Dio_lGetPortAdr(PortId);
	mov	d8,d4
	call	Dio_lGetPortAdr
.L139:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1023        RetVal = ((Dio_PortLevelType)DIO_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1024                (GetPortAddressPtr->IN.U) & Dio_kMaskUndefinedPortPins[PortId]);
	movh.a	a15,#@his(Dio_kMaskUndefinedPortPins)
.L162:
	ld.w	d15,[a2]36
.L163:
	lea	a15,[a15]@los(Dio_kMaskUndefinedPortPins)
.L164:
	addsc.a	a15,a15,d8,#1
.L165:
	extr.u	d2,d15,#0,#16
.L166:
	ld.hu	d15,[a15]0
.L140:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1025      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1026    return (RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1027  }/* Dio_ReadPort */
	and	d2,d15
	ret
.L93:
	
__Dio_ReadPort_function_end:
	.size	Dio_ReadPort,__Dio_ReadPort_function_end-Dio_ReadPort
.L46:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_WritePort')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_WritePort

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1028  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1029  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1030  ** Traceability    : [cover parentID=DS_AS_DIO136,DS_AS_DIO007_DIO034,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1031                        DS_AS_DIO004_DIO035_DIO108,DS_AS_DIO105,DS_AS_DIO060_5,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1032                        DS_AS_DIO109,DS_AS_DIO064,DS_AS_DIO119_2]               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1033  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1034  ** Syntax : void Dio_WritePort(Dio_PortType PortId, Dio_PortLevelType Level)  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1035  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1036  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1037  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1038  ** Service ID:  3                                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1039  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1040  ** Sync/Async:  Synchronous                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1041  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1042  ** Reentrancy:  DIO005: DIO060: reentrant                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1043  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1044  ** Parameters (in):  PortId - port id whose level to be set                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1045  **                   Level - port level to be set                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1046  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1047  ** Parameters (out):  none                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1048  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1049  ** Return value:  none                                                        **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1050  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1051  ** Description : This function:                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1052  **      - DIO034: sets the specified level of specified port                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1053  **      - DIO004: DIO035: DIO108: Hardware takes care not to change the value **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1054  **        for the input channels while writing to complete port               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1055  **      - DIO007: All the port pins are written at one shot                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1056  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1057  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1058  void Dio_WritePort (Dio_PortType PortId, Dio_PortLevelType Level)
; Function Dio_WritePort
.L21:
Dio_WritePort:	.type	func

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1059  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1060    /*
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1061      Note: volatile is used for the variable GetPortAddressPtr.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1062      The compiler may optimise the function call and the desired Level may not
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1063      be written to the Channel or to the Port.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1064    */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1065    volatile Ifx_P *GetPortAddressPtr;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1066    uint32 LocalRegData;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1067  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1068  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1069    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1070    if(Dio_lErrorCheckPortDet(PortId,DIO_SID_WRITEPORT)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1071                           == DIO_NO_ERROR)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1072    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1073      {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1074        /* Write the Level to the Port OUT register
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1075           DIO105: If the port size is small, MSB's of Level are ignored
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1076           GetPortAddressPtr will hold the port address
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1077        */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1078        GetPortAddressPtr = Dio_lGetPortAdr(PortId);
	mov	d15,d5
	call	Dio_lGetPortAdr
.L141:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1079        LocalRegData = (uint32)Level & DIO_OUT_MASK;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1080        DIO_SFR_RUNTIME_USER_MODE_WRITE32((GetPortAddressPtr->OUT.U),\ 
	st.w	[a2],d15
.L171:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1081                                         LocalRegData);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1082      }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1083  }/* Dio_WritePort */
	ret
.L97:
	
__Dio_WritePort_function_end:
	.size	Dio_WritePort,__Dio_WritePort_function_end-Dio_WritePort
.L51:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_lGetPortNumber')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_lGetPortNumber

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1084  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1085  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1086  **                      Converted INLINE functions                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1087  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1088  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1089  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1090  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1091  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable31          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1092  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1093  **                      Port                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1094  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1095  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1096  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1097  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1098  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1099  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1100  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1101  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1102  ** Parameters (in)  : Port - Port to be checked                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1103  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1104  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1105  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1106  ** Return value     : RetVal                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1107  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1108  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1109  ** - The function like macro is to check if the port is available or not      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1110  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1111  **   Parameter: Port number of type uint8/uint16                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1112  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1113  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable31(uint32 Port)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1114  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1115    uint32 RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1116  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1117    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port)) &
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1118               ((uint32)DIO_PORTS_AVAILABLE_00_31)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1119             );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1120    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1121  }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1122  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1123  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1124  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable40          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1125  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1126  **                      Port                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1127  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1128  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1129  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1130  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1131  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1132  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1133  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1134  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1135  ** Parameters (in)  : Port - Port to be checked                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1136  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1137  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1138  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1139  ** Return value     : RetVal                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1140  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1141  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1142  ** - The function like macro is to check if the port is available or not      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1143  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1144  **   Parameter: Port number of type uint8/uint16                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1145  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1146  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable40(uint32 Port)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1147  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1148    uint32 RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1149  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1150    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port - DIO_NUMBER_32)) &
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1151               ((uint32)DIO_PORTS_AVAILABLE_32_40)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1152             );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1153    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1154  }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1155  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1156  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1157  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1158  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1159  **                      Port                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1160  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1161  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1162  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1163  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1164  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1165  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1166  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1167  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1168  ** Parameters (in)  : Port - Port to be checked                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1169  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1170  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1171  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1172  ** Return value     : RetVal                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1173  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1174  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1175  ** - The function like macro is to check if the port is read only or          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1176  **   it is writable.                                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1177  **   Parameter: Port number of type uint8/uint16                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1178  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1179  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable(uint32 Port)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1180  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1181    uint32 RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1182  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1183    RetVal = ((Port > DIO_NUMBER_31) ? (Dio_lIsPortAvailable40(Port)) :
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1184                                       (Dio_lIsPortAvailable31(Port))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1185             );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1186    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1187  }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1188  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1189  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1190  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly31           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1191  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1192  **                      Port                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1193  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1194  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1195  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1196  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1197  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1198  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1199  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1200  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1201  ** Parameters (in)  : Port - Port to be checked                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1202  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1203  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1204  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1205  ** Return value     : RetVal                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1206  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1207  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1208  ** - The function like macro is to check if the port is read only or          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1209  **   it is writable.                                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1210  **   Parameter: Port number of type uint8/uint16                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1211  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1212  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly31(uint32 Port)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1213  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1214    uint32 RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1215  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1216    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port)) &
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1217               ((uint32)DIO_PORTS_READONLY_00_31)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1218             );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1219    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1220  }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1221  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1222  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1223  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly40           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1224  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1225  **                      Port                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1226  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1227  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1228  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1229  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1230  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1231  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1232  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1233  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1234  ** Parameters (in)  : Port - Port to be checked                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1235  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1236  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1237  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1238  ** Return value     : RetVal                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1239  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1240  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1241  ** - The function like macro is to check if the port is read only or          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1242  **   it is writable.                                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1243  **   Parameter: Port number of type uint8/uint16                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1244  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1245  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly40(uint32 Port)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1246  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1247    uint32 RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1248  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1249    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port - DIO_NUMBER_32)) &
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1250               ((uint32)DIO_PORTS_READONLY_32_40)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1251             );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1252    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1253  }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1254  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1255  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1256  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1257  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1258  **                      Port                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1259  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1260  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1261  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1262  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1263  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1264  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1265  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1266  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1267  ** Parameters (in)  : Port - Port to be checked                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1268  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1269  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1270  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1271  ** Return value     : RetVal                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1272  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1273  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1274  ** - The function like macro is to check if the port is read only or          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1275  **   it is writable.                                                          **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1276  **   Parameter: Port number of type uint8/uint16                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1277  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1278  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly(uint32 Port)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1279  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1280    uint32 RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1281  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1282    RetVal = ((Port <= DIO_NUMBER_31) ? (Dio_lIsPortReadOnly31(Port)) :
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1283                                        (Dio_lIsPortReadOnly40(Port))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1284             );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1285    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1286  }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1287  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1288  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1289  ** Syntax           : IFX_LOCAL_INLINE uint16 Dio_lIsPinAvailable             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1290  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1291  **                      Port,                                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1292  **                      Pin                                                   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1293  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1294  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1295  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1296  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1297  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1298  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1299  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1300  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1301  ** Parameters (in)  : Port - Port number                                      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1302  **                    Pin  - Pin to be validated                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1303  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1304  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1305  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1306  ** Return value     : RetVal                                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1307  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1308  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1309  ** - The function like macro is to check if the Pin is available or not.      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1310  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1311  **   Parameter: Port number of type uint8/uint16                              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1312  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1313  IFX_LOCAL_INLINE uint16 Dio_lIsPinAvailable(uint32 Port, uint8 Pin)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1314  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1315   uint16 RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1316  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1317   RetVal =  ( (uint16)((uint32)DIO_CHANNEL_BIT_MASK << (Pin)) &
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1318                Dio_kMaskUndefinedPortPins[Port] );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1319   return RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1320  }
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1321  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1322  #endif /* (DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON) */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1323  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1324  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1325  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1326  ** Syntax           : Dio_PortType Dio_lGetPortNumber                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1327  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1328  **                      ChannelId                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1329  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1330  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1331  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1332  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1333  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1334  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1335  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1336  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1337  ** Parameters (in)  : ChannelId - derived the port number from ChannelId      **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1338  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1339  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1340  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1341  ** Return value     : Dio_PortType RetVal                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1342  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1343  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1344  ** - The function like macro is to identify the port number from the passed   **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1345  **   ChannelId.                                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1346  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1347  Dio_PortType Dio_lGetPortNumber(Dio_ChannelType ChannelId)
; Function Dio_lGetPortNumber
.L23:
Dio_lGetPortNumber:	.type	func

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1348  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1349    Dio_PortType RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1350  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1351    RetVal = (Dio_PortType)((ChannelId &
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1352                     (uint16)DIO_4_TO_11_MASK) >> (uint16)DIO_PORT_NUM_OFFSET
	mov	d15,#4080
.L194:
	and	d4,d15
.L142:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1353                    );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1354    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1355  }
	sha	d2,d4,#-4
	ret
.L111:
	
__Dio_lGetPortNumber_function_end:
	.size	Dio_lGetPortNumber,__Dio_lGetPortNumber_function_end-Dio_lGetPortNumber
.L66:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_lGetPortAdr')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_lGetPortAdr

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1356  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1357  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1358  ** Syntax           : Ifx_P *Dio_lGetPortAdr                                  **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1359  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1360  **                      x                                                     **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1361  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1362  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1363  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1364  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1365  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1366  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1367  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1368  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1369  ** Parameters (in)  : x - Port Number                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1370  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1371  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1372  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1373  ** Return value     : Ifx_P RetVal                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1374  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1375  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1376  ** - The function like macro is to extract the Address of Px_OUT              **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1377  **   register, where x is variable. Note: x-PortNumber.                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1378  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1379  Ifx_P *Dio_lGetPortAdr(Dio_PortType PortNumber)
; Function Dio_lGetPortAdr
.L25:
Dio_lGetPortAdr:	.type	func

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1380  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1381    Ifx_P *RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1382    uint8  Quotient;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1383  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1384  /*
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1385  Optimization used for the conversion
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1386  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1387  ((Ifx_P * )(void *)&P00_OUT +
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1388               (((PortNumber / DIO_CONSTANT_10) * DIO_CONSTANT_16) +
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1389               (PortNumber % DIO_CONSTANT_10)))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1390             );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1391  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1392  1.Convert 1/C into binary (where C is the number u want to divide with)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1393  2.Consider all the bits present to the right of the binary point,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1394    and do a left shift until the bit to the right of the binary point is 1.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1395    Let the number of shifts performed is "S".
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1396  3.Now take the most significant 17 bits, add 1 to it
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1397    and then truncate it to 16 bits.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1398    Convert that 16 bits to hexadecimal format and let that be "M"
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1399  The quotient "Q" is obtained as
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1400    Q = ((VAL * M) >> 16) >> S
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1401  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1402  Example1: To get (P/10)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1403    To divide a number P by 10,, i.e., (P/10)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1404  1.Convert (1/10) into binary, i.e., 0.00011001100110011......
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1405  2.Do left shift by 3 digit,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1406    such that bit to the right of the decinmal point is 1.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1407    S = 3,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1408    ie., 0.11001100110011001100.......
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1409  3.Now, let the type of the variable P be uint8(8 bits) ,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1410    As it is 8-bit, consider 8 + 1 = 9 bits and binary one to it
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1411     0.110011001
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1412     +         1
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1413   = 0.110011010
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1414  Round it to 8-bits again
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1415    becomes 0.11001101 = 0xCD.
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1416    M = 0xCD
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1417  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1418    Quotient is obtained by,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1419    Q = ((VAL * M) >> 16) >> S
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1420    1'e.,
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1421    Q = ((VAL * (0xCD)) >> 8) >> 3
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1422  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1423  Example2: To get (P%10) modulus 10
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1424  1. Calculate the quotient as in Example1, Q
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1425     Q = P/10
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1426     Modulus 10 = P - (Q*10),
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1427                = P - (Q*(8 + 2))
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1428                = P - (Q*8 + Q*2)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1429                = P - (Q<<3 + Q<<1)
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1430  */
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1431    Quotient = (uint8)(((uint16)PortNumber*(uint16)DIO_QUOTIENT_EXTRACT_NUM) >>
	mul	d15,d4,#205
.L199:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1432                                                           DIO_QUOTIENT_SHIFT);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1433  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1434    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1435     to efficiently access the SFRs of multiple Ports*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1436    RetVal = ( (Ifx_P * )(void *)&P00_OUT +
	sha	d0,d15,#-11
	ld.w	d15,.1.cnt
.L144:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1437               ((uint8)(Quotient<<DIO_SHIFT_FOUR) + (PortNumber - ((uint8)
	sha	d1,d0,#4
.L200:
	extr.u	d1,d1,#0,#8
.L201:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1438                       (Quotient<<DIO_SHIFT_THREE) + (uint8)(Quotient<<1U))))
	sha	d2,d0,#3
.L202:
	sha	d0,#1
.L145:
	add	d2,d0
.L203:
	sub	d4,d2
.L143:
	add	d1,d4
	sha	d0,d1,#8
	mov.a	a15,d0
.L204:
	addsc.a	a2,a15,d15,#0
.L205:

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1439             );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1440  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1441    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1442  }
	ret
.L113:
	
__Dio_lGetPortAdr_function_end:
	.size	Dio_lGetPortAdr,__Dio_lGetPortAdr_function_end-Dio_lGetPortAdr
.L71:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Dio_lGetPinNumber')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Dio_lGetPinNumber

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1443  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1444  /*******************************************************************************
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1445  ** Syntax           : uint8 Dio_lGetPinNumber                                 **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1446  **                    (                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1447  **                      ChannelId                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1448  **                    )                                                       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1449  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1450  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1451  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1452  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1453  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1454  ** Reentrancy       : Reentrant                                           **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1455  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1456  ** Parameters (in)  : ChannelId - derived the pin number from ChannelId       **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1457  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1458  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1459  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1460  ** Return value     : uint8 RetVal                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1461  **                                                                            **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1462  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1463  ** - The function like macro is to identify the pin number from the passed    **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1464  **   ChannelId.                                                               **
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1465  *******************************************************************************/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1466  uint8 Dio_lGetPinNumber(Dio_ChannelType ChannelId)
; Function Dio_lGetPinNumber
.L27:
Dio_lGetPinNumber:	.type	func

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1467  {
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1468    uint8 RetVal;
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1469  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1470    RetVal = (uint8)(ChannelId & (uint16)DIO_PIN_LOW4_MASK );
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1471    return(RetVal);
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1472  }
	and	d2,d4,#15
	ret
.L116:
	
__Dio_lGetPinNumber_function_end:
	.size	Dio_lGetPinNumber,__Dio_lGetPinNumber_function_end-Dio_lGetPinNumber
.L76:
	; End of function
	
	.sdecl	'.rodata.Shared.DEFAULT_CONST_16BIT',data,rom,cluster('Dio_kMaskUndefinedPortPins')
	.sect	'.rodata.Shared.DEFAULT_CONST_16BIT'
	.align	4
Dio_kMaskUndefinedPortPins:	.type	object
	.size	Dio_kMaskUndefinedPortPins,84
	.half	8191,248,4095
	.space	14
	.half	511,65535,3,15
	.half	2047,511
	.space	8
	.half	32719,255,4095,255
	.space	16
	.half	253,65535,62
	.space	10
	.half	1023
	.space	2
	.calls	'Dio_ReadChannelGroup','Dio_lGetPortAdr'
	.calls	'Dio_WriteChannelGroup','Dio_lGetPortAdr'
	.calls	'Dio_ReadChannel','Dio_lGetPortNumber'
	.calls	'Dio_ReadChannel','Dio_lGetPortAdr'
	.calls	'Dio_ReadChannel','Dio_lGetPinNumber'
	.calls	'Dio_WriteChannel','Dio_lGetPortNumber'
	.calls	'Dio_WriteChannel','Dio_lGetPortAdr'
	.calls	'Dio_WriteChannel','Dio_lGetPinNumber'
	.calls	'Dio_ReadPort','Dio_lGetPortAdr'
	.calls	'Dio_WritePort','Dio_lGetPortAdr'
	.calls	'Dio_ReadChannelGroup','',0
	.calls	'Dio_WriteChannelGroup','',0
	.calls	'Dio_ReadChannel','',0
	.calls	'Dio_WriteChannel','',0
	.calls	'Dio_ReadPort','',0
	.calls	'Dio_WritePort','',0
	.calls	'Dio_lGetPortNumber','',0
	.calls	'Dio_lGetPortAdr','',0
	.calls	'Dio_lGetPinNumber','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L29:
	.word	9763
	.half	3
	.word	.L30
	.byte	4
.L28:
	.byte	1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L31
.L79:
	.byte	2
	.byte	'unsigned char',0,1,8
.L81:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L83:
	.byte	2
	.byte	'unsigned long int',0,4,7,2
	.byte	'unsigned int',0,4,7,2
	.byte	'int',0,4,5,3
	.byte	'_Ifx_P_OUT_Bits',0,1,143,3,16,4,4
	.byte	'P0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'P1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'P2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'P3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'P4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'P5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'P6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'P7',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'P8',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'P9',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'P10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'P11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'P12',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'P13',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'P14',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'P15',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	215
	.byte	16,0,2,35,2,0,5,1,180,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	281
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMR_Bits',0,1,169,2,16,4,4
	.byte	'PS0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'PS4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'PS8',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'PS12',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'PCL0',0,1
	.word	198
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	198
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	198
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	198
	.byte	1,4,2,35,2,4
	.byte	'PCL4',0,1
	.word	198
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	198
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	198
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	198
	.byte	1,0,2,35,2,4
	.byte	'PCL8',0,1
	.word	198
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	198
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	198
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	198
	.byte	1,4,2,35,3,4
	.byte	'PCL12',0,1
	.word	198
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	198
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	198
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	198
	.byte	1,0,2,35,3,0,5,1,132,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	597
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_ID_Bits',0,1,110,16,4,4
	.byte	'MODREV',0,1
	.word	198
	.byte	8,0,2,35,0,4
	.byte	'MODTYPE',0,1
	.word	198
	.byte	8,0,2,35,1,4
	.byte	'MODNUMBER',0,2
	.word	215
	.byte	16,0,2,35,2,0,5,1,147,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1168
	.byte	4,2,35,0,0,7,4
	.word	198
	.byte	8,3,0,3
	.byte	'_Ifx_P_IOCR0_Bits',0,1,140,1,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	3,5,2,35,0,4
	.byte	'PC0',0,1
	.word	198
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	198
	.byte	3,5,2,35,1,4
	.byte	'PC1',0,1
	.word	198
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	198
	.byte	3,5,2,35,2,4
	.byte	'PC2',0,1
	.word	198
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	198
	.byte	3,5,2,35,3,4
	.byte	'PC3',0,1
	.word	198
	.byte	5,0,2,35,3,0,5,1,163,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1296
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR4_Bits',0,1,166,1,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	3,5,2,35,0,4
	.byte	'PC4',0,1
	.word	198
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	198
	.byte	3,5,2,35,1,4
	.byte	'PC5',0,1
	.word	198
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	198
	.byte	3,5,2,35,2,4
	.byte	'PC6',0,1
	.word	198
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	198
	.byte	3,5,2,35,3,4
	.byte	'PC7',0,1
	.word	198
	.byte	5,0,2,35,3,0,5,1,179,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1511
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR8_Bits',0,1,179,1,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	3,5,2,35,0,4
	.byte	'PC8',0,1
	.word	198
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	198
	.byte	3,5,2,35,1,4
	.byte	'PC9',0,1
	.word	198
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	198
	.byte	3,5,2,35,2,4
	.byte	'PC10',0,1
	.word	198
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	198
	.byte	3,5,2,35,3,4
	.byte	'PC11',0,1
	.word	198
	.byte	5,0,2,35,3,0,5,1,187,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1726
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR12_Bits',0,1,153,1,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	3,5,2,35,0,4
	.byte	'PC12',0,1
	.word	198
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	198
	.byte	3,5,2,35,1,4
	.byte	'PC13',0,1
	.word	198
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	198
	.byte	3,5,2,35,2,4
	.byte	'PC14',0,1
	.word	198
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	198
	.byte	3,5,2,35,3,4
	.byte	'PC15',0,1
	.word	198
	.byte	5,0,2,35,3,0,5,1,171,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1943
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IN_Bits',0,1,118,16,4,4
	.byte	'P0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'P1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'P2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'P3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'P4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'P5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'P6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'P7',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'P8',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'P9',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'P10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'P11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'P12',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'P13',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'P14',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'P15',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	215
	.byte	16,0,2,35,2,0,5,1,155,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	2163
	.byte	4,2,35,0,0,7,24
	.word	198
	.byte	8,23,0,3
	.byte	'_Ifx_P_PDR0_Bits',0,1,204,3,16,4,4
	.byte	'PD0',0,1
	.word	198
	.byte	3,5,2,35,0,4
	.byte	'PL0',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'PD1',0,1
	.word	198
	.byte	3,1,2,35,0,4
	.byte	'PL1',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'PD2',0,1
	.word	198
	.byte	3,5,2,35,1,4
	.byte	'PL2',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'PD3',0,1
	.word	198
	.byte	3,1,2,35,1,4
	.byte	'PL3',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'PD4',0,1
	.word	198
	.byte	3,5,2,35,2,4
	.byte	'PL4',0,1
	.word	198
	.byte	1,4,2,35,2,4
	.byte	'PD5',0,1
	.word	198
	.byte	3,1,2,35,2,4
	.byte	'PL5',0,1
	.word	198
	.byte	1,0,2,35,2,4
	.byte	'PD6',0,1
	.word	198
	.byte	3,5,2,35,3,4
	.byte	'PL6',0,1
	.word	198
	.byte	1,4,2,35,3,4
	.byte	'PD7',0,1
	.word	198
	.byte	3,1,2,35,3,4
	.byte	'PL7',0,1
	.word	198
	.byte	1,0,2,35,3,0,5,1,204,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	2486
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_PDR1_Bits',0,1,225,3,16,4,4
	.byte	'PD8',0,1
	.word	198
	.byte	3,5,2,35,0,4
	.byte	'PL8',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'PD9',0,1
	.word	198
	.byte	3,1,2,35,0,4
	.byte	'PL9',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'PD10',0,1
	.word	198
	.byte	3,5,2,35,1,4
	.byte	'PL10',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'PD11',0,1
	.word	198
	.byte	3,1,2,35,1,4
	.byte	'PL11',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'PD12',0,1
	.word	198
	.byte	3,5,2,35,2,4
	.byte	'PL12',0,1
	.word	198
	.byte	1,4,2,35,2,4
	.byte	'PD13',0,1
	.word	198
	.byte	3,1,2,35,2,4
	.byte	'PL13',0,1
	.word	198
	.byte	1,0,2,35,2,4
	.byte	'PD14',0,1
	.word	198
	.byte	3,5,2,35,3,4
	.byte	'PL14',0,1
	.word	198
	.byte	1,4,2,35,3,4
	.byte	'PD15',0,1
	.word	198
	.byte	3,1,2,35,3,4
	.byte	'PL15',0,1
	.word	198
	.byte	1,0,2,35,3,0,5,1,212,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	2790
	.byte	4,2,35,0,0,7,8
	.word	198
	.byte	8,7,0,3
	.byte	'_Ifx_P_ESR_Bits',0,1,88,16,4,4
	.byte	'EN0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	215
	.byte	16,0,2,35,2,0,5,1,139,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3115
	.byte	4,2,35,0,0,7,12
	.word	198
	.byte	8,11,0,3
	.byte	'_Ifx_P_PDISC_Bits',0,1,182,3,16,4,4
	.byte	'PDIS0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'PDIS1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'PDIS2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'PDIS3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'PDIS4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'PDIS5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'PDIS6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'PDIS7',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'PDIS8',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'PDIS9',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'PDIS10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'PDIS11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'PDIS12',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'PDIS13',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'PDIS14',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'PDIS15',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	215
	.byte	16,0,2,35,2,0,5,1,196,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3455
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_PCSR_Bits',0,1,165,3,16,4,4
	.byte	'SEL0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'SEL1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'SEL2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'SEL3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'SEL4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'SEL5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'SEL6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'reserved_7',0,2
	.word	215
	.byte	3,6,2,35,0,4
	.byte	'SEL10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'SEL11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'reserved_12',0,4
	.word	258
	.byte	19,1,2,35,0,4
	.byte	'LCK',0,1
	.word	198
	.byte	1,0,2,35,3,0,5,1,188,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3821
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR0_Bits',0,1,206,2,16,4,4
	.byte	'PS0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	258
	.byte	28,0,2,35,0,0,5,1,148,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4091
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR4_Bits',0,1,227,2,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	4,4,2,35,0,4
	.byte	'PS4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	258
	.byte	24,0,2,35,0,0,5,1,164,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4238
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR8_Bits',0,1,238,2,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	8,0,2,35,0,4
	.byte	'PS8',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'reserved_12',0,4
	.word	258
	.byte	20,0,2,35,0,0,5,1,172,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4407
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR12_Bits',0,1,216,2,16,4,4
	.byte	'reserved_0',0,2
	.word	215
	.byte	12,4,2,35,0,4
	.byte	'PS12',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	215
	.byte	16,0,2,35,2,0,5,1,156,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4579
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR0_Bits',0,1,232,1,16,4,4
	.byte	'reserved_0',0,2
	.word	215
	.byte	16,0,2,35,0,4
	.byte	'PCL0',0,1
	.word	198
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	198
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	198
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	198
	.byte	1,4,2,35,2,4
	.byte	'reserved_20',0,2
	.word	215
	.byte	12,0,2,35,2,0,5,1,228,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4754
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR4_Bits',0,1,253,1,16,4,4
	.byte	'reserved_0',0,4
	.word	258
	.byte	20,12,2,35,0,4
	.byte	'PCL4',0,1
	.word	198
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	198
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	198
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	198
	.byte	1,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	198
	.byte	8,0,2,35,3,0,5,1,244,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4928
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR8_Bits',0,1,136,2,16,4,4
	.byte	'reserved_0',0,4
	.word	258
	.byte	24,8,2,35,0,4
	.byte	'PCL8',0,1
	.word	198
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	198
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	198
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	198
	.byte	1,4,2,35,3,4
	.byte	'reserved_28',0,1
	.word	198
	.byte	4,0,2,35,3,0,5,1,252,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5102
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR12_Bits',0,1,243,1,16,4,4
	.byte	'reserved_0',0,4
	.word	258
	.byte	28,4,2,35,0,4
	.byte	'PCL12',0,1
	.word	198
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	198
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	198
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	198
	.byte	1,0,2,35,3,0,5,1,236,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5278
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR_Bits',0,1,249,2,16,4,4
	.byte	'PS0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'PS4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'PS8',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'PS12',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	215
	.byte	16,0,2,35,2,0,5,1,140,5,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5434
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR_Bits',0,1,147,2,16,4,4
	.byte	'reserved_0',0,2
	.word	215
	.byte	16,0,2,35,0,4
	.byte	'PCL0',0,1
	.word	198
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	198
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	198
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	198
	.byte	1,4,2,35,2,4
	.byte	'PCL4',0,1
	.word	198
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	198
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	198
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	198
	.byte	1,0,2,35,2,4
	.byte	'PCL8',0,1
	.word	198
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	198
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	198
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	198
	.byte	1,4,2,35,3,4
	.byte	'PCL12',0,1
	.word	198
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	198
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	198
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	198
	.byte	1,0,2,35,3,0,5,1,220,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5767
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_LPCR0_Bits',0,1,192,1,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	258
	.byte	30,0,2,35,0,0,5,1,195,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6115
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_LPCR1_Bits',0,1,200,1,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	258
	.byte	30,0,2,35,0,0,3
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,1,208,1,16,4,4
	.byte	'RDIS_CTRL',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'RX_DIS',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'TERM',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'LRXTERM',0,1
	.word	198
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	258
	.byte	24,0,2,35,0,0,5,1,203,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6239
	.byte	4,2,35,0,6
	.byte	'B_P21',0
	.word	6323
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_LPCR2_Bits',0,1,218,1,16,4,4
	.byte	'reserved_0',0,1
	.word	198
	.byte	8,0,2,35,0,4
	.byte	'LVDSR',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'LVDSRL',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'reserved_10',0,1
	.word	198
	.byte	2,4,2,35,1,4
	.byte	'TDIS_CTRL',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'TX_DIS',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'TX_PD',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'TX_PWDPD',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	215
	.byte	16,0,2,35,2,0,5,1,212,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6503
	.byte	4,2,35,0,0,7,76
	.word	198
	.byte	8,75,0,3
	.byte	'_Ifx_P_ACCEN1_Bits',0,1,82,16,4,4
	.byte	'reserved_0',0,4
	.word	258
	.byte	32,0,2,35,0,0,5,1,131,4,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6756
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_ACCEN0_Bits',0,1,45,16,4,4
	.byte	'EN0',0,1
	.word	198
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	198
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	198
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	198
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	198
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	198
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	198
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	198
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	198
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	198
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	198
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	198
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	198
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	198
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	198
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	198
	.byte	1,0,2,35,1,4
	.byte	'EN16',0,1
	.word	198
	.byte	1,7,2,35,2,4
	.byte	'EN17',0,1
	.word	198
	.byte	1,6,2,35,2,4
	.byte	'EN18',0,1
	.word	198
	.byte	1,5,2,35,2,4
	.byte	'EN19',0,1
	.word	198
	.byte	1,4,2,35,2,4
	.byte	'EN20',0,1
	.word	198
	.byte	1,3,2,35,2,4
	.byte	'EN21',0,1
	.word	198
	.byte	1,2,2,35,2,4
	.byte	'EN22',0,1
	.word	198
	.byte	1,1,2,35,2,4
	.byte	'EN23',0,1
	.word	198
	.byte	1,0,2,35,2,4
	.byte	'EN24',0,1
	.word	198
	.byte	1,7,2,35,3,4
	.byte	'EN25',0,1
	.word	198
	.byte	1,6,2,35,3,4
	.byte	'EN26',0,1
	.word	198
	.byte	1,5,2,35,3,4
	.byte	'EN27',0,1
	.word	198
	.byte	1,4,2,35,3,4
	.byte	'EN28',0,1
	.word	198
	.byte	1,3,2,35,3,4
	.byte	'EN29',0,1
	.word	198
	.byte	1,2,2,35,3,4
	.byte	'EN30',0,1
	.word	198
	.byte	1,1,2,35,3,4
	.byte	'EN31',0,1
	.word	198
	.byte	1,0,2,35,3,0,5,1,251,3,9,4,6
	.byte	'U',0
	.word	258
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	274
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6843
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P',0,1,228,5,25,128,2,6
	.byte	'OUT',0
	.word	557
	.byte	4,2,35,0,6
	.byte	'OMR',0
	.word	1128
	.byte	4,2,35,4,6
	.byte	'ID',0
	.word	1247
	.byte	4,2,35,8,6
	.byte	'reserved_C',0
	.word	1287
	.byte	4,2,35,12,6
	.byte	'IOCR0',0
	.word	1471
	.byte	4,2,35,16,6
	.byte	'IOCR4',0
	.word	1686
	.byte	4,2,35,20,6
	.byte	'IOCR8',0
	.word	1903
	.byte	4,2,35,24,6
	.byte	'IOCR12',0
	.word	2123
	.byte	4,2,35,28,6
	.byte	'reserved_20',0
	.word	1287
	.byte	4,2,35,32,6
	.byte	'IN',0
	.word	2437
	.byte	4,2,35,36,6
	.byte	'reserved_28',0
	.word	2477
	.byte	24,2,35,40,6
	.byte	'PDR0',0
	.word	2750
	.byte	4,2,35,64,6
	.byte	'PDR1',0
	.word	3066
	.byte	4,2,35,68,6
	.byte	'reserved_48',0
	.word	3106
	.byte	8,2,35,72,6
	.byte	'ESR',0
	.word	3406
	.byte	4,2,35,80,6
	.byte	'reserved_54',0
	.word	3446
	.byte	12,2,35,84,6
	.byte	'PDISC',0
	.word	3781
	.byte	4,2,35,96,6
	.byte	'PCSR',0
	.word	4051
	.byte	4,2,35,100,6
	.byte	'reserved_68',0
	.word	3106
	.byte	8,2,35,104,6
	.byte	'OMSR0',0
	.word	4198
	.byte	4,2,35,112,6
	.byte	'OMSR4',0
	.word	4367
	.byte	4,2,35,116,6
	.byte	'OMSR8',0
	.word	4539
	.byte	4,2,35,120,6
	.byte	'OMSR12',0
	.word	4714
	.byte	4,2,35,124,6
	.byte	'OMCR0',0
	.word	4888
	.byte	4,3,35,128,1,6
	.byte	'OMCR4',0
	.word	5062
	.byte	4,3,35,132,1,6
	.byte	'OMCR8',0
	.word	5238
	.byte	4,3,35,136,1,6
	.byte	'OMCR12',0
	.word	5394
	.byte	4,3,35,140,1,6
	.byte	'OMSR',0
	.word	5727
	.byte	4,3,35,144,1,6
	.byte	'OMCR',0
	.word	6075
	.byte	4,3,35,148,1,6
	.byte	'reserved_98',0
	.word	3106
	.byte	8,3,35,152,1,6
	.byte	'LPCR0',0
	.word	6199
	.byte	4,3,35,160,1,6
	.byte	'LPCR1',0
	.word	6448
	.byte	4,3,35,164,1,6
	.byte	'LPCR2',0
	.word	6707
	.byte	4,3,35,168,1,6
	.byte	'reserved_A4',0
	.word	6747
	.byte	76,3,35,172,1,6
	.byte	'ACCEN1',0
	.word	6803
	.byte	4,3,35,248,1,6
	.byte	'ACCEN0',0
	.word	7370
	.byte	4,3,35,252,1,0,9
	.word	7410
.L86:
	.byte	10
	.word	8013
	.byte	3
	.byte	'Dio_ChannelGroupType',0,2,129,2,16,4,6
	.byte	'mask',0
	.word	215
	.byte	2,2,35,0,6
	.byte	'offset',0
	.word	198
	.byte	1,2,35,2,6
	.byte	'port',0
	.word	198
	.byte	1,2,35,3,0,11
	.word	8023
.L102:
	.byte	10
	.word	8095
	.byte	12,1,10
	.word	8105
	.byte	13
	.byte	'__codeptr',0,3,1,1
	.word	8107
	.byte	13
	.byte	'uint8',0,4,90,29
	.word	198
	.byte	13
	.byte	'uint16',0,4,92,29
	.word	215
	.byte	13
	.byte	'uint32',0,4,94,29
	.word	237
	.byte	13
	.byte	'Ifx_P_ACCEN0_Bits',0,1,79,3
	.word	6843
	.byte	13
	.byte	'Ifx_P_ACCEN1_Bits',0,1,85,3
	.word	6756
	.byte	13
	.byte	'Ifx_P_ESR_Bits',0,1,107,3
	.word	3115
	.byte	13
	.byte	'Ifx_P_ID_Bits',0,1,115,3
	.word	1168
	.byte	13
	.byte	'Ifx_P_IN_Bits',0,1,137,1,3
	.word	2163
	.byte	13
	.byte	'Ifx_P_IOCR0_Bits',0,1,150,1,3
	.word	1296
	.byte	13
	.byte	'Ifx_P_IOCR12_Bits',0,1,163,1,3
	.word	1943
	.byte	13
	.byte	'Ifx_P_IOCR4_Bits',0,1,176,1,3
	.word	1511
	.byte	13
	.byte	'Ifx_P_IOCR8_Bits',0,1,189,1,3
	.word	1726
	.byte	13
	.byte	'Ifx_P_LPCR0_Bits',0,1,197,1,3
	.word	6115
	.byte	13
	.byte	'Ifx_P_LPCR1_Bits',0,1,205,1,3
	.word	6239
	.byte	13
	.byte	'Ifx_P_LPCR1_P21_Bits',0,1,215,1,3
	.word	6323
	.byte	13
	.byte	'Ifx_P_LPCR2_Bits',0,1,229,1,3
	.word	6503
	.byte	13
	.byte	'Ifx_P_OMCR0_Bits',0,1,240,1,3
	.word	4754
	.byte	13
	.byte	'Ifx_P_OMCR12_Bits',0,1,250,1,3
	.word	5278
	.byte	13
	.byte	'Ifx_P_OMCR4_Bits',0,1,133,2,3
	.word	4928
	.byte	13
	.byte	'Ifx_P_OMCR8_Bits',0,1,144,2,3
	.word	5102
	.byte	13
	.byte	'Ifx_P_OMCR_Bits',0,1,166,2,3
	.word	5767
	.byte	13
	.byte	'Ifx_P_OMR_Bits',0,1,203,2,3
	.word	597
	.byte	13
	.byte	'Ifx_P_OMSR0_Bits',0,1,213,2,3
	.word	4091
	.byte	13
	.byte	'Ifx_P_OMSR12_Bits',0,1,224,2,3
	.word	4579
	.byte	13
	.byte	'Ifx_P_OMSR4_Bits',0,1,235,2,3
	.word	4238
	.byte	13
	.byte	'Ifx_P_OMSR8_Bits',0,1,246,2,3
	.word	4407
	.byte	13
	.byte	'Ifx_P_OMSR_Bits',0,1,140,3,3
	.word	5434
	.byte	13
	.byte	'Ifx_P_OUT_Bits',0,1,162,3,3
	.word	281
	.byte	13
	.byte	'Ifx_P_PCSR_Bits',0,1,179,3,3
	.word	3821
	.byte	13
	.byte	'Ifx_P_PDISC_Bits',0,1,201,3,3
	.word	3455
	.byte	13
	.byte	'Ifx_P_PDR0_Bits',0,1,222,3,3
	.word	2486
	.byte	13
	.byte	'Ifx_P_PDR1_Bits',0,1,243,3,3
	.word	2790
	.byte	13
	.byte	'Ifx_P_ACCEN0',0,1,128,4,3
	.word	7370
	.byte	13
	.byte	'Ifx_P_ACCEN1',0,1,136,4,3
	.word	6803
	.byte	13
	.byte	'Ifx_P_ESR',0,1,144,4,3
	.word	3406
	.byte	13
	.byte	'Ifx_P_ID',0,1,152,4,3
	.word	1247
	.byte	13
	.byte	'Ifx_P_IN',0,1,160,4,3
	.word	2437
	.byte	13
	.byte	'Ifx_P_IOCR0',0,1,168,4,3
	.word	1471
	.byte	13
	.byte	'Ifx_P_IOCR12',0,1,176,4,3
	.word	2123
	.byte	13
	.byte	'Ifx_P_IOCR4',0,1,184,4,3
	.word	1686
	.byte	13
	.byte	'Ifx_P_IOCR8',0,1,192,4,3
	.word	1903
	.byte	13
	.byte	'Ifx_P_LPCR0',0,1,200,4,3
	.word	6199
	.byte	13
	.byte	'Ifx_P_LPCR1',0,1,209,4,3
	.word	6448
	.byte	13
	.byte	'Ifx_P_LPCR2',0,1,217,4,3
	.word	6707
	.byte	13
	.byte	'Ifx_P_OMCR',0,1,225,4,3
	.word	6075
	.byte	13
	.byte	'Ifx_P_OMCR0',0,1,233,4,3
	.word	4888
	.byte	13
	.byte	'Ifx_P_OMCR12',0,1,241,4,3
	.word	5394
	.byte	13
	.byte	'Ifx_P_OMCR4',0,1,249,4,3
	.word	5062
	.byte	13
	.byte	'Ifx_P_OMCR8',0,1,129,5,3
	.word	5238
	.byte	13
	.byte	'Ifx_P_OMR',0,1,137,5,3
	.word	1128
	.byte	13
	.byte	'Ifx_P_OMSR',0,1,145,5,3
	.word	5727
	.byte	13
	.byte	'Ifx_P_OMSR0',0,1,153,5,3
	.word	4198
	.byte	13
	.byte	'Ifx_P_OMSR12',0,1,161,5,3
	.word	4714
	.byte	13
	.byte	'Ifx_P_OMSR4',0,1,169,5,3
	.word	4367
	.byte	13
	.byte	'Ifx_P_OMSR8',0,1,177,5,3
	.word	4539
	.byte	13
	.byte	'Ifx_P_OUT',0,1,185,5,3
	.word	557
	.byte	13
	.byte	'Ifx_P_PCSR',0,1,193,5,3
	.word	4051
	.byte	13
	.byte	'Ifx_P_PDISC',0,1,201,5,3
	.word	3781
	.byte	13
	.byte	'Ifx_P_PDR0',0,1,209,5,3
	.word	2750
	.byte	13
	.byte	'Ifx_P_PDR1',0,1,217,5,3
	.word	3066
	.byte	9
	.word	7410
	.byte	13
	.byte	'Ifx_P',0,1,138,6,3
	.word	9492
	.byte	13
	.byte	'Dio_LevelType',0,2,237,1,17
	.word	198
	.byte	13
	.byte	'Dio_ChannelType',0,2,243,1,17
	.word	215
	.byte	13
	.byte	'Dio_PortType',0,2,249,1,17
	.word	198
	.byte	13
	.byte	'Dio_PortLevelType',0,2,252,1,17
	.word	215
	.byte	13
	.byte	'Dio_ChannelGroupType',0,2,137,2,3
	.word	8023
	.byte	3
	.byte	'Dio_PortChannelIdType',0,2,139,2,16,8,6
	.byte	'Dio_PortIdConfig',0
	.word	237
	.byte	4,2,35,0,6
	.byte	'Dio_ChannelConfig',0
	.word	237
	.byte	4,2,35,4,0,13
	.byte	'Dio_PortChannelIdType',0,2,145,2,2
	.word	9639
	.byte	7,84
	.word	215
	.byte	8,41,0
.L118:
	.byte	11
	.word	9752
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L30:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,19,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,4,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,5,23,1,58,15,59,15,57,15,11,15,0,0,6,13,0,3,8,73
	.byte	19,11,15,56,9,0,0,7,1,1,11,15,73,19,0,0,8,33,0,47,15,0,0,9,53,0,73,19,0,0,10,15,0,73,19,0,0,11,38,0,73
	.byte	19,0,0,12,21,0,54,15,0,0,13,22,0,3,8,58,15,59,15,57,15,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L31:
	.word	.L147-.L146
.L146:
	.half	3
	.word	.L149-.L148
.L148:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore\\inc',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc',0
	.byte	0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'Dio.h',0,2,0,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0,0
.L149:
.L147:
	.sdecl	'.debug_info',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_info'
.L32:
	.word	354
	.half	3
	.word	.L33
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L35,.L34
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_ReadChannel',0,1,217,6,15
	.word	.L79
	.byte	1,1,1
	.word	.L15,.L80,.L14
	.byte	4
	.byte	'ChannelId',0,1,217,6,47
	.word	.L81,.L82
	.byte	5
	.word	.L15,.L80
	.byte	6
	.byte	'PinPosition',0,1,219,6,17
	.word	.L83,.L84
	.byte	6
	.byte	'RetVal',0,1,220,6,17
	.word	.L79,.L85
	.byte	6
	.byte	'GetPortAddressPtr',0,1,221,6,10
	.word	.L86,.L87
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_abbrev'
.L33:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_line'
.L34:
	.word	.L151-.L150
.L150:
	.half	3
	.word	.L153-.L152
.L152:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L153:
	.byte	5,15,7,0,5,2
	.word	.L15
	.byte	3,216,6,1,5,10,9
	.half	.L126-.L15
	.byte	3,7,1,5,60,3,11,1,5,59,9
	.half	.L125-.L126
	.byte	1,5,55,9
	.half	.L128-.L125
	.byte	3,3,1,5,23,3,125,1,5,20,9
	.half	.L130-.L128
	.byte	3,3,1,5,55,1,5,34,9
	.half	.L129-.L130
	.byte	1,5,26,3,3,1,5,23,9
	.half	.L127-.L129
	.byte	1,5,14,9
	.half	.L131-.L127
	.byte	3,3,1,5,1,3,4,1,7,9
	.half	.L36-.L131
	.byte	0,1,1
.L151:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_ranges'
.L35:
	.word	-1,.L15,0,.L36-.L15,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_info'
.L37:
	.word	345
	.half	3
	.word	.L38
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L40,.L39
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_WriteChannel',0,1,158,7,6,1,1,1
	.word	.L17,.L88,.L16
	.byte	4
	.byte	'ChannelId',0,1,158,7,39
	.word	.L81,.L89
	.byte	4
	.byte	'Level',0,1,158,7,64
	.word	.L79,.L90
	.byte	5
	.word	.L17,.L88
	.byte	6
	.byte	'GetPortAddressPtr',0,1,165,7,19
	.word	.L86,.L91
	.byte	6
	.byte	'OmrVal',0,1,166,7,10
	.word	.L83,.L92
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_abbrev'
.L38:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_line'
.L39:
	.word	.L155-.L154
.L154:
	.half	3
	.word	.L157-.L156
.L156:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L157:
	.byte	5,6,7,0,5,2
	.word	.L17
	.byte	3,157,7,1,5,12,9
	.half	.L133-.L17
	.byte	3,10,1,5,16,9
	.half	.L134-.L133
	.byte	3,16,1,5,62,3,3,1,5,61,9
	.half	.L132-.L134
	.byte	1,5,25,9
	.half	.L136-.L132
	.byte	1,5,7,9
	.half	.L138-.L136
	.byte	3,3,1,5,1,9
	.half	.L135-.L138
	.byte	3,14,1,7,9
	.half	.L41-.L135
	.byte	0,1,1
.L155:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_ranges'
.L40:
	.word	-1,.L17,0,.L41-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_ReadPort')
	.sect	'.debug_info'
.L42:
	.word	323
	.half	3
	.word	.L43
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L45,.L44
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_ReadPort',0,1,233,7,19
	.word	.L81
	.byte	1,1,1
	.word	.L19,.L93,.L18
	.byte	4
	.byte	'PortId',0,1,233,7,45
	.word	.L79,.L94
	.byte	5
	.word	.L19,.L93
	.byte	6
	.byte	'GetPortAddressPtr',0,1,235,7,22
	.word	.L86,.L95
	.byte	6
	.byte	'RetVal',0,1,236,7,22
	.word	.L81,.L96
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadPort')
	.sect	'.debug_abbrev'
.L43:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadPort')
	.sect	'.debug_line'
.L44:
	.word	.L159-.L158
.L158:
	.half	3
	.word	.L161-.L160
.L160:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L161:
	.byte	5,19,7,0,5,2
	.word	.L19
	.byte	3,232,7,1,5,43,3,21,1,9
	.half	.L139-.L19
	.byte	3,2,1,5,36,9
	.half	.L162-.L139
	.byte	3,127,1,5,43,9
	.half	.L163-.L162
	.byte	3,1,1,5,69,9
	.half	.L164-.L163
	.byte	1,5,17,9
	.half	.L165-.L164
	.byte	3,127,1,5,69,9
	.half	.L166-.L165
	.byte	3,1,1,5,41,9
	.half	.L140-.L166
	.byte	1,5,1,3,3,1,7,9
	.half	.L46-.L140
	.byte	0,1,1
.L159:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadPort')
	.sect	'.debug_ranges'
.L45:
	.word	-1,.L19,0,.L46-.L19,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WritePort')
	.sect	'.debug_info'
.L47:
	.word	319
	.half	3
	.word	.L48
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L50,.L49
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_WritePort',0,1,162,8,6,1,1,1
	.word	.L21,.L97,.L20
	.byte	4
	.byte	'PortId',0,1,162,8,34
	.word	.L79,.L98
	.byte	4
	.byte	'Level',0,1,162,8,60
	.word	.L81,.L99
	.byte	5
	.word	.L21,.L97
	.byte	6
	.byte	'GetPortAddressPtr',0,1,169,8,19
	.word	.L86,.L100
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WritePort')
	.sect	'.debug_abbrev'
.L48:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WritePort')
	.sect	'.debug_line'
.L49:
	.word	.L168-.L167
.L167:
	.half	3
	.word	.L170-.L169
.L169:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L170:
	.byte	5,6,7,0,5,2
	.word	.L21
	.byte	3,161,8,1,5,43,3,20,1,5,7,9
	.half	.L141-.L21
	.byte	3,2,1,5,1,9
	.half	.L171-.L141
	.byte	3,3,1,7,9
	.half	.L51-.L171
	.byte	0,1,1
.L168:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WritePort')
	.sect	'.debug_ranges'
.L50:
	.word	-1,.L21,0,.L51-.L21,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_info'
.L52:
	.word	342
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L55,.L54
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_ReadChannelGroup',0,1,206,5,19
	.word	.L81
	.byte	1,1,1
	.word	.L11,.L101,.L10
	.byte	4
	.byte	'ChannelGroupIdPtr',0,1,208,5,31
	.word	.L102,.L103
	.byte	5
	.word	.L11,.L101
	.byte	6
	.byte	'GetPortAddressPtr',0,1,211,5,22
	.word	.L86,.L104
	.byte	6
	.byte	'RetVal',0,1,212,5,22
	.word	.L81,.L105
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_line'
.L54:
	.word	.L173-.L172
.L172:
	.half	3
	.word	.L175-.L174
.L174:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L175:
	.byte	5,19,7,0,5,2
	.word	.L11
	.byte	3,205,5,1,5,59,9
	.half	.L120-.L11
	.byte	3,22,1,5,35,9
	.half	.L119-.L120
	.byte	3,1,1,5,72,9
	.half	.L176-.L119
	.byte	3,1,1,5,45,9
	.half	.L177-.L176
	.byte	1,5,43,3,3,1,5,23,9
	.half	.L178-.L177
	.byte	1,5,1,9
	.half	.L179-.L178
	.byte	3,3,1,7,9
	.half	.L56-.L179
	.byte	0,1,1
.L173:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L11,0,.L56-.L11,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_info'
.L57:
	.word	359
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L60,.L59
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_WriteChannelGroup',0,1,144,6,6,1,1,1
	.word	.L13,.L106,.L12
	.byte	4
	.byte	'ChannelGroupIdPtr',0,1,146,6,31
	.word	.L102,.L107
	.byte	4
	.byte	'Level',0,1,147,6,21
	.word	.L81,.L108
	.byte	5
	.word	.L13,.L106
	.byte	6
	.byte	'GetPortAddressPtr',0,1,155,6,19
	.word	.L86,.L109
	.byte	6
	.byte	'PortVal',0,1,156,6,19
	.word	.L83,.L110
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_line'
.L59:
	.word	.L181-.L180
.L180:
	.half	3
	.word	.L183-.L182
.L182:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L183:
	.byte	5,59,7,0,5,2
	.word	.L13
	.byte	3,167,6,1,5,65,9
	.half	.L184-.L13
	.byte	3,1,1,5,39,9
	.half	.L185-.L184
	.byte	3,127,1,5,69,9
	.half	.L122-.L185
	.byte	1,5,22,9
	.half	.L186-.L122
	.byte	3,4,1,5,32,9
	.half	.L187-.L186
	.byte	1,5,40,9
	.half	.L188-.L187
	.byte	3,2,1,5,24,9
	.half	.L124-.L188
	.byte	1,5,58,3,4,1,5,5,9
	.half	.L121-.L124
	.byte	3,5,1,5,1,9
	.half	.L189-.L121
	.byte	3,2,1,7,9
	.half	.L61-.L189
	.byte	0,1,1
.L181:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_ranges'
.L60:
	.word	-1,.L13,0,.L61-.L13,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_info'
.L62:
	.word	280
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L65,.L64
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_lGetPortNumber',0,1,195,10,14
	.word	.L79
	.byte	1,1,1
	.word	.L23,.L111,.L22
	.byte	4
	.byte	'ChannelId',0,1,195,10,49
	.word	.L81,.L112
	.byte	5
	.word	.L23,.L111
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_line'
.L64:
	.word	.L191-.L190
.L190:
	.half	3
	.word	.L193-.L192
.L192:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L193:
	.byte	5,20,7,0,5,2
	.word	.L23
	.byte	3,199,10,1,5,38,9
	.half	.L194-.L23
	.byte	3,127,1,5,46,9
	.half	.L142-.L194
	.byte	3,1,1,5,1,3,3,1,7,9
	.half	.L66-.L142
	.byte	0,1,1
.L191:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L23,0,.L66-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_info'
.L67:
	.word	301
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L70,.L69
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_lGetPortAdr',0,1,227,10,8
	.word	.L86
	.byte	1,1,1
	.word	.L25,.L113,.L24
	.byte	4
	.byte	'PortNumber',0,1,227,10,37
	.word	.L79,.L114
	.byte	5
	.word	.L25,.L113
	.byte	6
	.byte	'Quotient',0,1,230,10,10
	.word	.L79,.L115
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_line'
.L69:
	.word	.L196-.L195
.L195:
	.half	3
	.word	.L198-.L197
.L197:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L198:
	.byte	5,41,7,0,5,2
	.word	.L25
	.byte	3,150,11,1,5,76,9
	.half	.L199-.L25
	.byte	1,5,14,3,5,1,5,31,9
	.half	.L144-.L199
	.byte	3,1,1,5,15,9
	.half	.L200-.L144
	.byte	1,5,31,9
	.half	.L201-.L200
	.byte	3,1,1,5,68,9
	.half	.L202-.L201
	.byte	1,5,50,9
	.half	.L145-.L202
	.byte	1,5,63,9
	.half	.L203-.L145
	.byte	3,127,1,5,49,9
	.half	.L143-.L203
	.byte	1,5,41,9
	.half	.L204-.L143
	.byte	3,127,1,5,1,9
	.half	.L205-.L204
	.byte	3,6,1,7,9
	.half	.L71-.L205
	.byte	0,1,1
.L196:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L25,0,.L71-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_info'
.L72:
	.word	279
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L75,.L74
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_lGetPinNumber',0,1,186,11,7
	.word	.L79
	.byte	1,1,1
	.word	.L27,.L116,.L26
	.byte	4
	.byte	'ChannelId',0,1,186,11,41
	.word	.L81,.L117
	.byte	5
	.word	.L27,.L116
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_line'
.L74:
	.word	.L207-.L206
.L206:
	.half	3
	.word	.L209-.L208
.L208:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0,0,0,0,0
.L209:
	.byte	5,30,7,0,5,2
	.word	.L27
	.byte	3,189,11,1,5,1,3,2,1,7,9
	.half	.L76-.L27
	.byte	0,1,1
.L207:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L27,0,.L76-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_kMaskUndefinedPortPins')
	.sect	'.debug_info'
.L77:
	.word	238
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\dio_infineon_tricore\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L28
	.byte	3
	.byte	'Dio_kMaskUndefinedPortPins',0,3,255,1,32
	.word	.L118
	.byte	5,3
	.word	Dio_kMaskUndefinedPortPins
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_kMaskUndefinedPortPins')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L15,0,.L125-.L15
	.half	1
	.byte	84
	.word	.L126-.L15,.L127-.L15
	.half	1
	.byte	95
	.word	.L130-.L15,.L129-.L15
	.half	1
	.byte	84
	.word	0,0
.L14:
	.word	-1,.L15,0,.L80-.L15
	.half	2
	.byte	138,0
	.word	0,0
.L87:
	.word	-1,.L15,.L128-.L15,.L129-.L15
	.half	1
	.byte	98
	.word	.L130-.L15,.L80-.L15
	.half	1
	.byte	111
	.word	0,0
.L84:
	.word	-1,.L15,.L127-.L15,.L131-.L15
	.half	1
	.byte	88
	.word	0,0
.L85:
	.word	-1,.L15,.L125-.L15,.L80-.L15
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_loc'
.L103:
	.word	-1,.L11,0,.L119-.L11
	.half	1
	.byte	100
	.word	.L120-.L11,.L101-.L11
	.half	1
	.byte	111
	.word	0,0
.L10:
	.word	-1,.L11,0,.L101-.L11
	.half	2
	.byte	138,0
	.word	0,0
.L104:
	.word	-1,.L11,.L119-.L11,.L101-.L11
	.half	1
	.byte	98
	.word	0,0
.L105:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadPort')
	.sect	'.debug_loc'
.L18:
	.word	-1,.L19,0,.L93-.L19
	.half	2
	.byte	138,0
	.word	0,0
.L95:
	.word	-1,.L19,.L139-.L19,.L93-.L19
	.half	1
	.byte	98
	.word	0,0
.L94:
	.word	-1,.L19,0,.L139-.L19
	.half	1
	.byte	84
	.word	.L139-.L19,.L93-.L19
	.half	1
	.byte	88
	.word	0,0
.L96:
	.word	-1,.L19,.L140-.L19,.L93-.L19
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_loc'
.L89:
	.word	-1,.L17,0,.L132-.L17
	.half	1
	.byte	84
	.word	.L133-.L17,.L88-.L17
	.half	1
	.byte	88
	.word	0,0
.L16:
	.word	-1,.L17,0,.L88-.L17
	.half	2
	.byte	138,0
	.word	0,0
.L91:
	.word	-1,.L17,.L136-.L17,.L137-.L17
	.half	1
	.byte	98
	.word	.L138-.L17,.L88-.L17
	.half	1
	.byte	111
	.word	0,0
.L90:
	.word	-1,.L17,0,.L132-.L17
	.half	1
	.byte	85
	.word	0,0
.L92:
	.word	-1,.L17,.L134-.L17,.L135-.L17
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_loc'
.L107:
	.word	-1,.L13,0,.L121-.L13
	.half	1
	.byte	100
	.word	0,0
.L12:
	.word	-1,.L13,0,.L106-.L13
	.half	2
	.byte	138,0
	.word	0,0
.L109:
	.word	-1,.L13,.L121-.L13,.L106-.L13
	.half	1
	.byte	98
	.word	0,0
.L108:
	.word	-1,.L13,0,.L122-.L13
	.half	1
	.byte	84
	.word	0,0
.L110:
	.word	-1,.L13,.L122-.L13,.L123-.L13
	.half	1
	.byte	84
	.word	.L124-.L13,.L106-.L13
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WritePort')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,0,.L97-.L21
	.half	2
	.byte	138,0
	.word	0,0
.L100:
	.word	-1,.L21,.L141-.L21,.L97-.L21
	.half	1
	.byte	98
	.word	0,0
.L99:
	.word	-1,.L21,0,.L141-.L21
	.half	1
	.byte	85
	.word	.L141-.L21,.L97-.L21
	.half	1
	.byte	95
	.word	0,0
.L98:
	.word	-1,.L21,0,.L141-.L21
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_loc'
.L117:
	.word	-1,.L27,0,.L116-.L27
	.half	1
	.byte	84
	.word	0,0
.L26:
	.word	-1,.L27,0,.L116-.L27
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L113-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L114:
	.word	-1,.L25,0,.L143-.L25
	.half	1
	.byte	84
	.word	0,0
.L115:
	.word	-1,.L25,.L144-.L25,.L145-.L25
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L23,0,.L142-.L23
	.half	1
	.byte	84
	.word	0,0
.L22:
	.word	-1,.L23,0,.L111-.L23
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L210:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_frame'
	.word	12
	.word	.L210,.L11,.L101-.L11
	.sdecl	'.debug_frame',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_frame'
	.word	12
	.word	.L210,.L13,.L106-.L13
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L210,.L15,.L80-.L15
	.sdecl	'.debug_frame',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L210,.L17,.L88-.L17
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadPort')
	.sect	'.debug_frame'
	.word	12
	.word	.L210,.L19,.L93-.L19
	.sdecl	'.debug_frame',debug,cluster('Dio_WritePort')
	.sect	'.debug_frame'
	.word	12
	.word	.L210,.L21,.L97-.L21
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_frame'
	.word	24
	.word	.L210,.L23,.L111-.L23
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_frame'
	.word	24
	.word	.L210,.L25,.L113-.L25
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_frame'
	.word	24
	.word	.L210,.L27,.L116-.L27
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1473  
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1474  /*Memory Map of the DIO Code*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1475  #define DIO_STOP_SEC_CODE
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1476  /*mapping of code and data to specific memory sections via memory mapping file*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1477  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1478    is allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\dio_infineon_tricore\src\Dio.c	  1479  #include "MemMap.h"

	; Module end
