	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 06692445"
	.compiler_invocation	"ctc -f cc09036a --dep-file=Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\.Can_17_MCanP.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --fp-model=+float -D_TASKING_C_TRICORE_ -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\.settings -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Asw -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\compiler -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC\\SupportDocuments -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\lib -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\obj -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Asw -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\dio_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\dio_infineon_tricore\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\integration_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\integration_general\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Hal_Sensor -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output\\generated -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output\\generated\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\PWM3Ph -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Qspi -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Adc_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Adc3ph_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Can_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TLE_9180_Drive -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\UART_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Hal_Sensor -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\Demo_Aurix -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\mak -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\PWM3Ph -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Qspi -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Adc_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Adc3ph_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Can_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TLE_9180_Drive -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\UART_Test -g2 --make-target=Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.src ..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c"
	.compiler_name		"ctc"
	;source	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c'

	
$TC16X
	.sdecl	'.zrodata.Can_17_MCanP..1.cnt',data,rom
	.sect	'.zrodata.Can_17_MCanP..1.cnt'
	.align	2
.1.cnt:	.type	object
	.size	.1.cnt,4
	.word	2147483647
	.sdecl	'.zrodata.Can_17_MCanP..2.cnt',data,rom
	.sect	'.zrodata.Can_17_MCanP..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	-268203776
	.sdecl	'.zrodata.Can_17_MCanP..3.cnt',data,rom
	.sect	'.zrodata.Can_17_MCanP..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	267718527
	.sdecl	'.zrodata.Can_17_MCanP..4.cnt',data,rom
	.sect	'.zrodata.Can_17_MCanP..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	268370911
	.sdecl	'.zrodata.Can_17_MCanP..5.cnt',data,rom
	.sect	'.zrodata.Can_17_MCanP..5.cnt'
	.align	2
.5.cnt:	.type	object
	.size	.5.cnt,4
	.word	2147482623
	.sdecl	'.zrodata.Can_17_MCanP..6.cnt',data,rom
	.sect	'.zrodata.Can_17_MCanP..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	268374011
	.sdecl	'.zrodata.Can_17_MCanP..7.cnt',data,rom
	.sect	'.zrodata.Can_17_MCanP..7.cnt'
	.align	2
.7.cnt:	.type	object
	.size	.7.cnt,4
	.word	16191359
	.sdecl	'.zrodata.Can_17_MCanP..8.cnt',data,rom
	.sect	'.zrodata.Can_17_MCanP..8.cnt'
	.align	2
.8.cnt:	.type	object
	.size	.8.cnt,4
	.word	268373239
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_Init')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_Init

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     1  /******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     2  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     4  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     5  ** All rights reserved.                                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     6  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     7  ** This document contains proprietary information belonging to Infineon      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     8  ** Technologies. Passing on and copying of this document, and communication  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	     9  ** of its contents is not permitted without prior written authorization.     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    10  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    11  *******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    12  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    13  **  $FILENAME   : Can_17_MCanP.c $                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    14  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    15  **  $CC VERSION : \main\dev_tc23x_as4.0.3\93 $                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    16  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    17  **  $DATE       : 2017-01-30 $                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    18  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    19  **  AUTHOR    : DL-AUTOSAR-Engineering                                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    20  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    21  **  VENDOR    : Infineon Technologies                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    22  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    23  **  DESCRIPTION  : This file contains                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    24  **                - CAN driver API implementation                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    25  **                - implementation of the interrupt service routines         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    26  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    27  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    28  **                                                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    29  ******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    30  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    31  /**  TRACEABILITY: [cover parentID=DS_NAS_CAN_PR912,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    32  DS_NAS_CAN_PR228_1,DS_AS403_CAN365,DS_AS_CAN079
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    33  DS_NAS_CAN_PR843,DS_AS_CAN027_CAN028_CAN082_CAN083_CAN424,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    34  SAS_NAS_ALL_PR749,SAS_NAS_ALL_PR102,SAS_NAS_ALL_PR470,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    35  SAS_NAS_ALL_PR128,SAS_NAS_ALL_PR70,SAS_NAS_ALL_PR1652,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    36  SAS_NAS_ALL_PR630_PR631,DS_NAS_CAN_PR1650_PR1654,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    37  DS_NAS_CAN_PR131,DS_NAS_CAN_PR115,DS_NAS_CAN_PR1651_PR235_PR236_PR628]
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    38  [/cover]                                                                 **/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    39  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    40  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    41  **                      Includes                                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    42  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    43  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    44  /* Register definition file for Aurix target */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    45  #include "IfxCan_reg.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    46  #include "IfxSrc_reg.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    47  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    48  /* Include services for suspend/resume interrupts */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    49  #include "SchM_17_McalCfg.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    50  #include SCHM_CAN_17_MCANP_HEADER
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    51  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    52  /* CAN module header file, this includes CAN Module configuration header file */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    53  #include "Can_17_MCanP.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    54  #include "Can_17_MCanP_Platform.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    55  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    56  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    57  /* Include the declarations of CAN callback functions and types */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    58  #include "CanIf_Cbk.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    59  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    60  /* Include Diagnostic Event Manager header file */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    61  #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    62  #include "Dem.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    63  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    64  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    65  /* Include the declarations of EcuM callback functions and types */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    66  #if (CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    67  #include "EcuM_Cbk.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    68  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    69  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    70  /* Inclusion of CAN Test Stubs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    71  #ifdef IFX_CAN_DEBUG02
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    72  #include "Test_CanDebug.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    73  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    74  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    75  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    76  ** TRACEABILITY: [cover parentID=DS_AS403_CAN111,DS_NAS_CAN_PR730]            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    77  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    78  **               Imported Compiler Switch Check - Version check               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    79  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    80  **               [/cover]                                                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    81  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    82  /* Version check */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    83  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    84  /* Check if the correct version of Can_17_MCanP.h is included */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    85  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    86  #ifndef CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    87  #error "CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    88  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    89  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    90  #ifndef CAN_17_MCANP_AR_RELEASE_MINOR_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    91  #error "CAN_17_MCANP_AR_RELEASE_MINOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    92  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    93  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    94  #ifndef CAN_17_MCANP_AR_RELEASE_REVISION_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    95  #error "CAN_17_MCANP_AR_RELEASE_REVISION_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    96  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    97  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    98  #if ( CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION != 4U )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	    99  #error "CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   100  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   101  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   102  #if ( CAN_17_MCANP_AR_RELEASE_MINOR_VERSION != 0U )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   103  #error "CAN_17_MCANP_AR_RELEASE_MINOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   104  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   105  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   106  /* Check for definition of SW version Information */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   107  #ifndef CAN_17_MCANP_SW_MAJOR_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   108  #error "CAN_17_MCANP_SW_MAJOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   109  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   110  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   111  #ifndef CAN_17_MCANP_SW_MINOR_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   112  #error "CAN_17_MCANP_SW_MINOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   113  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   114  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   115  #ifndef CAN_17_MCANP_SW_PATCH_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   116  #error "CAN_17_MCANP_SW_PATCH_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   117  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   118  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   119  /* Check for Correct inclusion of headers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   120  #if ( CAN_17_MCANP_SW_MAJOR_VERSION != 2U )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   121  #error "CAN_17_MCANP_SW_MAJOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   122  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   123  #if ( CAN_17_MCANP_SW_MINOR_VERSION != 6U )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   124  #error "CAN_17_MCANP_SW_MINOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   125  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   126  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   127  /* Inter Module Check */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   128  /* Check for the correct version usage in the used modules */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   129  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   130  /* Det AUTOSAR Version Info Check */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   131  #if ( CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   132  #ifndef DET_AR_RELEASE_MAJOR_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   133  #error "DET_AR_RELEASE_MAJOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   134  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   135  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   136  #ifndef DET_AR_RELEASE_MINOR_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   137  #error "DET_AR_RELEASE_MINOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   138  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   139  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   140  #if (IFX_DET_VERSION_CHECK == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   141  #if ( DET_AR_RELEASE_MAJOR_VERSION != CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   142  #error "DET_AR_RELEASE_MAJOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   143  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   144  #if ( DET_AR_RELEASE_MINOR_VERSION != CAN_17_MCANP_AR_RELEASE_MINOR_VERSION )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   145  #error "DET_AR_RELEASE_MINOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   146  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   147  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   148  #endif /* #if (IFX_DET_VERSION_CHECK == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   149  #endif /* #if ( CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   150  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   151  /* Dem AUTOSAR Version Info Check */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   152  #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   153  #ifndef DEM_AR_RELEASE_MAJOR_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   154  #error "DEM_AR_RELEASE_MAJOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   155  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   156  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   157  #ifndef DEM_AR_RELEASE_MINOR_VERSION
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   158  #error "DEM_AR_RELEASE_MINOR_VERSION is not defined. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   159  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   160  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   161  #if (IFX_DEM_VERSION_CHECK == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   162  #if ( DEM_AR_RELEASE_MAJOR_VERSION != CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   163  #error "DEM_AR_RELEASE_MAJOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   164  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   165  #if ( DEM_AR_RELEASE_MINOR_VERSION != CAN_17_MCANP_AR_RELEASE_MINOR_VERSION )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   166  #error "DEM_AR_RELEASE_MINOR_VERSION does not match. "
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   167  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   168  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   169  #endif /* #if (IFX_DEM_VERSION_CHECK == STD_ON)  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   170  #endif /* #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   171  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   172  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   173  **                      Private Macro Definitions                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   174  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   175  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   176  /*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   177  For internal debugging only;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   178  To simulate timeout error;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   179  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   180  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   181  #ifdef IFX_CAN_DEBUG
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   182  extern volatile uint8 TestCan_DebugMask;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   183  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   184  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   185  #ifdef IFX_CAN_DEBUG01
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   186  extern volatile uint32 TestCan_DebugMask01;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   187  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   188  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   189  #ifdef IFX_CAN_DEBUG03
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   190  extern volatile uint32 TestCan_DebugMask03;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   191  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   192  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   193  #ifdef IFX_CAN_DEBUG04
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   194  extern volatile uint32 TestCan_DebugMask04;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   195  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   196  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   197  #ifdef IFX_CAN_DEBUG05
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   198  extern volatile uint32 TestCan_DebugMask05;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   199  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   200  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   201  #ifdef IFX_CAN_DEBUG06
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   202  extern volatile uint8 TestCan_DebugMask06;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   203  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   204  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   205  /* Panel commands for static allocation */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   206  #define CAN_PANCMD_STATIC_ALLOCATE      ((uint8)2U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   207  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   208  /* Bit field positions of message object control/status register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   209  #define CAN_MOCTR_RXPND_CLR             (0x00000001U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   210  #define CAN_MOCTR_TXPND_CLR             (0x00000002U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   211  #define CAN_MOCTR_RXUPD_CLR             (0x00000004U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   212  #define CAN_MOCTR_RXUPD_CLR1            (0xF000F004U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   213  #define CAN_MOCTR_NEWDAT_CLR            (0x00000008U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   214  #define CAN_MOSTAT_MSGLST_CLR           (0x00000010U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   215  #define CAN_MOCTR_MSGVAL_CLR            (0x00000020U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   216  #define CAN_MOCTR_RXEN_CLR              (0x00000080U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   217  #define CAN_MOCTR_TXRQ_CLR              (0x00000100U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   218  #define CAN_MOCTR_TXEN1_CLR             (0xF000F400U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   219  #define CAN_MOCTR_DIR_CLR               (0x00000800U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   220  #define CAN_MOCTR_MSGVAL_MASK           (0x0FFF0FFFU)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   221  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   222  #define CAN_MOSTAT_TXPND_MASK           (0x00000002U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   223  #define CAN_MOSTAT_RXPND_MASK           (0x00000001U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   224  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   225  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   226  /* To clear MOSTAT bits - TXEN0, TXRQ and NEWDAT */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   227  #define CAN_MOCTR_WRITE_REQ_CLR         (0x00000308U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   228  #define CAN_MOCTR_WRITE_REQ_CLR1        (0xF000F308U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   229  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   230  /* To Enable/Disable CAN Node via NCRx.INIT */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   231  #define CAN_NODE_ENABLE                 (0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   232  #define CAN_NODE_DISABLE                (1U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   233  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   234  /* To Enable/Disable Transmission via NCRx.TXDIS */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   235  #define CAN_NODE_TX_ENABLE              (0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   236  #define CAN_NODE_TX_DISABLE             (1U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   237  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   238  /* Invalid CAN controller Id. Used for mapping non-activated CAN Controllers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   239  #define CAN_INVALID_HW_CONTROLLER_ID    ((uint8)255)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   240  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   241  /* Bit field position of ALERT bit in Node Status Register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   242  #define CAN_NSR_ALERT                   (0x00000020U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   243  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   244  /* Node status register: Mask value for writable bits */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   245  #define CAN_NSR_WRITABLE_VALUE_MASK     (0x3FFU)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   246  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   247  /* Bit field positions of Node Control Register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   248  #define CAN_NCR_ALIE                    (0x00000008U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   249  #define CAN_NCR_CCE                     (0x00000040U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   250  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   251  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   252  #define CAN_FCR_FDF_MASK                (0x00000040U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   253  #define CAN_MSGID_MASK                  (0x40000000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   254  #define CAN_MSGID_MASK1                 (0x00004000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   255  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   256  /* CLKSEL values for selecting clock source via MCR register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   257  #define CAN_MCR_CLKSEL_NO_CLOCK         (0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   258  #define CAN_MCR_CLKSEL_FASYN_CAN        (1U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   259  #define CAN_MCR_CLKSEL_FERAY_PLL        (4U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   260  #define CAN_MCR_CLKSEL_EXTOSCLTR        (2U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   261  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   262  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   263  /* Bit field positions of MO FIFO function control Register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   264  #define CAN_FIFO_MOFCR                  (0x00040001U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   265  #define CAN_FIFO_MOFCR_MMC_BIT          (0x01U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   266  #define CAN_FD64BYTES_MOFCR_MMC_BIT     (0x05U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   267  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   268  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   269  /* Bit field positions of MO FIFO pointer Register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   270  #define CAN_MOFGPR_SEL_SHIFT            (24U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   271  #define CAN_MOFGPR_TOP_SHIFT            (8U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   272  #define CAN_MOFGPR_CUR_SHIFT            (16U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   273  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   274  /* Macro for MOCTR Setting of Rx FIFO slave objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   275  #define CAN_MOCTR_RX_FIFO_SLAVE         (0x00200080U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   276  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   277  /* Macro for MASK */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   278  #define CAN_8BIT_MASK                   (0x000000FFU)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   279  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   280  /* Bit field positions of CAN Service Request Control Register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   281  #define CAN_SRC_CLRR                    (0x02000000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   282  #define CAN_SRE_BIT_POS                 (10U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   283  #define CAN_SRC_MASK_NOCLR              (0x80000000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   284  #define CAN_SRC_MASK_NOSET              (0x00000000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   285  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   286  /* Values */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   287  #define CAN_ZERO                        (0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   288  #define CAN_ONE                         (1U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   289  #define CAN_TWO                         (2U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   290  #define CAN_THREE                       (3U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   291  #define CAN_FOUR                        (4U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   292  #define CAN_SIX                         (6U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   293  #define CAN_SEVEN                       (7U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   294  #define CAN_EIGHT                       (8U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   295  #define CAN_NINE                        (9U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   296  #define CAN_ELEVEN                      (11U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   297  #define CAN_FIFTEEN                     (15U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   298  #define CAN_TWENTY_FOUR                 (24U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   299  #define CAN_THIRTY_TWO                  (32U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   300  #define CAN_THIRTY_SIX                  (36U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   301  #define CAN_SIXTY_FOUR                  (64U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   302  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   303  #define CAN_8BITDIV3FACTOR              (0xABU)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   304  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   305  #define EVENTTYPE_ZERO                  (0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   306  #define EVENTTYPE_ONE                   (1U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   307  #define EVENTTYPE_TWO                   (2U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   308  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   309  /* Values used to calculate Kernel Count and Controller's ID w.r.t Kernel */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   310  #define CAN_KERCNT                      (CAN_NUM_CONTROLLERS_IN_KERNEL1)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   311  #define CAN_NODNKER                     (3U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   312  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   313  /* Positions */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   314  #define CAN_POS_5                       (5U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   315  #define CAN_POS_18                      (18U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   316  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   317  /* Bus-off error limit value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   318  #define CAN_BUSOFF_LIMIT                (0xFFU)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   319  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   320  #if ((CAN_RESET_SFR_AT_INIT == STD_ON)||(CAN_DEINIT_API == STD_ON))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   321  #define CAN_KERNEL_RESET_TIMEOUT        (0x40U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   322  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   323  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   324  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   325  /* Shift values for bit fields of Message Object Arbitration Register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   326  #define CAN_PRI_CLASS_ID_BASED          (2U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   327  #define CAN_MOAR_ID_STD_SHIFT           (18U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   328  #define CAN_PRIORITY_ID_BASED           ((uint32)0x80000000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   329  #define CAN_USE_EXTENDED_ID             ((uint32)0x20000000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   330  #define CAN_FD_EXTENDED_SET             ((uint32)0x40000000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   331  #define CAN_FD_STANDARD_SET             ((uint16)0x4000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   332  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   333  /* Maximum size of the CAN Data */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   334  #define CAN_MAX_DATA_LENGTH          (8U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   335  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   336  /* Maximum size of the CAN FD  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   337  #define CAN_MAX_FD_LENGTH            (64U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   338  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   339  /* Shift values for storing interrupt enabled status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   340  #define CAN_RX_INT_SHIFT                (1U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   341  #define CAN_TX_INT_SHIFT                (2U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   342  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   343  /* Mask for maximum hardware objects per message pending register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   344  #define CAN_MAX_HWOBJ_PER_MSPND_REG_1   (0x1FU)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   345  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   346  /* Number of message pending registers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   347  #define CAN_NUM_MSPND_REGS              (8U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   348  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   349  /* MSID register value if there is no message pending bit set. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   350  #define CAN_MSID_NO_MSG_PND_VALUE       (0x00000020U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   351  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   352  /* Macro for shift count of MPN[7:5] bits (indicate MSPND register used) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   353  #define CAN_MOIPR_MPN_MSPND_SHIFT       (5U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   354  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   355  /* Macro to set MSB for Extended messages */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   356  #define CAN_EXTENDED_MSB_SET            (0x80000000U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   357  #define CAN_PDUINFO_ID_MASK             (0x1FFFFFFFU)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   358  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   359  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   360  #define CAN_RXSize                        (64U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   361  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   362  #define CAN_RXSize                        (8U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   363  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   364  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   365  #define CAN_MOSize_FD                     (3U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   366  #define CAN_MOSize_STD                    (1U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   367  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   368  #if (CAN_BR_ERAY_PLL_CLKSEL == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   369  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   370  /* Select fERAY as the input source */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   371  #define CAN_MCR_CLKSEL         (CAN_MCR_CLKSEL_FERAY_PLL)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   372  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   373  #elif (CAN_BR_EXT_OSLTR_CLKSEL == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   374      /* Select fOSL as the input source */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   375  #define CAN_MCR_CLKSEL         (CAN_MCR_CLKSEL_EXTOSCLTR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   376  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   377  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   378      /* Select fASYN as the input source */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   379  #define CAN_MCR_CLKSEL         (CAN_MCR_CLKSEL_FASYN_CAN)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   380  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   381  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   382  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   383  #define CAN_NUM_FOUR                     (0x4U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   384  #define CAN_NUM_EIGHT                    (0x8U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   385  /* Mask for valid bits */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   386  #define CAN_MO_PIN_SHIFT_MASK             (0x000000FFU)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   387  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   388  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   389    calls definition, it is declared as a function like macro*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   390  #define CAN_MO_BIT_SHIFT_COUNT(index)       (CAN_NUM_EIGHT * \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   391                                                ((index) % (CAN_NUM_FOUR)))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   392  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   393  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   394    calls definition, it is declared as a function like macro*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   395  #define CAN_MO_SETMASK(index)      ((uint32)CAN_MO_PIN_SHIFT_MASK << \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   396                                                 CAN_MO_BIT_SHIFT_COUNT(index))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   397  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   398  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   399    calls definition, it is declared as a function like macro*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   400  #define CAN_MO_CLEARMASK(index)         (~CAN_MO_SETMASK(index))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   401  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   402  /*----------------------------------------------------------------------------*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   403  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   404  /*----------------------------------------------------------------------------*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   405  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   406  /*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   407  Values for CAN Driver states.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   408  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   409  /* CAN Driver is NOT initialized. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   410  #define  CAN_DS_UNINIT                  ((Can_17_MCanP_DriverStateType)0)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   411  /* CAN Driver is initialized. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   412  #define  CAN_DS_READY                   ((Can_17_MCanP_DriverStateType)1)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   413  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   414  /*----------------------Register Address Translation--------------------------*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   415  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   416  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   417  /* CAN Service Request Control Registers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   418  #define CAN_SRC                  ((volatile Ifx_SRC_SRCR*)(void *)&SRC_CANINT0)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   419  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   420  /*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   421  Service Request Node Allocation/Mapping:
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   422  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   423  N : Number of CAN Controller in the device
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   424  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   425  Node X --> Transmit SRN = X
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   426  --> Receive SRN = N + X
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   427  --> BusOff SRN = (2 * N) + X*Y ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   428  Y = 0 for all EP devices, Y = 1 for all HE devices
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   429  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   430  For Example,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   431  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   432  Mapping for TC27x --> N = 4, i.e., 4 CAN Controllers(Nodes):
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   433  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   434  |------------------|--------------|--------------|--------------|--------------|
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   435  |       TC27xCA    | Controller 0 | Controller 1 | Controller 2 | Controller 3 |
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   436  |------------------|--------------|--------------|--------------|--------------|
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   437  |Transmit interrupt|     SRN0     |      SRN1    |     SRN2     |     SRN3     |
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   438  |------------------|--------------|--------------|--------------|--------------|
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   439  | Receive interrupt|     SRN4     |      SRN5    |     SRN6     |     SRN7     |
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   440  |------------------|--------------|--------------|--------------|--------------|
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   441  |BusOff interrupt  |     SRN8     |      SRN9    |     SRN10    |     SRN11    |
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   442  *------------------*--------------*--------------*--------------*--------------*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   443  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   444  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   445  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   446  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   447  **                      Private Type Definitions                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   448  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   449  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   450  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   451  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   452  **                      Private Function Declarations                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   453  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   454  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   455  #define CAN_17_MCANP_START_SEC_CODE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   456  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   457  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   458  /* Function to initialize CAN Module global variables */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   459  IFX_LOCAL_INLINE void Can_lInitGlobalVar(void);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   460  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   461  /* Function to initialize CAN Module clock/timing registers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   462  IFX_LOCAL_INLINE Std_ReturnType Can_lInitClkSetting(void);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   463  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   464  #if ((CAN_RESET_SFR_AT_INIT == STD_ON)||(CAN_DEINIT_API == STD_ON))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   465  /* Initializes the Kernel registers to default value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   466  static void Can_lResetSFR(uint8 KerIdx,uint8 ApiAccesId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   467  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   468  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   469  /* Function to check for CAN module hardware failure */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   470  IFX_LOCAL_INLINE Std_ReturnType Can_lInitDemCheck(void);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   471  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   472  /* Function to initialize CAN controllers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   473  IFX_LOCAL_INLINE void Can_lInitializeController(uint8 ControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   474                                              uint8 HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   475  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   476  /* Function to initialize CAN controller status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   477  IFX_LOCAL_INLINE void Can_lInitControllerStatus(void);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   478  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   479  /* Function to initialize message objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   480  IFX_LOCAL_INLINE Std_ReturnType Can_lInitMsgObj(void);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   481  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   482  /* Function to initialize transmit message objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   483  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   484  IFX_LOCAL_INLINE Std_ReturnType Can_lInitTxMsgObj(void);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   485  #if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   486  IFX_LOCAL_INLINE uint16 Can_lCalculateLoopIndex\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   487                                        (uint8 HwControllerId,uint16 HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   488  #endif /*#if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   489  #endif /*#if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   490  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   491  /* Function to initialize receive message objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   492  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   493  IFX_LOCAL_INLINE Std_ReturnType Can_lInitRxMsgObj(void);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   494  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   495  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   496  #if (CAN_CHANGE_BAUDRATE_API == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   497  /* checks if the baudrate is configured or not */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   498  static uint8 Can_lSearchBaudrate(uint8 Controller, const uint16 Baudrate);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   499  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   500  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   501  /* Function to disable CAN module interrupts */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   502  IFX_LOCAL_INLINE void Can_lDisableInterrupts (uint8 Controller);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   503  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   504  /* Function to enable CAN module interrupts */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   505  IFX_LOCAL_INLINE void Can_lEnableInterrupts (uint8 Controller);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   506  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   507  /* Function to check DET for Can_17_MCanP_Write API  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   508  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   509  IFX_LOCAL_INLINE Std_ReturnType Can_lWriteDetCheck(Can_HwHandleType Hth,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   510                                                 const Can_PduType *PduInfo);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   511  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   512  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   513  /* Function to clear and enable interrupt service request */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   514  IFX_LOCAL_INLINE void
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   515    Can_lClearAndEnableInterrupt(uint8 ServiceRequestNumber);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   516  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   517  /* Function to program message object for transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   518  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   519  IFX_LOCAL_INLINE Can_ReturnType Can_lWriteMsgObj(uint8 HthIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   520                                               uint16 HwObjectId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   521                                               const Can_PduType *PduInfo);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   522  IFX_LOCAL_INLINE uint8 Can_lindexcheck(uint8 index,uint8 locindex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   523  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   524  IFX_LOCAL_INLINE void Can_lFDFset(uint8 KerIdx,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   525                                             uint8 HwCtrlIDKer,uint16 HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   526  #endif/*#if (CAN_FD_ENABLE== STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   527  #endif/*#if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   528  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   529  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   530  /* Function for handling message reception */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   531  static void Can_lReceiveHandler(uint8 HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   532  /* Function to clear a receive message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   533  static void Can_lClearReceivedMsg(uint8 HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   534  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   535  IFX_LOCAL_INLINE uint8 Can_lDataIndexMapping(uint8 MoDataIndex,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   536                                                            uint8 locMoDataIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   537  IFX_LOCAL_INLINE uint8 Can_lCalculateHrhId(uint8 KerIdx,uint16 HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   538  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   539  /* Function to handle wakeup event */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   540  static void Can_lWakeupHandler(uint8 HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   541  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   542  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   543  /* Function to extract data from message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   544  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   545  IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractData(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   546                                                    uint16 HwObjectId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   547                                                    uint8 MsgIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   548                                                    uint8 PndBitPosition
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   549                                                    );
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   550  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   551  IFX_LOCAL_INLINE void Can_lRxIsrExtractData(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   552                                          uint16 HwObjectId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   553                                          uint8 MsgIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   554                                          uint8 PndBitPosition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   555  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   556  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   557  #endif /*#if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   558  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   559  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   560  /* Function for handling message reception */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   561  static void Can_lReceiveHandlerRuntime(uint8 HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   562  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   563  /* Function to extract data from message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   564  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   565  IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractDataRuntime
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   566                                                 (uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   567                                                    uint16 HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   568  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   569  IFX_LOCAL_INLINE void Can_lRxIsrExtractDataRuntime(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   570                                          uint16 HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   571  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   572  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   573  static void Can_lClearReceivedMsgRuntime(uint8 HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   574  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   575  /* Function to handle wakeup event */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   576  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   577  static void Can_lWakeupHandlerRuntime(uint8 HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   578  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   579  #endif /*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   580  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   581  /* Function to allocate hardware objects to CAN controllers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   582  static Std_ReturnType Can_lAllocateHwObject(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   583                                              uint16 HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   584  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   585  /* Function to handle CAN Controller state transitions if wakeup is supported */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   586  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   587  IFX_LOCAL_INLINE void Can_lSetModeWuSupportOn(uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   588                                            uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   589                                            Can_StateTransitionType Transition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   590  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   591  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   592  /* Function to handle CAN Controller state transitions,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   593  if wakeup is not supported */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   594  IFX_LOCAL_INLINE void Can_lSetModeWuSupportOff(uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   595                                             uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   596                                             Can_StateTransitionType Transition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   597  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   598  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   599  /* Function for checking wrong parameter (Controller) to an API.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   600  Used in APIs affecting single CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   601  static Std_ReturnType Can_lReportDetParamController(uint8 ControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   602                                                      uint8 ServiceId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   603  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   604  /* Function to check for CAN driver initialization status for DET checking */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   605  static Std_ReturnType Can_lReportDetUninit(uint8 ServiceId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   606  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   607  /* Function to check for invalid CAN controller state transitions */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   608  IFX_LOCAL_INLINE Std_ReturnType Can_lModeDetCheck(uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   609                                              Can_StateTransitionType Transition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   610  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   611  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   612  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   613  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   614  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   615  /* Function to Initialize Rx FIFO Message Objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   616  IFX_LOCAL_INLINE Std_ReturnType Can_lRxFifoInit(void);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   617  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   618  /* Function to Initialize Rx FIFO Base Message Object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   619  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   620  IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit(
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   621    const Can_RxFifoConfigType* RxFifoCfgPtr,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   622    uint16 FifoIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   623    uint8 FrameType);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   624  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   625  IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit(
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   626    const Can_RxFifoConfigType* RxFifoCfgPtr,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   627    uint16 FifoIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   628  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)        */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   629  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   630  /* Function to handle FIFO reception event */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   631  IFX_LOCAL_INLINE void Can_lRxFifoHandler(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   632                                       uint16 HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   633  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   634  /* Function to extract data from receive FIFO */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   635  IFX_LOCAL_INLINE void Can_lRxFifoExtractData(uint16 FifoTopBot,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   636                                           uint8 CurrentMo,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   637                                           uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   638                                           uint16 Hfh,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   639                                           uint8 Threshold);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   640  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   641  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   642  #define CAN_17_MCANP_STOP_SEC_CODE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   643  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   644   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   645  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   646  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   647  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   648  **                      Global Constant Definitions                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   649  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   650  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   651  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   652  **                      Global Variable Definitions                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   653  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   654  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   655  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   656  **                      Private Constant Definitions                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   657  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   658  /* The addresses of registers are derived from SFR file included in mcureg.h */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   659  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   660  #define CAN_17_MCANP_START_SEC_CONST_8BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   661  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   662   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   663  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   664  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   665  #ifdef CAN_MOD_R_AVAILABLE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   666  /*Number of CAN Controllers per Kernel */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   667  static const uint8 CAN_NUM_CONTROLLERS_IN_KERNEL[] =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   668  { CAN_NUM_CONTROLLERS_IN_KERNEL1,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   669  CAN_NUM_CONTROLLERS_IN_DEVICE - CAN_NUM_CONTROLLERS_IN_KERNEL1};
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   670  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   671  /*Number of CAN Controllers per Kernel */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   672  static const uint8 CAN_NUM_CONTROLLERS_IN_KERNEL[] =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   673  { CAN_NUM_CONTROLLERS_IN_KERNEL1 };
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   674  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   675  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   676  #define CAN_17_MCANP_STOP_SEC_CONST_8BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   677  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   678   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   679  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   680  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   681  #define CAN_17_MCANP_START_SEC_CONST_32BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   682  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   683   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   684  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   685  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   686  #if(CAN_PB_FIXEDADDR == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   687  /* The config pointer is initialised to first instance of configuration */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   688  const Can_17_MCanP_ConfigType* const Can_kConfigPtr =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   689    &Can_17_MCanP_ConfigRoot[0];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   690  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   691  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   692  #define CAN_17_MCANP_STOP_SEC_CONST_32BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   693  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   694   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   695  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   696  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   697  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   698  /******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   699  **                      Private Variable Definitions                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   700  ******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   701  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   702  #define CAN_17_MCANP_START_SEC_VAR_16BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   703  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   704   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   705  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   706  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   707  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   708  /* SW Handle passed by CAN Interface to Can_17_MCanP_Write API. This will
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   709  identify the request in the confirmation callback function,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   710  CanIf_TxConfirmation(). */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   711  static PduIdType
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   712    Can_SwObjectHandle[CAN_NUM_KERNELS_IN_DEVICE][CAN_TX_HARDWARE_OBJECTID_MAX];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   713  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   714  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   715  #define CAN_17_MCANP_STOP_SEC_VAR_16BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   716  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   717   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   718  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   719  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   720  #define CAN_17_MCANP_START_SEC_VAR_8BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   721  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   722   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   723  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   724  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   725  /* This variable keeps track of number of calls to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   726  Can_17_MCanP_DisableControllerInterrupts API. It is used to implement
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   727  incremental disable functionality. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   728  #if (CAN_DEBUG_SUPPORT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   729  /*IFX_MISRA_RULE_08_10_STATUS=Can_17_MCanP_InterruptDisableCount variable is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   730  declared as extern in Can_17_MCanP_Dbg.h, which will be included by
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   731  application for debugging*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   732  uint8 Can_17_MCanP_InterruptDisableCount[CAN_NUM_CONTROLLER_MAX];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   733  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   734  static uint8 Can_17_MCanP_InterruptDisableCount[CAN_NUM_CONTROLLER_MAX];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   735  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   736  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   737  /* This variable stores status of whether interrupts are enabled */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   738  static uint8 Can_InterruptsEnabledStatus[CAN_NUM_CONTROLLER_MAX];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   739  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   740  /* This variable stores CanControllerId corresponding to the
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   741  CAN Controller Id in hardware */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   742  static uint8 Can_NodeIdMap[CAN_NUM_CONTROLLERS_IN_DEVICE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   743  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   744  /* This variable stores the wakeup event status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   745  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   746  #if (CAN_DEBUG_SUPPORT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   747  /*IFX_MISRA_RULE_08_10_STATUS=Can_17_MCanP_ControllerWakeupStatus variable is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   748  declared as extern in Can_17_MCanP_Dbg.h, which will be included by
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   749  application for debugging*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   750  uint8 Can_17_MCanP_ControllerWakeupStatus[CAN_NUM_CONTROLLER_MAX];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   751  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   752  static uint8 Can_17_MCanP_ControllerWakeupStatus[CAN_NUM_CONTROLLER_MAX];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   753  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   754  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   755  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   756  /* This flag stores the CAN driver state */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   757  #if (CAN_DEBUG_SUPPORT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   758  /*IFX_MISRA_RULE_08_10_STATUS=Can_17_MCanP_DriverState variable is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   759  declared as extern in Can_17_MCanP_Dbg.h, which will be included by
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   760  application for debugging*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   761  Can_17_MCanP_DriverStateType Can_17_MCanP_DriverState;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   762  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   763  static Can_17_MCanP_DriverStateType Can_17_MCanP_DriverState;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   764  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   765  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   766  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   767  /* Buffer for copying the received data and pass to CanIf */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   768  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   769  static uint8 Can_RxMessageData
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   770    [CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_SIXTY_FOUR];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   771  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   772  static uint8 Can_RxMessageData
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   773    [CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_EIGHT];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   774  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   775  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   776  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   777  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   778  /* Buffer for copying the received FIFO data and pass to CanIf */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   779  static uint8 Can_RxFifoMessageData[CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_EIGHT];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   780  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   781  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   782  #define CAN_17_MCANP_STOP_SEC_VAR_8BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   783  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   784   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   785  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   786  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   787  #define CAN_17_MCANP_START_SEC_VAR_32BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   788  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   789   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   790  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   791  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   792  #if(CAN_PB_FIXEDADDR == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   793  /* Pointer to store config pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   794  const Can_17_MCanP_ConfigType* Can_kConfigPtr = NULL_PTR;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   795  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   796  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   797  /* This variable stores the current state of a CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   798  #if (CAN_DEBUG_SUPPORT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   799  /*IFX_MISRA_RULE_08_10_STATUS=Can_17_MCanP_ControllerMode[]array variable is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   800  declared as extern in Can_17_MCanP_Dbg.h, which will be included by
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   801  application for debugging*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   802  CanIf_ControllerModeType Can_17_MCanP_ControllerMode[CAN_NUM_CONTROLLER_MAX];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   803  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   804  static CanIf_ControllerModeType
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   805    Can_17_MCanP_ControllerMode[CAN_NUM_CONTROLLER_MAX];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   806  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   807  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   808  /* MSIMASK register values for Rx Message Objects; They indicate Rx hardware
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   809  object numbers assigned to a CAN controller. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   810  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   811  /*IFX_MISRA_RULE_08_07_STATUS=Can_RxMsiMask is accessed in Multiple functions*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   812  static uint32 Can_RxMsiMask[CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_NUM_MSPND_REGS];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   813  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   814  /* MSIMASK register values for Tx Message Objects; They indicate Tx hardware
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   815  object numbers assigned to a CAN controller. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   816  /*IFX_MISRA_RULE_08_07_STATUS=Can_TxMsiMask is accessed in Multiple functions*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   817  static uint32 Can_TxMsiMask[CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_NUM_MSPND_REGS];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   818  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   819  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   820  #define CAN_17_MCANP_STOP_SEC_VAR_32BIT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   821  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   822   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   823  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   824  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   825  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   826  **                      Global Function Definitions                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   827  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   828  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   829  /* Memory map of the CAN driver code */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   830  #define CAN_17_MCANP_START_SEC_CODE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   831  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   832   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   833  #include "MemMap.h"
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   834  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   835  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   836  ** TRACEABILITY: [cover parentID=DS_AS_CAN223,DS_AS_CAN240,DS_AS_CAN174_CAN175,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   837  DS_AS_CAN407_CAN420_CAN053_CAN091_CAN103_CAN238_CAN239_CAN245_CAN246_CAN250_CAN259_CAN196_CAN197_CAN425_CAN426,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   838  DS_AS403_CAN408,DS_NAS_HE2_CAN_PR2892,DS_NAS_EP_CAN_PR2892,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   839  DS_NAS_HE2_CAN_PR2937,DS_NAS_EP_CAN_PR2937,DS_NAS_HE2_CAN_PR3018,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   840  DS_NAS_EP_CAN_PR3018]                                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   841  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   842  ** Syntax           : void Can_17_MCanP_Init(const Can_17_MCanP_ConfigType*   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   843  **                                                 Config)                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   844  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   845  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   846  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   847  ** Service ID       : 0x00                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   848  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   849  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   850  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   851  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   852  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   853  ** Parameters (in)  : Config - Pointer to CAN driver configuration            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   854  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   855  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   856  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   857  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   858  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   859  ** Description      : Driver Module Initialization function                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   860  **                    - This function initializes:                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   861  **                    * Static variables, including flags                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   862  **                    * CAN HW Unit global hardware settings                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   863  **                    * Controller specific settings for each CAN Controller  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   864  **  All CAN Controllers will be in state CANIF_CS_STOPPED after initialization**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   865  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   866  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   867  void Can_17_MCanP_Init(const Can_17_MCanP_ConfigType* Config)
; Function Can_17_MCanP_Init
.L88:
Can_17_MCanP_Init:	.type	func
	sub.a	a10,#16
.L631:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   868  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   869  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   870    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   871  #if (CAN_STANDARD_ID_ONLY != STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   872    volatile uint8 SizeOfCanIdType;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   873  #endif /*#if (CAN_STANDARD_ID_ONLY != STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   874    uint8 CtrlIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   875  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   876    Status = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   877  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   878  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   879  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   880  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   881  #if(CAN_PB_FIXEDADDR == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   882  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   883    if (NULL_PTR == Config)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   884    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   885     /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   886     Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   887      CAN_SID_INIT, CAN_E_PARAM_POINTER);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   888  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   889     Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   890    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   891  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   892    /* Check if the config pointer is initialized to the
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   893    first instance of the configuration */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   894    if (Can_kConfigPtr != Config)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   895    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   896     /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   897     Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   898      CAN_SID_INIT, CAN_E_PARAM_POINTER);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   899  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   900     Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   901    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   902  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   903  #endif /* #if(CAN_PB_FIXEDADDR == STD_OFF) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   904  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   905    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   906    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   907     /* CAN driver is not in state UNINIT */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   908     if (CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   909     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   910      /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   911      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   912       CAN_SID_INIT, CAN_E_TRANSITION);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   913      Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   914     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   915     else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   916     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   917      /* CAN Controller is not in state UNINIT */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   918      for(CtrlIndex=CAN_ZERO;CtrlIndex<(Config->CanNumController);CtrlIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   919      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   920       if(CANIF_CS_UNINIT != Can_17_MCanP_ControllerMode[CtrlIndex])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   921       {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   922        /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   923        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   924         CAN_SID_INIT, CAN_E_TRANSITION);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   925        Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   926       }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   927      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   928     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   929    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   930  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   931  #if (CAN_STANDARD_ID_ONLY != STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   932    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   933    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   934     SizeOfCanIdType = (uint8)sizeof(Can_IdType);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   935  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   936     if(SizeOfCanIdType == CAN_TWO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   937     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   938      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   939       CAN_SID_INIT, CAN_E_CAN_IDTYPE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   940      Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   941     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   942    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   943  #endif /* #if (CAN_STANDARD_ID_ONLY != STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   944  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   945    if (E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   946  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   947    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   948     /* Store config pointer, such that it can be used throughout CAN driver */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   949  #if(CAN_PB_FIXEDADDR == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   950     Can_kConfigPtr = Config;
	st.a	Can_kConfigPtr,a4
.L269:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   951  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   952  #if (CAN_DEV_ERROR_DETECT == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   953     /* To avoid compiler warning */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   954     UNUSED_PARAMETER (Config)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   955  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_OFF) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   956  #endif /*#if(CAN_PB_FIXEDADDR == STD_OFF)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   957  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   958      /* Initialize CAN Module's private variables */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   959      Can_lInitGlobalVar();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   960  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   961     /* Initialize clock/timing registers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   962     if(E_OK == Can_lInitClkSetting())
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   963     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   964  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   965      /* Check for hardware failure */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   966      if(E_OK == Can_lInitDemCheck())
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   967      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   968  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   969       /* Initialize CAN controller status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   970       Can_lInitControllerStatus();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   971  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   972  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   973       /* Initialize message objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   974       if(E_OK == Can_lInitMsgObj())
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   975       {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   976  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   977        /* Change the driver state to initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   978        Can_17_MCanP_DriverState = CAN_DS_READY;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   979       }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   980      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   981     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   982    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   983  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   984  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   985  #if (CAN_DEINIT_API == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   986  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   987  ** TRACEABILITY: [cover parentID=DS_NAS_CAN_PR3027,DS_NAS_CAN_PR3025]         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   988  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   989  ** Syntax         : void Can_17_MCanP_DeInit(void)                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   990  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   991  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   992  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   993  ** Service ID       : 0x0f                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   994  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   995  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   996  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   997  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   998  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	   999  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1000  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1001  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1002  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1003  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1004  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1005  ** Description      : This function De-initializes the CAN Driver.            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1006  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1007  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1008  void Can_17_MCanP_DeInit (void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1009  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1010   uint32 CLCReadback;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1011   uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1012   uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1013   uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1014   uint8 BOSrcNum;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1015   uint8 RxSrcNum;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1016   uint8 IntSrcOffset;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1017   volatile uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1018  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1019  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1020   Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1021  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1022  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1023  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1024  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1025   /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1026   Status = Can_lReportDetUninit(CAN_SID_DEINIT);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1027  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1028   if (E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1029  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1030   {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1031  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1032    /* Reset the CAN SRC registers for all configured CAN controllers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1033    for(ControllerId=CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1034     ControllerId<(Can_kConfigPtr->CanNumController);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1035     ControllerId++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1036    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1037     /* check if the CAN controller is activated */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1038     if(CAN_INVALID_HW_CONTROLLER_ID !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1039      Can_kConfigPtr->CanHwControllerIdMap[ControllerId])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1040     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1041      /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1042      HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[ControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1043      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1044      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1045  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1046      /* Calculate the CAN SRC Register Index */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1047      IntSrcOffset = (KerIdx << CAN_FOUR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1048      BOSrcNum =  (uint8)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1049       ((uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) << CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1050       + (HwCtrlIDKer * CAN_HEDEVICE) + IntSrcOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1051      RxSrcNum =  (uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1052       + HwCtrlIDKer + IntSrcOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1053  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1054      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1055      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1056      if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1057       Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1058                                                CanEventType[EVENTTYPE_TWO])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1059      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1060       /* Clear interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1061       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1062       efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1063       CAN_SFR_DEINIT_MODIFY32(CAN_SRC[HwCtrlIDKer + IntSrcOffset].U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1064                                                  CAN_SRC_CLEARMASK,CAN_SRC_CLRR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1065      /* Disable Interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1066       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1067       efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1068       CAN_SFR_DEINIT_WRITE32(CAN_SRC[HwCtrlIDKer + IntSrcOffset].U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1069                                                                        CAN_ZERO);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1070      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1071  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1072      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1073      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1074      if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1075       Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1076                                                    CanEventType[EVENTTYPE_ONE])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1077      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1078       /* Clear interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1079       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1080       efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1081       CAN_SFR_DEINIT_MODIFY32(CAN_SRC[RxSrcNum].U,CAN_SRC_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1082                                                                    CAN_SRC_CLRR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1083       /* Disable Interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1084       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1085       efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1086       CAN_SFR_DEINIT_WRITE32(CAN_SRC[RxSrcNum].U,CAN_ZERO);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1087      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1088  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1089      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1090      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1091      if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1092       Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1093                                                  CanEventType[EVENTTYPE_ZERO])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1094      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1095       /* Clear interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1096       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1097       efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1098       CAN_SFR_DEINIT_MODIFY32(CAN_SRC[BOSrcNum].U,CAN_SRC_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1099                                                                    CAN_SRC_CLRR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1100       /* Disable Interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1101       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1102       efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1103       CAN_SFR_DEINIT_WRITE32(CAN_SRC[BOSrcNum].U,CAN_ZERO);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1104     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1105     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1106    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1107    /* Initialize CAN Module's private variables */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1108    Can_lInitGlobalVar();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1109    /* Disable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1110  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1111    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1112    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1113  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1114     /* Reset the Kernel registers to default value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1115     Can_lResetSFR(KerIdx,CAN_DEINIT_ACCESS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1116  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1117     CAN_SFR_DEINIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1118  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1119     /* Disable the CAN hardware unit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1120     CAN_SFR_DEINIT_MODIFY32(CAN_KER[KerIdx]->CLC.U,CAN_CLC_DISR_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1121                                                                         CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1122  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1123     /* Read back the CLC register to ensure the CLC register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1124     CLCReadback = CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1125  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1126     /* Enable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1127     CAN_SFR_DEINIT_SETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1128  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1129     UNUSED_PARAMETER(CLCReadback)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1130  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1131    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1132  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1133    /* Change the driver state to Uninitialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1134    Can_17_MCanP_DriverState = CAN_DS_UNINIT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1135   }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1136  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1137  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1138  #endif /*#if (CAN_DEINIT_API == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1139  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1140  #if (CAN_CHANGE_BAUDRATE_API == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1141  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1142  ** TRACEABILITY: [cover parentID=DS_AS403_CAN454,DS_AS403_CAN459_CAN460,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1143  DS_AS403_CAN456_CAN457_CAN458]                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1144  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1145  ** Syntax           : Std_ReturnType Can_17_MCanP_CheckBaudrate               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1146  **                          (                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1147  **                            uint8 Controller,                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1148  **                            const uint16 Baudrate                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1149  **                          )                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1150  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1151  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1152  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1153  ** Service ID       : 0x0e                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1154  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1155  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1156  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1157  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1158  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1159  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1160  **                    Baudrate -  Baudrate to be checked                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1161  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1162  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1163  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1164  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1165  **                    - E_OK: Baudrate is supported by the CAN Controller     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1166  **                    - E_NOT_OK: Baudrate is not supported / invalid CAN     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1167  **                                controller                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1168  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1169  ** Description      : Checks CAN Controller Baudrate                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1170  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1171  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1172  Std_ReturnType Can_17_MCanP_CheckBaudrate(uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1173                                            const uint16 Baudrate)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1174  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1175    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1176    uint8 BaudrateCfgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1177  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1178  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1179  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1180    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1181    Status = Can_lReportDetUninit(CAN_SID_CHECK_BAUDRATE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1182  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1183    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1184    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1185      /* Check if Controller is valid */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1186      Status = Can_lReportDetParamController(Controller, CAN_SID_CHECK_BAUDRATE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1187    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1188  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1189    if (E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1190  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1191    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1192      /* Check if baudrate is supported/configured */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1193      BaudrateCfgIndex = Can_lSearchBaudrate(Controller, Baudrate);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1194  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1195      /* check if baudrate is invalid/unsupported */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1196      if(BaudrateCfgIndex >= Can_kConfigPtr->CanNumBaudrateCfgs[Controller])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1197      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1198  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1199        /* Report invalid baudrate to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1200        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1201          CAN_SID_CHECK_BAUDRATE, CAN_E_PARAM_BAUDRATE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1202  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1203        Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1204      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1205      else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1206      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1207        Status = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1208      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1209    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1210    return (Status);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1211  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1212  #endif /*#if (CAN_CHANGE_BAUDRATE_API == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1213  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1214  #if (CAN_CHANGE_BAUDRATE_API == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1215  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1216  ** TRACEABILITY: [cover parentID=DS_AS403_CAN449,DS_AS403_CAN422,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1217  DS_AS403_CAN461_CAN450_CAN451_CAN452_CAN453]                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1218  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1219  ** Syntax           : Std_ReturnType Can_17_MCanP_ChangeBaudrate              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1220  **                          (                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1221  **                            uint8 Controller,                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1222  **                            const uint16 Baudrate                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1223  **                          )                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1224  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1225  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1226  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1227  ** Service ID       : 0x0d                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1228  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1229  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1230  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1231  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1232  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1233  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1234  **                    Baudrate -  Baudrate to be checked                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1235  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1236  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1237  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1238  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1239  **                    - E_OK: Baudrate change accepted                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1240  **                    - E_NOT_OK: Baudrate is not accepted                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1241  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1242  ** Description      : Changes the CAN Controller Baudrate                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1243  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1244  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1245  Std_ReturnType Can_17_MCanP_ChangeBaudrate (uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1246                                              const uint16 Baudrate)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1247  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1248    const Can_17_MCanP_ControllerBaudrateConfigType *BaudrateCfgPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1249    const Can_BaudrateConfigPtrType *CanBaudrateCfgPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1250    uint8 BaudrateCfgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1251    uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1252    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1253  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1254  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1255    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1256    Status = Can_lReportDetUninit(CAN_SID_CHANGE_BAUDRATE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1257  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1258    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1259    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1260      /* Check if Controller is valid */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1261      Status = Can_lReportDetParamController(Controller, CAN_SID_CHANGE_BAUDRATE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1262  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1263      /* Controller 'might' be invalid. So shouldn't proceed with checking
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1264      controller state. So do not check for it's state */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1265      if (E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1266      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1267        /* The CAN controller is not in "stopped" state */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1268        if (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1269        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1270          /* Report invalid state to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1271          Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1272            CAN_SID_CHANGE_BAUDRATE, CAN_E_TRANSITION);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1273          Status = E_NOT_OK ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1274        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1275      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1276    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1277  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1278    if (E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1279  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1280    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1281      /* Check if baudrate is supported/configured */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1282      BaudrateCfgIndex = Can_lSearchBaudrate(Controller, Baudrate);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1283  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1284  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1285      /* check if baudrate is invalid/unsupported */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1286      if(BaudrateCfgIndex >= Can_kConfigPtr->CanNumBaudrateCfgs[Controller])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1287      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1288        /* Report invalid baudrate to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1289        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1290          CAN_SID_CHANGE_BAUDRATE, CAN_E_PARAM_BAUDRATE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1291        Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1292      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1293      else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1294  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1295      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1296        Status = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1297  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1298  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1299        /* Check if wakeup was detected */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1300        if(CAN_ONE == Can_17_MCanP_ControllerWakeupStatus[Controller])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1301        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1302          /* Clear wakeup status and report to EcuM */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1303          Can_17_MCanP_ControllerWakeupStatus[Controller] = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1304          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1305          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1306          EcuM_SetWakeupEvent((EcuM_WakeupSourceType)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1307            Can_kConfigPtr->CanWakeupSourceIdPtr[Controller]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1308        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1309  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1310  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1311        HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[Controller];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1312        CanBaudrateCfgPtr = Can_kConfigPtr->CanBaudrateConfigPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1313        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1314          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1315        CanBaudrateCfgPtr += Controller;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1316        BaudrateCfgPtr = CanBaudrateCfgPtr->Can_kBaudrateConfigPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1317        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1318          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1319        BaudrateCfgPtr += BaudrateCfgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1320        /* Set CAN controller baudrate */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1321        Can_lSetBaudrate(HwControllerId, BaudrateCfgPtr->CanControllerBaudrate,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1322                                                     CAN_RUNTIME_ACCESS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1323      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1324    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1325    return (Status);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1326  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1327  #endif /*#if (CAN_CHANGE_BAUDRATE_API == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1328  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1329  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1330  ** TRACEABILITY: [cover parentID=DS_AS_CAN230,DS_AS_CAN017,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1331  DS_AS_CAN198_CAN199_CAN200,DS_AS403_CAN370,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1332  DS_NAS_CAN_PR764]                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1333  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1334  ** Syntax           : Can_ReturnType Can_17_MCanP_SetControllerMode           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1335  **                                   (                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1336  **                                     uint8 Controller,                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1337  **                                     Can_StateTransitionType Transition     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1338  **                                   )                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1339  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1340  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1341  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1342  ** Service ID       : 0x03                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1343  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1344  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1345  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1346  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1347  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1348  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1349  **                    Transition - Requested transition                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1350  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1351  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1352  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1353  ** Return value     : CAN_OK - Valid transition                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1354  **                    CAN_NOT_OK - Invalid transition                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1355  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1356  ** Description      : Performs software triggered state transitions of the    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1357  **                    CAN Controller State machine                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1358  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1359  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1360  Can_ReturnType Can_17_MCanP_SetControllerMode(uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1361                                               Can_StateTransitionType Transition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1362  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1363  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1364    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1365  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1366  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1367    Can_ReturnType RetValue;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1368    uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1369  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1370  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1371  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1372    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1373    Status = Can_lReportDetUninit(CAN_SID_SETCONTROLLERMODE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1374  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1375    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1376    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1377      /* Check if Controller is valid */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1378      Status = Can_lReportDetParamController(Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1379        CAN_SID_SETCONTROLLERMODE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1380      if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1381      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1382        /* Check if requested state transition is valid */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1383        Status = Can_lModeDetCheck(Controller, Transition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1384        if (E_NOT_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1385        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1386          /* Report invalid transition request to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1387          Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1388            CAN_SID_SETCONTROLLERMODE, CAN_E_TRANSITION);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1389        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1390      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1391    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1392    if (E_NOT_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1393    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1394      RetValue = CAN_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1395    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1396    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1397  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1398    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1399      RetValue = CAN_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1400  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1401      HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[Controller];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1402  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1403  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1404      /* Check if wakeup is enabled */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1405      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1406          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1407      if(CAN_ZERO != Can_kConfigPtr->CanWakeupSourceIdPtr[Controller])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1408      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1409        /* perform state transition */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1410        Can_lSetModeWuSupportOn(Controller,HwControllerId,Transition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1411      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1412      else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1413  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1414      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1415        /* perform state transition */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1416        Can_lSetModeWuSupportOff(Controller,HwControllerId,Transition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1417      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1418  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1419      /* Notify successful state transition to upper layer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1420  //    CanIf_ControllerModeIndication(Controller,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1421  //    Can_17_MCanP_ControllerMode[Controller]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1422    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1423    return(RetValue);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1424  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1425  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1426  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1427  ** TRACEABILITY: [cover parentID=DS_AS_CAN231,DS_AS_CAN205_CAN206]            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1428  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1429  ** Syntax         : void Can_17_MCanP_DisableControllerInterrupts             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1430  **                                                         (uint8 Controller) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1431  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1432  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1433  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1434  ** Service ID       : 0x04                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1435  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1436  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1437  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1438  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1439  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1440  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1441  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1442  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1443  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1444  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1445  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1446  ** Description      : Disables CAN Controller Interrupts                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1447  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1448  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1449  void Can_17_MCanP_DisableControllerInterrupts (uint8 Controller)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1450  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1451  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1452  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1453    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1454  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1455    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1456    Status = Can_lReportDetUninit(CAN_SID_DISABLECONTROLLERINTERRUPTS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1457  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1458    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1459    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1460      /* Check if Controller is valid */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1461      Status = Can_lReportDetParamController(Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1462        CAN_SID_DISABLECONTROLLERINTERRUPTS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1463    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1464  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1465    if (E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1466  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1467  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1468    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1469      /* Disable controller interrupts */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1470      Can_lDisableInterrupts(Controller);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1471    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1472  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1473  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1474  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1475  ** TRACEABILITY: [cover parentID=DS_AS_CAN232,DS_AS_CAN209_CAN210]            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1476  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1477  ** Syntax          : void Can_17_MCanP_EnableControllerInterrupts             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1478  **                                                         (uint8 Controller) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1479  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1480  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1481  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1482  ** Service ID       : 0x05                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1483  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1484  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1485  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1486  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1487  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1488  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1489  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1490  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1491  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1492  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1493  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1494  ** Description      : Enables CAN Controller Interrupts                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1495  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1496  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1497  void Can_17_MCanP_EnableControllerInterrupts (uint8 Controller)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1498  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1499  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1500  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1501    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1502  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1503    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1504    Status = Can_lReportDetUninit(CAN_SID_ENABLECONTROLLERINTERRUPTS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1505  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1506    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1507    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1508      /* Check if Controller is valid */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1509      Status = Can_lReportDetParamController(Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1510        CAN_SID_ENABLECONTROLLERINTERRUPTS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1511    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1512  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1513    if (E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1514  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1515  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1516    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1517      /* Enable Controller Interrupts */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1518      Can_lEnableInterrupts(Controller);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1519    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1520  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1521  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1522  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1523  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR765_1,DS_AS_CAN233,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1524  DS_AS_CAN100,DS_AS_CAN216,DS_NAS_HE2_CAN_PR2891,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1525  DS_NAS_EP_CAN_PR2891]                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1526  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1527  ** Syntax           : Can_ReturnType Can_17_MCanP_Write                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1528  **                                            (                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1529  **                                              Can_HwHandleType Hth,         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1530  **                                              const Can_PduType *PduInfo    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1531  **                                            )                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1532  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1533  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1534  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1535  ** Service ID       : 0x06                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1536  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1537  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1538  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1539  ** Reentrancy       : Reentrant(thread-safe)                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1540  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1541  ** Parameters (in)  : Hth - Hardware Transmit Handler                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1542  **                    PduInfo - Pointer to SDU user memory, DLC and Identifier**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1543  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1544  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1545  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1546  ** Return value     : CAN_OK - Write command has been accepted                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1547  **                    CAN_BUSY - No message object available or pre-emptive   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1548  **                               call of Can_17_MCanP_Write that can't be     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1549  **                               implemented re-entrant                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1550  **                    CAN_NOT_OK - development error occured                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1551  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1552  ** Description      : Service to transmit CAN frame                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1553  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1554  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1555  Can_ReturnType Can_17_MCanP_Write (Can_HwHandleType Hth,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1556                                     const Can_PduType *PduInfo)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1557  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1558  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1559    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1560    uint8 HthIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1561  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1562  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1563  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1564    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1565  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1566  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1567    Can_ReturnType RetValue;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1568  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1569  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1570  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1571    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1572    Status = Can_lReportDetUninit(CAN_SID_WRITE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1573  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1574    if (E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1575    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1576      /* Check for DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1577      Status = Can_lWriteDetCheck(Hth, PduInfo);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1578    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1579    if (E_NOT_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1580    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1581      RetValue = CAN_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1582    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1583    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1584  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1585    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1586  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1587  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1588      /* Extract HTH index for accessing corresponding configuration */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1589  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1590      HthIndex = (uint8)(Hth - Can_kConfigPtr->CanNumRxHwObj);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1591  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1592      HthIndex = Hth;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1593  #endif /* #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1594  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1595      /* Extract message object id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1596      /* Update message object with the transmit request */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1597      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1598          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1599      HwObjectId = Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].MsgObjId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1600      RetValue = Can_lWriteMsgObj(HthIndex, HwObjectId, PduInfo);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1601  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1602  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1603  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1604      /* If no hardware object is configured for tranmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1605      RetValue = CAN_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1606      /* to avoid compiler warnings*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1607      UNUSED_PARAMETER (Hth)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1608      UNUSED_PARAMETER (PduInfo)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1609  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1610  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1611    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1612    return(RetValue);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1613  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1614  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1615  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1616  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1617  ** TRACEABILITY     : [cover parentID=DS_AS_CAN225,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1618  DS_AS_CAN110_CAN431_CAN031_CAN178_CAN179]              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1619  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1620  ** Syntax           : void Can_17_MCanP_MainFunction_Write(void)              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1621  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1622  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1623  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1624  ** Service ID       : 0x01                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1625  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1626  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1627  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1628  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1629  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1630  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1631  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1632  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1633  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1634  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1635  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1636  ** Timing           : Variable Cyclic                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1637  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1638  ** Description      : This function performs the polling of TX confirmation   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1639  **                    when CAN_TX_PROCESSING is set to POLLING                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1640  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1641  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1642  void Can_17_MCanP_MainFunction_Write(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1643  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1644  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1645    uint8 CtrlIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1646  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1647  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1648  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1649    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1650  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1651    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1652    Status = Can_lReportDetUninit(CAN_SID_MAINFUNCTION_WRITE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1653  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1654    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1655  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1656    if(CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1657  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1658    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1659  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1660  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1661      /* Call transmit handler function for each of the CAN controllers
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1662      configured as POLLING mode for transmission successful event handling */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1663      for(CtrlIndex=CAN_ZERO;CtrlIndex< (uint8)CAN_NUM_CONTROLLER_MAX;CtrlIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1664      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1665        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1666          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1667        if(CAN_POLLING ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1668          Can_kConfigPtr->CanEventHandlingConfigPtr[CtrlIndex].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1669                                                    CanEventType[EVENTTYPE_TWO])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1670        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1671          Can_17_MCanP_IsrTransmitRuntime
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1672            (Can_kConfigPtr->CanHwControllerIdMap[CtrlIndex]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1673        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1674      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1675  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1676  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1677    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1678  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1679  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1680  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1681  ** TRACEABILITY     : [cover parentID=DS_AS_CAN226,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1682  DS_AS_CAN108_CAN180_CAN181]                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1683  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1684  ** Syntax           : void Can_17_MCanP_MainFunction_Read(void)               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1685  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1686  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1687  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1688  ** Service ID       : 0x08                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1689  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1690  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1691  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1692  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1693  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1694  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1695  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1696  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1697  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1698  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1699  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1700  ** Timing           : Variable Cyclic                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1701  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1702  ** Description      : This function performs the polling of RX indication     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1703  **                    when CAN_RX_PROCESSING is set to POLLING                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1704  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1705  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1706  void Can_17_MCanP_MainFunction_Read(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1707  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1708  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1709    uint8 CtrlIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1710  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1711  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1712  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1713    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1714  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1715    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1716    Status = Can_lReportDetUninit(CAN_SID_MAINFUNCTION_READ);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1717  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1718    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1719  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1720    if(CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1721  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1722    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1723  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1724  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1725      /* Call receive handler function for each of the CAN controllers
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1726      configured as POLLING mode for reception successful event handling */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1727  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1728      for(CtrlIndex=CAN_ZERO;CtrlIndex< (uint8)CAN_NUM_CONTROLLER_MAX;CtrlIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1729      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1730        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1731          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1732        if(CAN_POLLING ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1733          Can_kConfigPtr->CanEventHandlingConfigPtr[CtrlIndex].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1734                                              CanEventType[EVENTTYPE_ONE])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1735        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1736          if(CANIF_CS_STARTED ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1737            Can_17_MCanP_ControllerMode[CtrlIndex])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1738          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1739            Can_lReceiveHandlerRuntime(Can_kConfigPtr->CanHwControllerIdMap\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1740                                                                    [CtrlIndex]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1741          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1742        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1743      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1744  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1745  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1746      /* #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1747    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1748  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1749  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1750  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1751  ** TRACEABILITY     : [cover parentID=DS_AS_CAN109_CAN183_CAN184,DS_AS_CAN227]**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1752  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1753  ** Syntax           : void Can_17_MCanP_MainFunction_BusOff(void)             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1754  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1755  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1756  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1757  ** Service ID       : 0x09                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1758  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1759  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1760  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1761  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1762  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1763  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1764  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1765  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1766  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1767  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1768  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1769  ** Timing           : Variable Cyclic                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1770  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1771  ** Description      : This function performs the polling of bus-off events    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1772  **                    that are configured statically as 'to be polled'        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1773  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1774  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1775  void Can_17_MCanP_MainFunction_BusOff(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1776  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1777    uint8 CtrlIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1778  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1779  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1780    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1781  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1782    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1783    Status = Can_lReportDetUninit(CAN_SID_MAINFUNCTION_BUSOFF);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1784  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1785    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1786  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1787    if(CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1788  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1789    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1790      /* Call busoff handler function for each of the CAN controllers
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1791      configured as POLLING mode for busoff event handling */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1792      for(CtrlIndex=CAN_ZERO;CtrlIndex< (uint8)CAN_NUM_CONTROLLER_MAX;CtrlIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1793      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1794        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1795          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1796        if(CAN_POLLING ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1797          Can_kConfigPtr->CanEventHandlingConfigPtr[CtrlIndex].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1798                                                  CanEventType[EVENTTYPE_ZERO])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1799        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1800          Can_17_MCanP_IsrBusOffRuntime
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1801            (Can_kConfigPtr->CanHwControllerIdMap[CtrlIndex]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1802        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1803      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1804    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1805  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1806  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1807  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1808  ** TRACEABILITY     : [cover parentID=DS_AS_CAN228,DS_AS_CAN112_CAN185_CAN186]**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1809  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1810  ** Syntax           : void Can_17_MCanP_MainFunction_Wakeup(void)             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1811  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1812  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1813  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1814  ** Service ID       : 0x0A                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1815  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1816  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1817  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1818  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1819  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1820  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1821  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1822  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1823  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1824  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1825  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1826  ** Timing           : Variable Cyclic                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1827  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1828  ** Description      : This function performs the polling of wake-up events    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1829  **                    that are configured statically as 'to be polled'        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1830  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1831  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1832  void Can_17_MCanP_MainFunction_Wakeup(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1833  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1834  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1835  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1836    uint8 CtrlIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1837  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1838  #endif /*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1839  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1840  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1841    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1842  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1843    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1844    Status = Can_lReportDetUninit(CAN_SID_MAINFUNCTION_WAKEUP);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1845  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1846    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1847  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1848    if(CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1849  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1850    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1851  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1852  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1853      /* Call wakeup handler function for each of the CAN controllers
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1854      configured as POLLING mode for wakeup event handling */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1855  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1856  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1857      for(CtrlIndex=CAN_ZERO;CtrlIndex< (uint8)CAN_NUM_CONTROLLER_MAX;CtrlIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1858      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1859        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1860          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1861        if(CAN_POLLING ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1862          Can_kConfigPtr->
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1863          CanEventHandlingConfigPtr[CtrlIndex].CanEventType[CAN_THREE])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1864        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1865          if(CANIF_CS_SLEEP ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1866            Can_17_MCanP_ControllerMode[CtrlIndex])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1867          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1868            Can_lWakeupHandlerRuntime\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1869                     (Can_kConfigPtr->CanHwControllerIdMap[CtrlIndex]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1870          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1871        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1872      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1873  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1874  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1875  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1876      /* #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1877    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1878  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1879  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1880  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1881  ** TRACEABILITY     : [cover parentID=DS_AS403_CAN368,DS_AS_CAN033_CAN035]    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1882  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1883  ** Syntax           : void Can_17_MCanP_MainFunction_Mode(void)               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1884  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1885  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1886  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1887  ** Service ID       : 0x0C                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1888  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1889  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1890  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1891  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1892  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1893  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1894  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1895  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1896  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1897  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1898  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1899  ** Timing           : Variable Cyclic                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1900  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1901  ** Description      : This function performs the polling of CAN Controller    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1902  **                    mode transitions                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1903  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1904  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1905  void Can_17_MCanP_MainFunction_Mode(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1906  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1907    /* As all the CAN controller state transitions happens synchronously,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1908    callback function CanIf_ControllerModeIndication is called in the
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1909    context of the API Can_17_MCanP_SetControllerMode itself. Hence this API
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1910    is implemented as an empty function */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1911  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1912  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1913  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1914  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR765_2,DS_AS403_CAN360,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1915  DS_AS403_CAN361,DS_AS_CAN362_CAN363]                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1916  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1917  ** Syntax           : Can_ReturnType Can_17_MCanP_CheckWakeup                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1918  **                                                         (uint8 Controller) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1919  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1920  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1921  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1922  ** Service ID       : 0x0B                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1923  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1924  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1925  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1926  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1927  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1928  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1929  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1930  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1931  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1932  ** Return value     : CAN_OK - Wakeup was detected for the given controller   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1933  **                    CAN_NOT_OK - No wakeup was detected for the given       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1934  **                                 CAN Controller                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1935  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1936  ** Description      : This function checks if a wakeup has occurred for the   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1937  **                    given CAN Controller                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1938  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1939  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1940  Can_ReturnType Can_17_MCanP_CheckWakeup(uint8 Controller)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1941  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1942  #if ((CAN_DEV_ERROR_DETECT == STD_ON) && (CAN_WAKEUP_CONFIGURED == STD_ON))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1943    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1944  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1945    Can_ReturnType RetValue;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1946  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1947    RetValue = CAN_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1948  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1949  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1950  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1951    /* Check if CAN driver is initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1952    Status = Can_lReportDetUninit(CAN_SID_CHECKWAKEUP);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1953  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1954    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1955    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1956      /* Check if Controller is valid */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1957      Status = Can_lReportDetParamController(Controller, CAN_SID_CHECKWAKEUP);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1958    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1959    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1960  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1961    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1962      /* Check if wakeup was detected */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1963      if(CAN_ONE == Can_17_MCanP_ControllerWakeupStatus[Controller])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1964      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1965        /* Clear wakeup status and return CAN_OK */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1966        Can_17_MCanP_ControllerWakeupStatus[Controller] = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1967        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1968          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1969        EcuM_SetWakeupEvent((EcuM_WakeupSourceType)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1970          Can_kConfigPtr->CanWakeupSourceIdPtr[Controller]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1971        RetValue = CAN_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1972      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1973    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1974  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1975    UNUSED_PARAMETER (Controller)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1976  #endif /* #if(CAN_WAKEUP_CONFIGURED == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1977      return(RetValue);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1978  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1979  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1980  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1981  **                      Interrupt Service Routines                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1982  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1983  /*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1984  The CAN Driver modules implement the interrupt service routines for all
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1985  CAN Hardware Unit interrupts that are needed.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1986  The module Can_Irq.c contains the implementation of interrupt frames.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1987  The implementation of the interrupt service routine are in this file.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1988  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1989  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1990  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1991  ** TRACEABILITY     : [cover parentID=DS_AS403_CAN418]                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1992  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1993  ** Syntax           : void Can_17_MCanP_IsrReceiveHandler                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1994  **                                                     (uint8 HwControllerId) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1995  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1996  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1997  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1998  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  1999  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2000  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2001  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2002  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2003  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2004  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2005  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2006  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2007  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2008  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2009  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2010  ** Description      : - This is the interrupt service routine for Receive     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2011  **                    Interrupt                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2012  **                    - This function checks the CAN Controller status and    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2013  **                    calls appropriate handler function                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2014  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2015  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2016  void Can_17_MCanP_IsrReceiveHandler(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2017  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2018  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2019  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2020    /* In STARTED state, upon message reception call receive handler function */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2021    if(CANIF_CS_STARTED ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2022      Can_17_MCanP_ControllerMode[Can_NodeIdMap[HwControllerId]])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2023    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2024      Can_lReceiveHandler(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2025    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2026  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2027  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2028    /* In SLEEP state, upon message reception call wakeup handler function */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2029    if(CANIF_CS_SLEEP ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2030      Can_17_MCanP_ControllerMode[Can_NodeIdMap[HwControllerId]])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2031    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2032      Can_lWakeupHandler(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2033    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2034  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2035  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2036  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2037    UNUSED_PARAMETER (HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2038  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2039      /* #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U)) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2040  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2041  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2042  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2043  ** TRACEABILITY: [cover parentID=DS_AS_CAN016]                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2044  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2045  ** Syntax           : void Can_17_MCanP_IsrTransmitHandler                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2046  **                                                     (uint8 HwControllerId) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2047  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2048  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2049  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2050  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2051  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2052  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2053  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2054  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2055  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2056  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2057  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2058  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2059  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2060  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2061  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2062  ** Description      : - This is the interrupt service routine for Transmit    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2063  **                    Interrupt                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2064  **                    - In case of successful transmission event, this        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2065  **                    funciton notifies the upper layer                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2066  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2067  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2068  void Can_17_MCanP_IsrTransmitHandler(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2069  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2070  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2071  volatile uint32 MsiMaskCopy;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2072    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2073    uint8 PndBitPosition;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2074    uint8 MsgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2075    uint8 LoopBreak;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2076    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2077    uint8 TxMOIdx = 0U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2078    uint8 HthIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2079  #ifdef IFX_CAN_DEBUG06
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2080    HwControllerId = TestCan_DebugMask06;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2081  #endif/*#ifdef IFX_CAN_DEBUG06*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2082  if(HwControllerId <= CAN_NUM_CONTROLLERS_IN_DEVICE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2083  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2084  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2085  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2086    /* Calculate to which kernel the Controller belongs to */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2087    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2088  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2089    /* Save current MSIMASK - which needs to be restored back at the end */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2090    /* to avoid re-entrancy issue */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2091    MsiMaskCopy = CAN_KER[KerIdx]->MSIMASK.U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2092    LoopBreak = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2093  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2094    /* Loop through all the MSPND registers configured for transmit MOs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2095    for (MsgIndex = Can_kConfigPtr->CanTxFirstMspndIdx;\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2096      MsgIndex <= Can_kConfigPtr->CanTxLastMspndIdx;\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2097      MsgIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2098    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2099      /* Load MSIMASK corresponding to the controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2100      CAN_KER[KerIdx]->MSIMASK.U = Can_TxMsiMask[HwControllerId][MsgIndex];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2101  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2102      /* Check for any pending notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2103      /* To avoid infinite loop in case of hardware error, LoopBreak is used
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2104      with worst case of 32 iterations to process 32 message objects pointed
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2105      by the given MSIMASK */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2106      while((((CAN_KER[KerIdx]->MSID[MsgIndex].U)& CAN_MSID_INDEX) !=\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2107                      CAN_MSID_NO_MSG_PND_VALUE) && (LoopBreak < CAN_THIRTY_TWO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2108     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2109        /* Count the iterations */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2110        LoopBreak++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2111  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2112        /* Get the pending bit position */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2113  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2114        PndBitPosition =(uint8)((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2115                                              MSID[MsgIndex].U) & CAN_MSID_INDEX);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2116        /* Calculate the message object id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2117        HwObjectId =  ((uint16)PndBitPosition + \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2118                   (uint16)((uint16)MsgIndex << CAN_MOIPR_MPN_MSPND_SHIFT ));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2119  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2120        /* Calculate the starting value of HW Object Id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2121        HthIdx = (uint8)(HwObjectId-(Can_kConfigPtr->CanTxHwObjCntKer[KerIdx]));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2122        TxMOIdx = Can_lGetHthIndex(KerIdx,HthIdx);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2123        /* Clear NEWDAT and TXPND */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2124        CAN_KER[KerIdx]->MO[HwObjectId].CTR.U = \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2125          (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_TXPND_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2126  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2127        /* Clear MSPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2128        CAN_KER[KerIdx]->MSPND[MsgIndex].U = \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2129          ~((unsigned_int)CAN_ONE << PndBitPosition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2130  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2131        /* Call notification function indicating successful transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2132  //      CanIf_TxConfirmation((PduIdType)Can_SwObjectHandle[KerIdx][TxMOIdx]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2133      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2134    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2135  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2136    /* Restore the MSIMASK value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2137    CAN_KER[KerIdx]->MSIMASK.U  = MsiMaskCopy;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2138  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2139  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2140    UNUSED_PARAMETER (HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2141  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2142  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2143  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2144  ** TRACEABILITY: [cover parentID=DS_AS_CAN016]                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2145  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2146  ** Syntax           : void Can_17_MCanP_IsrTransmitRuntime                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2147  **                                                     (uint8 HwControllerId) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2148  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2149  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2150  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2151  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2152  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2153  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2154  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2155  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2156  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2157  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2158  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2159  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2160  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2161  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2162  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2163  ** Description      :- In case of successful transmission event, this         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2164  **                    function notifies the upper layer                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2165  **                    - This function is called by the polling function       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2166  **                    Can_17_MCanP_MainFunction_Write for controllers         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2167  **                    configured with CanTxProcessing as POLLING              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2168  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2169  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2170  void Can_17_MCanP_IsrTransmitRuntime(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2171  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2172  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2173   uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2174     uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2175     uint8 TxMOIdx = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2176     uint8 HthIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2177     uint8 TxObjectStart = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2178     uint8 TxObjectcount = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2179     uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2180     uint8 LoopIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2181     uint8 MOIncCntr = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2182  #ifdef IFX_CAN_DEBUG06
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2183    HwControllerId = TestCan_DebugMask06;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2184  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2185   if(HwControllerId <= CAN_NUM_CONTROLLERS_IN_DEVICE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2186   {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2187  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2188  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2189     /* Calculate to which kernel the Controller belongs to */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2190     KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2191  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2192     /* Extract corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2193     ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2194     /* Calculate Tx MO start */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2195     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2196       PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2197     TxObjectStart = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2198                                     [ControllerId].ControllerMOMap[CAN_TWO];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2199     /* Calculate Tx MO Count */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2200     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2201       PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2202     TxObjectcount = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2203                                     [ControllerId].ControllerMOMap[CAN_THREE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2204     #if(CAN_FD_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2205     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2206      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2207     if(NULL_PTR !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2208     Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2209     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2210        MOIncCntr = CAN_MOSize_FD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2211     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2212     else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2213     #endif/*#if(CAN_FD_ENABLE == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2214     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2215       MOIncCntr = CAN_MOSize_STD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2216     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2217     for(LoopIndex = CAN_ZERO; LoopIndex < TxObjectcount; LoopIndex+=MOIncCntr)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2218     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2219        /* Calculate Tx Hardware object id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2220        HwObjectId = (uint16)((uint16)TxObjectStart + LoopIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2221        if ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2222                 (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U))& CAN_MOSTAT_TXPND_MASK)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2223        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2224          /* Calculate the starting value of HW Object Id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2225          HthIdx = (uint8)(HwObjectId-(Can_kConfigPtr->CanTxHwObjCntKer[KerIdx]));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2226          TxMOIdx = Can_lGetHthIndex(KerIdx,HthIdx);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2227          /* Call notification function indicating successful transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2228  //        CanIf_TxConfirmation((PduIdType)Can_SwObjectHandle[KerIdx][TxMOIdx]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2229  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2230          /* Clear NEWDAT and TXPND */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2231         CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2232                                    (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_TXPND_CLR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2233        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2234     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2235   }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2236  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2237   UNUSED_PARAMETER(HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2238  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2239  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2240  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2241  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2242  ** TRACEABILITY     : [cover parentID=DS_AS_CAN020_CAN272_CAN274]             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2243  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2244  ** Syntax           : void Can_17_MCanP_IsrBusOffHandler(uint8 HwControllerId)**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2245  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2246  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2247  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2248  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2249  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2250  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2251  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2252  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2253  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2254  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2255  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2256  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2257  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2258  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2259  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2260  ** Description      : - This function is the core part of the interrupt       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2261  **                    service routine for handling and reporting bus-off event**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2262  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2263  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2264  void Can_17_MCanP_IsrBusOffHandler(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2265  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2266    uint8 BoffStatus;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2267    uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2268    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2269    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2270  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2271    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2272    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2273    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2274    /*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2275    Bus-off error check:
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2276    ---------------------
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2277    The ALERT bit is set upon the occurrence of one of the following events
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2278    (the same events which also trigger an alert interrupt if ALIE is set):
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2279    1. A change of bit NSRx.BOFF
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2280    2. A change of bit NSRx.EWRN
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2281    3. A List Length Error, which also sets bit NSRx.LLE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2282    4. A List Object Error, which also sets bit NSRx.LOE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2283    5. Bit INIT has been set by hardware
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2284  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2285    Note:
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2286    - List error occurance is ruled out because list is not changed at run
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2287    time by the driver. So LOE and LLE bits need not be checked.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2288  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2289    - Points 1,2 and 5 constitute BusOff condition
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2290    In the driver EWRN level is set to be equal to BOFF error level.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2291    So when EWRN triggers ALERT bit, it also means bus-off.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2292    When bus-off happens, INIT is set by "hardware".
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2293  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2294    So is it enough to check ALERT bit alone to see if there was bus-off
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2295    event triggered? No. Resetting of EWRN and/or BOFF also triggers
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2296    ALERT bit to be set. To differentiate this scenario, both ALERT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2297    and INIT bit should be checked.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2298    */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2299  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2300    /* Extract the INIT bit status of the controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2301    BoffStatus = (uint8)((CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U)&CAN_NCR_INIT);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2302    /* Controller moved to bus-off state */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2303    if ((((CAN_KER[KerIdx]->N[HwCtrlIDKer].SR.U) \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2304           & CAN_NSR_ALERT) == CAN_NSR_ALERT) && (BoffStatus == CAN_ONE))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2305    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2306      /* Reset ALERT bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2307      CAN_KER[KerIdx]->N[HwCtrlIDKer].SR.U =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2308        (~((uint32)CAN_NSR_ALERT)) & CAN_NSR_WRITABLE_VALUE_MASK ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2309      /* Extract corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2310      ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2311  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2312      /* Avoid un-intended bus-off notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2313      /* Notify busoff only if it occured in STARTED state of the controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2314      if(CANIF_CS_STARTED == Can_17_MCanP_ControllerMode[ControllerId])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2315      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2316        /* Set current controller state to STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2317        Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2318  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2319        /* Notify the bus-off event to upper layer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2320  //      CanIf_ControllerBusOff(ControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2321      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2322  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2323    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2324  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2325  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2326  ** TRACEABILITY     : [cover parentID=DS_AS_CAN020_CAN272_CAN274]             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2327  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2328  ** Syntax           : void Can_17_MCanP_IsrBusOffRuntime\                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2329  **                                                      (uint8 HwControllerId)**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2330  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2331  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2332  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2333  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2334  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2335  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2336  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2337  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2338  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2339  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2340  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2341  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2342  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2343  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2344  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2345  ** Description      : - This function is called by the polling function       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2346  **                      Can_17_MCanP_MainFunction_BusOff for controllers      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2347  **                      configured with CanBusoffProcessing as POLLING        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2348  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2349  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2350  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2351  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2352  void Can_17_MCanP_IsrBusOffRuntime(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2353  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2354    uint8 BoffStatus;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2355    uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2356    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2357    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2358  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2359    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2360    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2361    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2362    /*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2363    Bus-off error check:
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2364    ---------------------
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2365    The ALERT bit is set upon the occurrence of one of the following events
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2366    (the same events which also trigger an alert interrupt if ALIE is set):
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2367    1. A change of bit NSRx.BOFF
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2368    2. A change of bit NSRx.EWRN
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2369    3. A List Length Error, which also sets bit NSRx.LLE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2370    4. A List Object Error, which also sets bit NSRx.LOE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2371    5. Bit INIT has been set by hardware
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2372  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2373    Note:
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2374    - List error occurance is ruled out because list is not changed at run
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2375    time by the driver. So LOE and LLE bits need not be checked.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2376  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2377    - Points 1,2 and 5 constitute BusOff condition
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2378    In the driver EWRN level is set to be equal to BOFF error level.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2379    So when EWRN triggers ALERT bit, it also means bus-off.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2380    When bus-off happens, INIT is set by "hardware".
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2381  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2382    So is it enough to check ALERT bit alone to see if there was bus-off
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2383    event triggered? No. Resetting of EWRN and/or BOFF also triggers
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2384    ALERT bit to be set. To differentiate this scenario, both ALERT
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2385    and INIT bit should be checked.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2386    */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2387  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2388    /* Extract the INIT bit status of the controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2389    BoffStatus = (uint8)(CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2390                            (CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U)&CAN_NCR_INIT);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2391    /* Controller moved to bus-off state */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2392    if (((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->N[HwCtrlIDKer].SR.U)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2393                   & CAN_NSR_ALERT) == CAN_NSR_ALERT) && (BoffStatus == CAN_ONE))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2394    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2395      /* Reset ALERT bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2396      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->N[HwCtrlIDKer].SR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2397                        (~((uint32)CAN_NSR_ALERT)) & CAN_NSR_WRITABLE_VALUE_MASK);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2398      /* Extract corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2399      ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2400  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2401      /* Avoid un-intended bus-off notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2402      /* Notify busoff only if it occured in STARTED state of the controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2403      if(CANIF_CS_STARTED == Can_17_MCanP_ControllerMode[ControllerId])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2404      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2405        /* Set current controller state to STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2406        Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2407  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2408        /* Notify the bus-off event to upper layer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2409  //      CanIf_ControllerBusOff(ControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2410      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2411  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2412    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2413  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2414  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2415  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2416  **                      Private Function Definitions                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2417  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2418  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2419  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2420  ** Syntax           : IFX_LOCAL_INLINE void Can_lInitGlobalVar(void)          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2421  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2422  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2423  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2424  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2425  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2426  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2427  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2428  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2429  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2430  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2431  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2432  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2433  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2434  ** Description      : Initializes global variables of CAN driver              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2435  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2436  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2437  IFX_LOCAL_INLINE void Can_lInitGlobalVar(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2438  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2439    uint16 Index;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2440  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2441    uint8 HwIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2442  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2443  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2444    volatile uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2445  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2446    uint8 MspndIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2447  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2448    /* Clear interrupt status and disable count */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2449    for (Index = CAN_ZERO; Index < (Can_kConfigPtr->CanNumController); Index++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2450    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2451      Can_17_MCanP_InterruptDisableCount[Index] = CAN_ZERO;
	mov	d0,#0
	lea	a15,Can_17_MCanP_InterruptDisableCount
.L632:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2452      Can_InterruptsEnabledStatus[Index] = CAN_ZERO;
	lea	a2,Can_InterruptsEnabledStatus
.L779:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2453      /* Initialize the CAN controller status to Uninitialised state */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2454      Can_17_MCanP_ControllerMode[Index] = CANIF_CS_UNINIT;
	lea	a5,Can_17_MCanP_ControllerMode
.L780:
	mov	d8,d0

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2449    for (Index = CAN_ZERO; Index < (Can_kConfigPtr->CanNumController); Index++)      (inlined)
	j	.L2
.L3:
	add	d0,#1
	st.b	[a15+],d8
.L633:
	extr.u	d0,d0,#0,#16
	st.b	[a2+],d8
.L634:
	st.b	[a5+],d8

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2449    for (Index = CAN_ZERO; Index < (Can_kConfigPtr->CanNumController); Index++)      (inlined)
.L2:
	ld.bu	d1,[a4]30
.L781:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2449    for (Index = CAN_ZERO; Index < (Can_kConfigPtr->CanNumController); Index++)      (inlined)
	jlt.u	d0,d1,.L3
.L782:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2455  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2456  #if (CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2457      /* Clear wakeup status flag */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2458      Can_17_MCanP_ControllerWakeupStatus[Index] = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2459  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2460  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2461    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2462  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2463    #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2464    /* Clear software pdu handle array */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2465    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)
	st.b	[a10],d8
.L783:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2466    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2467     #if (CAN_TX_HARDWARE_OBJECTS_MAX > 1U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2468     for (Index = CAN_ZERO; Index < CAN_TX_HARDWARE_OBJECTID_MAX; Index++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2469     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2470       Can_SwObjectHandle[KerIdx][Index] = CAN_ZERO;
	lea	a15,Can_SwObjectHandle
.L784:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2465    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
	j	.L4
.L5:
	mov	d0,#0

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2468     for (Index = CAN_ZERO; Index < CAN_TX_HARDWARE_OBJECTID_MAX; Index++)      (inlined)
	mov.a	a2,#6
.L6:
	ld.bu	d1,[a10]
.L785:
	mul	d15,d1,#7
	addsc.a	a4,a15,d15,#0
.L786:
	addsc.a	a4,a4,d0,#0
.L787:
	add	d0,#1
.L788:
	st.b	[a4],d8

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2468     for (Index = CAN_ZERO; Index < CAN_TX_HARDWARE_OBJECTID_MAX; Index++)      (inlined)
	loop	a2,.L6
.L789:
	ld.bu	d0,[a10]
.L635:
	add	d0,#1
	st.b	[a10],d0

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2465    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
.L4:
	ld.bu	d15,[a10]
.L790:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2465    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
	jeq	d15,#0,.L5
.L791:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2471     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2472     #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2473       Can_SwObjectHandle[KerIdx][0] = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2474     #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 1U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2475    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2476    #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2477  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2478    for (Index = CAN_ZERO; Index < CAN_NUM_CONTROLLERS_IN_DEVICE; Index++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2479    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2480      /* Initialize controllelr mapping array to Invalid Controller Id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2481      Can_NodeIdMap[Index] = CAN_INVALID_HW_CONTROLLER_ID;
	mov	d0,#0
	lea	a12,Can_NodeIdMap
.L636:
	mov.aa	a15,a12
.L792:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2482  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2483      /* Initialize MSIMASK arrays */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2484      for (MspndIndex = CAN_ZERO; MspndIndex < CAN_NUM_MSPND_REGS; MspndIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2485      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2486        Can_TxMsiMask[Index][MspndIndex]=(uint32)CAN_ZERO;
	movh.a	a13,#@his(Can_TxMsiMask)
	lea	a13,[a13]@los(Can_TxMsiMask)
.L793:
	mov.aa	a2,a13
.L794:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2487        Can_RxMsiMask[Index][MspndIndex]=(uint32)CAN_ZERO;
	movh.a	a4,#@his(Can_RxMsiMask)
	lea	a4,[a4]@los(Can_RxMsiMask)
.L795:
	mov	d1,d0

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2478    for (Index = CAN_ZERO; Index < CAN_NUM_CONTROLLERS_IN_DEVICE; Index++)      (inlined)
	mov.a	a5,#3
.L7:
	mov	d15,#255
	st.b	[a15+],d15
.L796:
	sha	d15,d0,#5
	mov.aa	a6,a2
.L797:
	addsc.a	a7,a4,d15,#0
.L798:
	lea	a2,[a2]32
.L799:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2484      for (MspndIndex = CAN_ZERO; MspndIndex < CAN_NUM_MSPND_REGS; MspndIndex++)      (inlined)
	mov.a	a14,#7
.L8:
	st.w	[a6+],d1
.L800:
	st.w	[a7+],d1

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2484      for (MspndIndex = CAN_ZERO; MspndIndex < CAN_NUM_MSPND_REGS; MspndIndex++)      (inlined)
	loop	a14,.L8
.L801:
	add	d0,#1

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2478    for (Index = CAN_ZERO; Index < CAN_NUM_CONTROLLERS_IN_DEVICE; Index++)      (inlined)
	loop	a5,.L7
.L270:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2488      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2489    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2490  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2491  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2492    for (HwIndex = CAN_ZERO; HwIndex < CAN_NUM_CONTROLLERS_IN_DEVICE; HwIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2493    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2494      for (Index = CAN_ZERO; Index < CAN_RXSize; Index++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2495      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2496        Can_RxMessageData[HwIndex][Index] = CAN_ZERO ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2497      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2498    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2499  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2500  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2501  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2502    for (HwIndex = CAN_ZERO; HwIndex < CAN_NUM_CONTROLLERS_IN_DEVICE; HwIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2503    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2504      for (Index = CAN_ZERO; Index < CAN_EIGHT; Index++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2505      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2506        Can_RxFifoMessageData[HwIndex][Index] = CAN_ZERO ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2507      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2508    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2509  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2510  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2511  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2512  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2513  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitClkSetting(void)*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2514  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2515  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2516  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2517  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2518  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2519  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2520  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2521  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2522  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2523  ** Parameters (out) : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2524  **                    - E_OK: Clock initialisation successful                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2525  **                    - E_NOT_OK: Clock initialisation failed                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2526  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2527  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2528  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2529  ** Description      : Initializes clock control register, fractional divider  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2530  **                    register and module control register                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2531  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2532  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2533  IFX_LOCAL_INLINE Std_ReturnType Can_lInitClkSetting(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2534  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2535    volatile uint32 ReadBack; /* For readback of CLC register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2536    volatile uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2537    uint8 LoopBreak;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2538    volatile uint8 DissChk;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2539    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2540    ReadBack = CAN_ZERO;
	st.w	[a10],d1
.L802:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2541    LoopBreak = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2542    RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2543  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2544    for (KerIdx = CAN_ZERO; ((KerIdx < CAN_NUM_KERNELS_IN_DEVICE)&&
	mov	d9,#0
	st.b	[a10]4,d8
.L299:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2545     (LoopBreak == CAN_ZERO)); KerIdx++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2546    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2547  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2548     /* Disable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2549     CAN_SFR_INIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2550  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2551     /* Enable the CAN hardware unit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2552     CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->CLC.U,CAN_CLC_DISR_CLEARMASK,\ 
	lea	a14,CAN_KER
.L300:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2545     (LoopBreak == CAN_ZERO)); KerIdx++)      (inlined)
	j	.L9
.L10:
	call	Mcal_ResetENDINIT
.L301:
	ld.bu	d15,[a10]4
	addsc.a	a15,a14,d15,#2
	ld.bu	d15,[a10]4
	ld.a	a15,[a15]
	ld.w	d0,[a15]
	addsc.a	a15,a14,d15,#2
	insert	d0,d0,#0,#0,#1
.L638:
	ld.a	a15,[a15]
	st.w	[a15],d0
.L302:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2553                                                                        CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2554  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2555     /* Read back the CLC register to ensure the CLC register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2556     ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U);
	ld.bu	d15,[a10]4
	addsc.a	a15,a14,d15,#2
	ld.a	a15,[a15]
	ld.w	d0,[a15]
.L639:
	st.w	[a10],d0
.L803:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2557  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2558     /* Enable/Disable sleep mode based on the need for wakeup detection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2559   #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2560     /* MultiCAN+ Module should be able to receive frames to detect wakeup */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2561     CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->CLC.U,CAN_CLC_EDIS_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2562                                                 (CAN_ONE << CAN_CLC_EDIS_BITPOS))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2563     /* Read back the CLC register to ensure the CLC register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2564     ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2565     #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2566     /* Enable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2567     CAN_SFR_INIT_SETENDINIT();
	call	Mcal_SetENDINIT
.L804:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2568  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2569   #ifdef IFX_CAN_DEBUG05
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2570     DissChk = (((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U)) & \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2571              CAN_CLC_DISS)>> CAN_CLC_DISS_BITPOS) | (uint8)(TestCan_DebugMask05);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2572   #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2573     DissChk = (uint8)(CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U) &\ 
	ld.bu	d15,[a10]4
	addsc.a	a15,a14,d15,#2
	ld.a	a15,[a15]
	ld.w	d15,[a15]
.L805:
	and	d15,#2
.L806:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2574                                              CAN_CLC_DISS)>> CAN_CLC_DISS_BITPOS;
	sha	d15,#-1
	st.b	[a10]5,d15
.L807:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2575   #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2576     if (CAN_ZERO != DissChk )
	ld.bu	d15,[a10]5
.L808:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2576     if (CAN_ZERO != DissChk )      (inlined)
	jeq	d15,#0,.L11
.L809:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2577     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2578      /* Report hardware errors and failures to DEM */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2579   #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2580      Dem_ReportErrorStatus((Dem_EventIdType)CAN_E_TIMEOUT,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2581       DEM_EVENT_STATUS_FAILED);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2582   #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2583      RetVal = E_NOT_OK;
	mov	d9,#1

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2583      RetVal = E_NOT_OK;      (inlined)
	j	.L12

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2576     if (CAN_ZERO != DissChk )      (inlined)
.L11:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2584      LoopBreak = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2585     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2586     else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2587     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2588  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2589   #if (CAN_RESET_SFR_AT_INIT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2590      /* Reset the Kernel registers to default value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2591      Can_lResetSFR(KerIdx,CAN_INIT_ACCESS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2592   #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2593  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2594      /* Select fASYN_CAN or fERAY as the input source */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2595      CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->MCR.U,\ 
	ld.bu	d15,[a10]4
	addsc.a	a15,a14,d15,#2
	ld.a	a15,[a15]
	ld.w	d15,[a15]456
	insert	d0,d15,#1,#0,#4
	ld.bu	d15,[a10]4
.L640:
	addsc.a	a15,a14,d15,#2
	ld.a	a15,[a15]
	st.w	[a15]456,d0
.L306:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2596                                         CAN_MCR_CLKSEL_CLEARMASK,CAN_MCR_CLKSEL)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2597  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2598      /* Disable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2599      CAN_SFR_INIT_RESETENDINIT();
	call	Mcal_ResetENDINIT
.L641:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2600  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2601      /* Setup CAN module timer clock */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2602      /* CAN_CLC should be written before writing to CAN_FDR */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2603      CAN_SFR_INIT_WRITE32(CAN_KER[KerIdx]->FDR.U,\ 
	ld.bu	d15,[a10]4
	ld.a	a2,Can_kConfigPtr
	addsc.a	a15,a14,d15,#2
	ld.a	a15,[a15]
	ld.hu	d15,[a2]28
	st.w	[a15]12,d15
.L810:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2604                                           (uint32)Can_kConfigPtr->CanFdrSetting);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2605  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2606      /* Enable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2607      CAN_SFR_INIT_SETENDINIT();
	call	Mcal_SetENDINIT

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2586     else      (inlined)
.L12:
	ld.bu	d15,[a10]4
.L811:
	add	d15,#1
	st.b	[a10]4,d15

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2545     (LoopBreak == CAN_ZERO)); KerIdx++)      (inlined)
.L9:
	ld.bu	d15,[a10]4
.L812:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2544    for (KerIdx = CAN_ZERO; ((KerIdx < CAN_NUM_KERNELS_IN_DEVICE)&&      (inlined)
	jne	d15,#0,.L13
.L813:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2545     (LoopBreak == CAN_ZERO)); KerIdx++)      (inlined)
	jeq	d9,#0,.L10

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2544    for (KerIdx = CAN_ZERO; ((KerIdx < CAN_NUM_KERNELS_IN_DEVICE)&&      (inlined)
.L13:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2608     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2609    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2610    UNUSED_PARAMETER(ReadBack)
	ld.w	d15,[a10]
.L814:
	jne	d9,#0,.L14
.L284:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2611    return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2612  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2613  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2614  #if ((CAN_RESET_SFR_AT_INIT == STD_ON)||(CAN_DEINIT_API == STD_ON))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2615  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2616  ** Syntax           : static void Can_lResetSFR(uint8 KerIdx uint8
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2617                                                              ApiAccesId)       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2618                                                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2619  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2620  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2621  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2622  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2623  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2624  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2625  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2626  ** Parameters (in)  : uint8 KerIdx                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2627  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2628  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2629  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2630  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2631  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2632  ** Description      : Initializes the Kernel registers to default value       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2633  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2634  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2635  static void Can_lResetSFR(uint8 KerIdx,uint8 ApiAccesId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2636  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2637    volatile uint32 ReadBack; /* Readback of KRST register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2638    uint32 TimeOutVal; /* Time out value for Kernel Reset to happen */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2639    uint32 KerRstStat; /* Kernel Reset Status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2640    ReadBack = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2641  #if(CAN_RESET_SFR_AT_INIT == STD_ON) && (CAN_DEINIT_API == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2642    if (CAN_INIT_ACCESS == ApiAccesId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2643  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2644  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2645  #if(CAN_RESET_SFR_AT_INIT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2646    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2647     /* Disable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2648      CAN_SFR_INIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2649  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2650      /* Request a Kernel Reset */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2651      CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->KRST0.U,CAN_KRST0_RST_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2652                                                                         CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2653  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2654      /* Read back to ensure the KRST0 register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2655      ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST0.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2656  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2657      /* Request a Kernel Reset */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2658      CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->KRST1.U,CAN_KRST1_RST_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2659                                                                         CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2660  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2661      /* Read back to ensure the KRST1 register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2662      ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST1.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2663  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2664      /* Enable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2665      CAN_SFR_INIT_SETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2666  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2667      /* Time out value for Kernel Reset is loaded */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2668      TimeOutVal = CAN_KERNEL_RESET_TIMEOUT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2669      do
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2670      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2671        TimeOutVal--;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2672  #ifdef IFX_CAN_DEBUG04
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2673        KerRstStat = TestCan_DebugMask04;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2674  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2675        KerRstStat = \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2676           ((uint32)(CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST0.U))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2677                                                        CAN_KRST0_RSTSTAT_BITPOS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2678  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2679      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2680      while ((KerRstStat == CAN_ZERO) && (TimeOutVal > CAN_ZERO));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2681  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2682      /* Disable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2683      CAN_SFR_INIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2684      /* Clear the Kernel Reset Status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2685      CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->KRSTCLR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2686                                               CAN_KRSTCLR_CLR_CLEARMASK,CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2687      /* Read back to ensure the KRSCLR register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2688      ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRSTCLR.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2689  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2690      /* Enable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2691      CAN_SFR_INIT_SETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2692    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2693  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2694  #if(CAN_RESET_SFR_AT_INIT == STD_ON) && (CAN_DEINIT_API == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2695    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2696  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2697  #if(CAN_DEINIT_API == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2698     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2699      /* Disable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2700      CAN_SFR_DEINIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2701  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2702      /* Request a Kernel Reset */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2703      CAN_SFR_DEINIT_MODIFY32(CAN_KER[KerIdx]->KRST0.U,CAN_KRST0_RST_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2704                                                                         CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2705  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2706      /* Read back to ensure the KRST0 register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2707      ReadBack = CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST0.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2708  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2709      /* Request a Kernel Reset */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2710      CAN_SFR_DEINIT_MODIFY32(CAN_KER[KerIdx]->KRST1.U,CAN_KRST1_RST_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2711                                                                         CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2712  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2713      /* Read back to ensure the KRST1 register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2714      ReadBack = CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST1.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2715  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2716      /* Enable write-protection of registers with EndINIT protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2717      CAN_SFR_DEINIT_SETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2718  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2719      /* Time out value for Kernel Reset is loaded */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2720      TimeOutVal = CAN_KERNEL_RESET_TIMEOUT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2721      do
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2722      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2723        TimeOutVal--;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2724  #ifdef IFX_CAN_DEBUG04
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2725        KerRstStat = TestCan_DebugMask04;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2726  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2727        KerRstStat = \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2728           ((uint32)(CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST0.U))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2729                                                        CAN_KRST0_RSTSTAT_BITPOS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2730  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2731      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2732      while ((KerRstStat == CAN_ZERO) && (TimeOutVal > CAN_ZERO));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2733  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2734      /* Disable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2735      CAN_SFR_DEINIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2736      /* Clear the Kernel Reset Status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2737      CAN_SFR_DEINIT_MODIFY32(CAN_KER[KerIdx]->KRSTCLR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2738                                               CAN_KRSTCLR_CLR_CLEARMASK,CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2739      /* Read back to ensure the KRSCLR register modifications */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2740      ReadBack = CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRSTCLR.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2741  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2742      /* Enable write-protection of registers with EndInit protection */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2743      CAN_SFR_DEINIT_SETENDINIT();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2744    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2745  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2746    UNUSED_PARAMETER(ReadBack)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2747  #if(CAN_RESET_SFR_AT_INIT == STD_OFF) || (CAN_DEINIT_API == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2748    UNUSED_PARAMETER(ApiAccesId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2749  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2750  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2751  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2752  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2753  ** TRACEABILITY     : [cover parentID=DS_AS_CAN176,DS_AS403_CAN371_CAN281,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2754  DS_AS_CAN029_CAN092_CAN295_CAN296_CAN297,DS_AS_CAN084,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2755  DS_NAS_CAN_PR919]                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2756  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2757  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitDemCheck(void) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2758  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2759  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2760  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2761  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2762  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2763  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2764  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2765  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2766  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2767  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2768  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2769  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2770  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2771  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2772  **                    - E_OK: CAN RAM initialization completed before timeout **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2773  **                    - E_NOT_OK: CAN RAM initialization did not complete     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2774  **                                before timeout                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2775  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2776  ** Description      : Checks for completion of CAN RAM initialization.        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2777  **                    In case of hardware failure, reports to DEM.            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2778  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2779  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2780  IFX_LOCAL_INLINE Std_ReturnType Can_lInitDemCheck(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2781  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2782    uint32 TimeOutIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2783    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2784    volatile uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2785  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2786    RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2787  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2788    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)
	mov	d0,#0
	st.b	[a10],d8
.L287:
	lea	a15,CAN_KER
.L288:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2788    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
	j	.L15
.L16:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2789    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2790  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2791      /* The CAN RAM is automatically initialized after reset by the list
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2792      controller in order to ensure correct list pointers in each message object.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2793      End of the CAN RAM initialization is indicated by bit PANCTR.BUSY
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2794      becoming inactive */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2795      TimeOutIndex = CAN_TIMEOUT_DURATION;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2796  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2797  #ifdef IFX_CAN_DEBUG01
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2798      while (((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2799        CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS) | TestCan_DebugMask01) ==\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2800                          CAN_ONE) && (TimeOutIndex != CAN_ZERO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2801  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2802      while ((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2803                   CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS)  == CAN_ONE) &&\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2804                                                       (TimeOutIndex != CAN_ZERO))
	mov	d15,#400

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2804                                                       (TimeOutIndex != CAN_ZERO))      (inlined)
	j	.L17
.L18:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2805  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2806      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2807        TimeOutIndex--;
	add	d15,#-1

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2804                                                       (TimeOutIndex != CAN_ZERO))      (inlined)
.L17:
	ld.bu	d1,[a10]
	addsc.a	a2,a15,d1,#2
	ld.a	a2,[a2]
	ld.w	d1,[a2]452
.L815:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2802      while ((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\       (inlined)
	jz.t	d1:8,.L19
.L816:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2804                                                       (TimeOutIndex != CAN_ZERO))      (inlined)
	jne	d15,#0,.L18

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2803                   CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS)  == CAN_ONE) &&\       (inlined)
.L19:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2808      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2809      if (TimeOutIndex == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2810      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2811        /* The detection of production code errors cannot be switched off.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2812        This requirement will be violated as per HIS requirements */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2813  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2814        /* Report hardware errors and failures to DEM */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2815  #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2816        Dem_ReportErrorStatus((Dem_EventIdType)CAN_E_TIMEOUT,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2817          DEM_EVENT_STATUS_FAILED);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2818  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2819  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2820        RetVal = E_NOT_OK;
	cmovn	d0,d15,#1
	ld.bu	d15,[a10]
.L643:
	add	d15,#1
	st.b	[a10],d15

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2788    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
.L15:
	ld.bu	d15,[a10]
.L817:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2788    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
	jeq	d15,#0,.L16
.L311:
	jne	d0,#0,.L21
.L317:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2821      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2822    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2823  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2824    return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2825  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2826  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2827  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2828  ** Syntax           : IFX_LOCAL_INLINE void Can_lInitializeController         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2829  **                                             (                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2830  **                                               uint8 ControllerId,          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2831  **                                               uint8 HwControllerId         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2832  **                                             )                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2833  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2834  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2835  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2836  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2837  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2838  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2839  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2840  ** Parameters (in)  : ControllerId - CAN Controller Id as per configuration   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2841  **                    HwControllerId - Corresponding CAN Controller Id in     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2842  **                                     hardware                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2843  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2844  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2845  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2846  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2847  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2848  ** Description      : Initializes CAN Controller Registers and Enables CAN    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2849  **                    Controller Interrupts                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2850  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2851  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2852  IFX_LOCAL_INLINE void Can_lInitializeController(uint8 ControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2853                                              uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2854  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2855    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2856    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2857    uint8 BOSrcNum;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2858    uint8 RxSrcNum;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2859    uint8 IntSrcOffset;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2860  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2861    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2862    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2863    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2864    IntSrcOffset = (KerIdx << CAN_FOUR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2865    BOSrcNum =  (uint8)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2866      ((uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) << CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2867      + (HwCtrlIDKer * CAN_HEDEVICE) + IntSrcOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2868    RxSrcNum =  (uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2869      + HwCtrlIDKer + IntSrcOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2870  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2871    /*
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2872    - Enable Configuration Change - NBTR, NPCR, NECNT can be written
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2873    - Take controller out of CAN traffic i.e put it in "stopped" state
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2874    - Enable Alert Interrupt. Used to detect bus off
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2875    */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2876    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2877                  CAN_NCR_CLEARMASK,( CAN_NCR_INIT | CAN_NCR_ALIE |CAN_NCR_CCE ))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2878  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2879  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2880  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2881    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2882          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2883    if(NULL_PTR !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2884      Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2885    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2886      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2887      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2888      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2889      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2890      Can_lFrameInitialise(KerIdx,HwCtrlIDKer,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2891              Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2892                                  Can_kFDConfigParamPtr->CanControllerFDBaudrate,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2893                  Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2894                                 Can_kFDConfigParamPtr->CanControllerTxDelayComp);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2895    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2896  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2897  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2898  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2899    /* Loopback and receive input pin selection setting */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2900    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2901          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2902    CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->N[HwCtrlIDKer].PCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2903                  (uint32)Can_kConfigPtr->CanNpcrPtr[ControllerId].Can_NPCRValue);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2904  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2905    /* Assign alert interrupt (for bus-off indication) to an SRN */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2906    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].IPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2907                                        CAN_IPR_ALINP_CLEARMASK,(uint32)BOSrcNum)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2908  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2909    /* Set error warning limit to 255 so that no warning interrupt is generated
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2910    Only bus-off error is of interest */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2911    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].ECNT.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2912                      CAN_NECNT_EWRNLVL_CLEARMASK,(uint32)CAN_BUSOFF_LIMIT << \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2913                                              CAN_NECNT_EWRNLVL_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2914  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2915    /* Disable Configuration Change - NBTR, NPCR, NECNT can only be read */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2916    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2917                     CAN_NCR_CCE_CLEARMASK,(uint32)CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2918  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2919    /* For hardware controller Id, map the corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2920    Can_NodeIdMap[HwControllerId]=ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2921  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2922  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2923    /* Initialize default controller baudrate */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2924    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2925          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2926    Can_lSetBaudrate(HwControllerId, Can_kConfigPtr->
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2927      CanDefaultBaudrateConfigPtr[ControllerId].CanControllerBaudrate,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2928                                                         CAN_INIT_ACCESS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2929  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2930    /* Enable the CAN controller interrupts */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2931    /* Refer section "Service Request Node Allocation/Mapping" for SRN mapping */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2932  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2933    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2934          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2935    if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2936      Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2937                                                   CanEventType[EVENTTYPE_TWO])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2938    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2939      Can_lClearAndEnableInterrupt((uint8)(HwCtrlIDKer + IntSrcOffset));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2940    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2941  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2942    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2943          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2944    if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2945      Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2946                                                 CanEventType[EVENTTYPE_ONE])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2947    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2948      Can_lClearAndEnableInterrupt((uint8)RxSrcNum);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2949    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2950  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2951    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2952          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2953    if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2954      Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2955                                                  CanEventType[EVENTTYPE_ZERO])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2956    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2957      Can_lClearAndEnableInterrupt((uint8)BOSrcNum);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2958    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2959  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2960  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2961  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2962  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2963  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2964  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitMsgObj(void)   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2965  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2966  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2967  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2968  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2969  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2970  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2971  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2972  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2973  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2974  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2975  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2976  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2977  **                    - E_OK: Message object allocation successful            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2978  **                    - E_NOT_OK: Message object allocation failed            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2979  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2980  ** Description      : Calls local functions to initialize transmit, receive   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2981  **                    and FIFO message objects                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2982  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2983  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2984  IFX_LOCAL_INLINE Std_ReturnType Can_lInitMsgObj(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2985  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2986    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2987  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2988  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2989    /* Initialize transmit message objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2990    RetVal = Can_lInitTxMsgObj();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2991    if(E_OK == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2992  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2993    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2994  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2995      /* Initialize receive message objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2996      RetVal = Can_lInitRxMsgObj();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2997      if(E_OK == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2998  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2999      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3000  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3001        /* Initialize the Rx FIFO message objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3002        RetVal = Can_lRxFifoInit();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3003  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3004      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3005    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3006    return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3007  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3008  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3009  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3010  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3011  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitTxMsgObj(void) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3012  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3013  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3014  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3015  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3016  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3017  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3018  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3019  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3020  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3021  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3022  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3023  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3024  **                    - E_OK: Message object allocation successful            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3025  **                    - E_NOT_OK: Message object allocation failed            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3026  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3027  ** Description      : Initializes transmit message objects                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3028  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3029  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3030  IFX_LOCAL_INLINE Std_ReturnType Can_lInitTxMsgObj(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3031  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3032    const Can_TxHwObjectConfigType *TxHwObjCfgPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3033    uint16 HwObjIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3034    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3035    uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3036    uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3037    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3038    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3039  /*#if (CAN_FD_ENABLE== STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3040    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3041  /*#endif*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3042    TxHwObjCfgPtr = Can_kConfigPtr->CanTxHwObjectConfigPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3043    RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3044  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3045    /* Loop through all the transmit hardware object configurations */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3046    for (
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3047      HwObjIndex=CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3048      (HwObjIndex < Can_kConfigPtr->CanNumTxHwObj)&&(E_OK==RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3049    HwObjIndex++
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3050      )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3051    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3052      /* Extract HwControllerId from the configuration */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3053      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3054          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3055      HwControllerId = TxHwObjCfgPtr[HwObjIndex].HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3056      /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3057      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3058  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3059  /*#if (CAN_FD_ENABLE== STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3060      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3061  /*#endif*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3062  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3063  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3064      /* only if associated controller is activated */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3065      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3066      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3067  #if (CAN_MULTIPLEXED_TRANSMISSION == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3068        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3069          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3070        HwObjectId = TxHwObjCfgPtr[HwObjIndex].MsgObjId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3071  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3072        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3073          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3074        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3075          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3076        HwObjectId = TxHwObjCfgPtr[HwObjIndex].MsgObjId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3077        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3078      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3079        while((HwObjectId <= TxHwObjCfgPtr[HwObjIndex].MsgObjIdLast)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3080                                                                &&(E_OK==RetVal))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3081  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3082        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3083  #ifdef IFX_CAN_DEBUG02
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3084          TestCan_SetMOAllocationErrorType(TESTCAN_TX_MO_ERROR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3085  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3086  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3087          /* allocate message object to the associated controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3088          RetVal = Can_lAllocateHwObject(HwControllerId, HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3089  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3090          if(E_OK == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3091          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3092  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3093  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3094  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3095            if(CAN_ONE == (((CAN_SFR_INIT_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3096                    (CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U)) & CAN_NCR_FDEN) >> \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3097                                                             CAN_NCR_FDEN_BITPOS))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3098            {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3099              /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3100          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3101              if(CAN_ONE ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3102                Can_kConfigPtr->
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3103                CanFDConfigParamPtr[Can_NodeIdMap[HwControllerId]].
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3104                Can_kFDConfigParamPtr->CanControllerTxBRS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3105              {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3106                CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3107                      (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3108                  CAN_MOFCR_BRS_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_BRS_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3109              }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3110  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3111              /* In order to support higher than 8 data bytes payload
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3112              (e.g 64bytes data payload),
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3113               CAN FD 64 bytes message mode is selected */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3114  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3115              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3116                      (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3117                             CAN_MOFCR_MMC_CLEARMASK,CAN_FD64BYTES_MOFCR_MMC_BIT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3118  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3119              /* When CAN FD 64 bytes message mode is selected, additional
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3120              message objects would be used to store the extra data bytes.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3121              The additional message objects used are specified by the pointer
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3122              on MOFGPR.BOT and MOFGPR.TOP register bits */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3123  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3124              /* The additional message objects chosen to store the extra data
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3125              bytes must not take part in CAN communication i.e they are allocated
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3126              to a list that does not belong to an active CAN node */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3127  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3128              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3129                  (CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3130                      CAN_MOFGPR_BOT_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3131                          (uint32)((uint32)HwObjectId +(uint32)CAN_ONE))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3132              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3133                  (CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3134                      CAN_MOFGPR_TOP_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3135                   (uint32)((uint32)((uint32)HwObjectId + (uint32)CAN_TWO) << \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3136                                                          CAN_MOFGPR_TOP_BITPOS))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3137  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3138            }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3139  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3140  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3141            /* Set message pending number field (MPN) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3142            CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3143              (CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3144                  CAN_MOIPR_MPN_CLEARMASK,(uint32)((uint32)HwObjectId << \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3145                                                            CAN_MOIPR_MPN_BITPOS))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3146  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3147            /* Set the corresponding bit in MSIMASK array */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3148            Can_TxMsiMask[HwControllerId][(HwObjectId >> CAN_POS_5)] |=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3149              ((uint32)1 << (HwObjectId & CAN_MAX_HWOBJ_PER_MSPND_REG_1));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3150  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3151            /* Set interrupt service node */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3152            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3153                                                      CAN_MOIPR_TXINP_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3154                          (uint32)((uint32)HwCtrlIDKer << CAN_MOIPR_TXINP_BITPOS))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3155  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3156            /* Extract corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3157            ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3158            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3159            PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3160            if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3161             Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3162                                                  CanEventType[EVENTTYPE_TWO])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3163            {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3164              /* Enable transmit interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3165              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3166                                        (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3167                CAN_MOFCR_TXIE_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_TXIE_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3168            }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3169            else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3170            {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3171              /* Disable transmit interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3172              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3173                                         (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3174                                       CAN_MOFCR_TXIE_CLEARMASK,CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3175            }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3176  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3177            /* Set message priority class */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3178            /* (for acceptance filtering based on CAN identifier) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3179            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3180                  CAN_MOAR_PRI_CLEARMASK,(uint32)CAN_PRI_CLASS_ID_BASED << \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3181                                                              CAN_MOAR_PRI_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3182  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3183            /* - Enable hardware object
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3184            - Set the direction of hardware object to transmit.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3185            - FIFO not used. So set TXEN1 bit permanently.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3186            */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3187            CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3188                  ~((uint32)(CAN_MOCTR_DIR_CLR | CAN_MOCTR_TXEN1_CLR |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3189                      CAN_MOCTR_MSGVAL_CLR)));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3190        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3191          #if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3192          HwObjectId = Can_lCalculateLoopIndex(HwControllerId,HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3193          #endif /*#if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3194        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3195      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3196    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3197    return (RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3198  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3199  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3200  ** Syntax           : IFX_LOCAL_INLINE uint16 Can_lCalculateLoopIndex\        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3201  **                                 (uint8 HwControllerId,uint16 HwObjectId)   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3202  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3203  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3204  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3205  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3206  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3207  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3208  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3209  ** Parameters (in)  : HwControllerId,HwObjectId                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3210  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3211  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3212  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3213  ** Return value     : uint16  HwObjectId                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3214  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3215  ** Description      : Calculatinh the Hw objectid                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3216  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3217  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3218  #if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3219  IFX_LOCAL_INLINE uint16 Can_lCalculateLoopIndex\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3220                                        (uint8 HwControllerId,uint16 HwObjectId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3221  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3222  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3223  uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3224  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3225  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3226  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3227  /* Extract the coreesponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3228  ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3229  /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3230      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3231  if(NULL_PTR !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3232  Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3233   {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3234     HwObjectId+= CAN_MOSize_FD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3235   }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3236   else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3237   #endif /* End of #if (CAN_FD_ENABLE== STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3238   {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3239     HwObjectId+= CAN_MOSize_STD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3240   }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3241   #if (CAN_FD_ENABLE== STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3242   UNUSED_PARAMETER(HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3243   #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3244  return(HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3245  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3246  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3247  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3248  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3249  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3250  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3251  ** TRACEABILITY: [cover parentID=DS_AS_CAN236_CAN237]                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3252  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3253  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitRxMsgObj(void) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3254  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3255  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3256  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3257  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3258  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3259  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3260  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3261  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3262  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3263  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3264  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3265  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3266  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3267  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3268  **                    - E_OK: Message object allocation successful            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3269  **                    - E_NOT_OK: Message object allocation failed            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3270  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3271  ** Description      : Initializes receive message objects                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3272  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3273  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3274  IFX_LOCAL_INLINE Std_ReturnType Can_lInitRxMsgObj(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3275  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3276    const Can_RxHwObjectConfigType *RxHwObjCfgPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3277    uint16 HwObjIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3278    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3279    uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3280    uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3281    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3282    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3283    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3284  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3285    RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3286    RxHwObjCfgPtr = Can_kConfigPtr->CanRxHwObjectConfigPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3287  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3288    /* Loop through all the receive hardware object configurations */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3289    for (HwObjIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3290      (HwObjIndex < Can_kConfigPtr->CanNumRxHwObj)&&(E_OK==RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3291      HwObjIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3292    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3293      /* extract associated controller from the configuration */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3294      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3295          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3296      HwControllerId = RxHwObjCfgPtr[HwObjIndex].HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3297      /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3298      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3299      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3300  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3301      /* only if the associated ocntroller is activated */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3302      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3303      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3304        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3305          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3306        HwObjectId = RxHwObjCfgPtr[HwObjIndex].MsgObjId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3307  #ifdef IFX_CAN_DEBUG02
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3308        TestCan_SetMOAllocationErrorType(TESTCAN_RX_MO_ERROR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3309  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3310  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3311        /* allocate the message object to the associated controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3312        RetVal = Can_lAllocateHwObject(HwControllerId, HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3313  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3314        /* Allocate hardware object from list */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3315        if(E_OK == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3316        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3317  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3318  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3319  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3320          if(CAN_ONE == ((CAN_SFR_INIT_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3321                    (CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U) & CAN_NCR_FDEN) >> \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3322                                                             CAN_NCR_FDEN_BITPOS))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3323          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3324            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3325                  CAN_MOFCR_FDF_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_FDF_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3326            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3327                  CAN_MOFCR_BRS_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_BRS_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3328  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3329  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3330          /* In order to support higher than 8 data bytes payload
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3331          (e.g 64bytes data payload), CAN FD 64 bytes message mode is selected */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3332  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3333          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3334                             CAN_MOFCR_MMC_CLEARMASK,CAN_FD64BYTES_MOFCR_MMC_BIT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3335  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3336          /* When CAN FD 64 bytes message mode is selected, additional
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3337          message objects would be used to store the extra data bytes.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3338          The additional message objects used are specified by the pointer
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3339          on MOFGPR.BOT and MOFGPR.TOP register bits */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3340  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3341          /* The additional message objects chosen to store the extra data bytes
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3342          must not take part in CAN communication i.e they are allocated
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3343          to a list that does not belong to an active CAN node */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3344  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3345          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3346              CAN_MOFGPR_BOT_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3347                  ((uint32)HwObjectId + (uint32)CAN_ONE))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3348          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3349              CAN_MOFGPR_TOP_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3350               (((uint32)HwObjectId +  (uint32)CAN_TWO) << CAN_MOFGPR_TOP_BITPOS))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3351          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3352  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3353  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3354  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3355          /* Set message pending number field (MPN) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3356          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3357             CAN_MOIPR_MPN_CLEARMASK,((uint32)HwObjectId )<< CAN_MOIPR_MPN_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3358  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3359  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3360          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3361          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3362          if (RxHwObjCfgPtr[HwObjIndex].FrameType != CAN_ID_STANDARD)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3363          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3364            /* Set ID value, ID type and message priority class (to acceptance
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3365            filtering based on CAN identifier) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3366            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3367          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3368            CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3369                  (unsigned_int)(CAN_PRIORITY_ID_BASED |CAN_USE_EXTENDED_ID |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3370                      (RxHwObjCfgPtr[HwObjIndex].MsgId)));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3371  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3372            /* Set filter mask value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3373            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3374          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3375            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3376                      CAN_MOAMR_AM_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3377                          (uint32)RxHwObjCfgPtr[HwObjIndex].MaskRef)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3378  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3379            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3380          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3381            if (RxHwObjCfgPtr[HwObjIndex].FrameType == CAN_ID_MIXED)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3382            {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3383              /* Receive both standard and extended IDs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3384              CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3385                      AMR.U,CAN_MOAMR_MIDE_CLEARMASK, (uint32)CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3386            }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3387          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3388          else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3389  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3390          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3391            /* Set ID value, ID type and message priority class (to acceptance
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3392            filtering based on CAN identifier) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3393            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3394          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3395            CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3396                      (unsigned_int)(CAN_PRIORITY_ID_BASED |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3397                          ((uint32)RxHwObjCfgPtr[HwObjIndex].MsgId <<\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3398                                                         CAN_MOAR_ID_STD_SHIFT)));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3399  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3400            /* Set filter mask value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3401            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3402          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3403            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3404                  CAN_MOAMR_AM_CLEARMASK,(uint32)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3405                      (RxHwObjCfgPtr[HwObjIndex].MaskRef << CAN_POS_18))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3406          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3407          /* Set interrupt service node */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3408          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3409              CAN_MOIPR_RXINP_CLEARMASK,(uint32)((uint32)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3410                          CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx] +\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3411                                             (uint32)HwCtrlIDKer))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3412  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3413          /* Extract corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3414          ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3415          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3416          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3417          if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3418          Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3419                                                     CanEventType[EVENTTYPE_ONE])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3420          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3421            /* Enable receive interrupt for this hardware object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3422           CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3423                CAN_MOFCR_RXIE_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_RXIE_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3424          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3425          else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3426          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3427            /* Disable receive interrupt for this hardware object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3428           CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3429                   CAN_MOFCR_RXIE_CLEARMASK,CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3430          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3431  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3432          /*  Set the direction of hardware object to Receive. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3433          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3434                                                               CAN_MOCTR_DIR_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3435  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3436          /* Set the corresponding bit in MSIMASK array */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3437          Can_RxMsiMask[HwControllerId][(HwObjectId >> CAN_POS_5)] |=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3438            ((uint32)1 << (HwObjectId & CAN_MAX_HWOBJ_PER_MSPND_REG_1));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3439  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3440          /* Enable hardware object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3441          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3442             (~((uint32)(CAN_MOCTR_RXEN_CLR)| CAN_MOCTR_MSGVAL_CLR))&\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3443                                                         CAN_MOCTR_MSGVAL_MASK);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3444        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3445      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3446    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3447    return (RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3448  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3449  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3450  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3451  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3452  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3453  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lRxFifoInit(void)   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3454  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3455  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3456  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3457  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3458  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3459  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3460  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3461  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3462  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3463  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3464  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3465  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3466  **                    - E_OK: Message object allocation successful            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3467  **                    - E_NOT_OK: Message object allocation failed            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3468  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3469  ** Description      : Initializes receive FIFO structure                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3470  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3471  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3472  IFX_LOCAL_INLINE Std_ReturnType Can_lRxFifoInit(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3473  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3474    const Can_RxFifoConfigType *RxFifoCfgPtr ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3475    uint16 FifoIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3476    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3477    uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3478    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3479    uint8 FifoThreshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3480    uint8 FifoSize;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3481    uint8 FifoTop;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3482    uint16 SlaveIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3483    uint8 FifoBottom;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3484    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3485    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3486  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3487    RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3488  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3489    /* Copy receive FIFO configuration pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3490    RxFifoCfgPtr = Can_kConfigPtr->RxFifoConfigPtr ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3491  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3492    /* configure all Receive FIFO Haraware objects */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3493    for (FifoIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3494      (FifoIndex < Can_kConfigPtr->CanNumRxFifo)&&(E_OK==RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3495      FifoIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3496    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3497      /* Extract associated CAN controller Id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3498      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3499          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3500      HwControllerId = RxFifoCfgPtr[FifoIndex].HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3501      /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3502      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3503  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3504      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3505  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3506      /* Check if associated CAN controller is activated */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3507      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3508      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3509        /* Extract message object mapped for FIFO base object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3510        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3511          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3512        HwObjectId = RxFifoCfgPtr[FifoIndex].HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3513  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3514  #ifdef IFX_CAN_DEBUG02
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3515        TestCan_SetMOAllocationErrorType(TESTCAN_RXFIFO_BASE_MO_ERROR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3516  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3517  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3518        /* Allocate the message object to assocaited controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3519        RetVal = Can_lAllocateHwObject(HwControllerId, HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3520  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3521        if(E_OK == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3522        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3523          /* Set MSIMASK bit corresponding to the message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3524          Can_RxMsiMask[HwControllerId][(HwObjectId >> CAN_POS_5)] |=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3525            ((uint32)1 << (HwObjectId & CAN_MAX_HWOBJ_PER_MSPND_REG_1));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3526  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3527          /* Initialize receive FIFO base message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3528  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3529          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3530          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3531          Can_lRxFifoBaseMOInit(RxFifoCfgPtr, FifoIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3532            RxFifoCfgPtr[FifoIndex].FrameType);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3533  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3534          Can_lRxFifoBaseMOInit(RxFifoCfgPtr, FifoIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3535  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3536  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3537          /* Calculate Threshold, TOP and BOT values based on configuration */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3538          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3539          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3540          FifoThreshold = RxFifoCfgPtr[FifoIndex].RxFifoThreshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3541          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3542          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3543          FifoSize      = RxFifoCfgPtr[FifoIndex].RxFifoSize ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3544          FifoBottom    = (uint8)HwObjectId ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3545          FifoTop      = (uint8)((uint8)HwObjectId + (uint8)(FifoSize - CAN_ONE));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3546          FifoThreshold = FifoBottom + FifoThreshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3547  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3548          /* If Size and Threshold is same Set BOT as SEL */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3549          if(FifoThreshold > FifoTop)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3550          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3551            FifoThreshold = FifoBottom ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3552          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3553  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3554          /* Update SEL, TOP, CUR and BOT to the message object MOFGPR */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3555          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3556              (unsigned_int)(((uint32)FifoThreshold << CAN_MOFGPR_SEL_SHIFT) |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3557                  ((uint32)FifoBottom << CAN_MOFGPR_CUR_SHIFT) |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3558                      ((uint32)FifoTop << CAN_MOFGPR_TOP_SHIFT) |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3559                          ((uint32)FifoBottom)));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3560  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3561          /* Set MMC and OVIE bits in MOFCR */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3562          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3563                                                                  CAN_FIFO_MOFCR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3564  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3565          /* Set interrupt service node --> Refer section "Service Request Node
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3566          Allocation/Mapping" for SRN mapping */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3567          /* Receive FIFO interrupt request is generated on interrupt node TXINP
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3568          of the receive FIFO base MO */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3569          /* Assigned SRN is the receive SRN of the corresponding CAN controller*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3570          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3571              CAN_MOIPR_TXINP_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3572              (uint32)((uint32)((uint32)CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx] +\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3573                        (uint32)HwCtrlIDKer) << CAN_MOIPR_TXINP_BITPOS))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3574  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3575          /*  Set the direction of hardware object to Receive. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3576          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3577                                                               CAN_MOCTR_DIR_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3578  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3579          /* Enable hardware object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3580          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3581           (~((uint32)(CAN_MOCTR_RXEN_CLR | CAN_MOCTR_MSGVAL_CLR)))&\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3582                                                        CAN_MOCTR_MSGVAL_MASK);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3583  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3584          /* Loop through all the slave objects of this receive FIFO structure */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3585          for (SlaveIndex = (HwObjectId+1U);\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3586            (SlaveIndex<=FifoTop)&&(E_OK==RetVal);\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3587            SlaveIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3588          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3589  #ifdef IFX_CAN_DEBUG02
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3590            TestCan_SetMOAllocationErrorType(TESTCAN_RXFIFO_SLAVE_MO_ERROR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3591  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3592  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3593            /* Allocate the slave objects to associated controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3594            RetVal = Can_lAllocateHwObject(HwControllerId,(uint16)SlaveIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3595  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3596            if(E_OK == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3597            {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3598              /* Set MSGVAL and Clear RXEN bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3599              CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3600                            MO[SlaveIndex].CTR.U,(uint32)CAN_MOCTR_RX_FIFO_SLAVE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3601            }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3602          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3603        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3604      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3605    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3606    return (RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3607  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3608  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3609  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3610  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3611  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3612  ** Syntax           : #if (CAN_STANDARD_ID_ONLY == STD_OFF)                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3613  **                      IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3614  **                           (                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3615  **                             const Can_RxFifoConfigType* RxFifoCfgPtr,      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3616  **                             uint16 FifoIndex,                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3617  **                             uint8 FrameType                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3618  **                           )                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3619  **                    #else                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3620  **                      IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3621  **                           (                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3622  **                             const Can_RxFifoConfigType* RxFifoCfgPtr,      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3623  **                             uint8 FifoIndex                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3624  **                           )                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3625  **                    #endif                                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3626  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3627  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3628  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3629  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3630  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3631  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3632  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3633  ** Parameters (in)  : RxFifoCfgPtr - Pointer to Receive FIFO Configuration    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3634  **                    HwObjectId - Message Object Id                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3635  **                    FrameType - Message Id Type                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3636  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3637  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3638  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3639  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3640  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3641  ** Description      : Initializes receive FIFO base message object            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3642  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3643  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3644  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3645  IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit(
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3646    const Can_RxFifoConfigType* RxFifoCfgPtr,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3647    uint16 FifoIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3648    uint8 FrameType)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3649  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3650  IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit(
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3651    const Can_RxFifoConfigType* RxFifoCfgPtr,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3652    uint16 FifoIndex)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3653  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3654  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3655    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3656    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3657  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3658    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3659    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3660          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3661    KerIdx =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3662      CAN_CALC_KERIDX(Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3663  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3664    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3665          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3666    HwObjectId = RxFifoCfgPtr[FifoIndex].HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3667    /* Set message pending number field (MPN) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3668    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3669              CAN_MOIPR_MPN_CLEARMASK,(uint32)HwObjectId << CAN_MOIPR_MPN_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3670  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3671  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3672    /* Check if FIFO is of type EXTENDED or MIXED Id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3673    if (FrameType != CAN_ID_STANDARD)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3674    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3675      /* Set ID value, ID type and message priority class (to acceptance
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3676      filtering based on CAN identifier) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3677      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3678          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3679      CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3680              (unsigned_int)(CAN_PRIORITY_ID_BASED | CAN_USE_EXTENDED_ID |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3681                                        (uint32)(RxFifoCfgPtr[FifoIndex].MsgId)));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3682  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3683      /* Set filter mask value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3684      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3685          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3686      CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3687                  CAN_MOAMR_AM_CLEARMASK,(uint32)RxFifoCfgPtr[FifoIndex].MaskRef)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3688  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3689      if (FrameType == CAN_ID_MIXED)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3690      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3691        /* Receive both standard and extended IDs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3692        CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3693               CAN_MOAMR_MIDE_CLEARMASK,(uint32)CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3694      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3695    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3696    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3697  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3698    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3699      /* If FIFO is of type STANDARD id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3700      /* Set ID value, ID type and message priority class (to acceptance
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3701      filtering based on CAN identifier) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3702      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3703          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3704      CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3705              (unsigned_int)(CAN_PRIORITY_ID_BASED |((uint32)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3706                    ((RxFifoCfgPtr[FifoIndex].MsgId) <<CAN_MOAR_ID_STD_SHIFT ))));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3707      /* Set filter mask value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3708      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3709          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3710      CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3711              CAN_MOAMR_AM_CLEARMASK,(uint32)RxFifoCfgPtr[FifoIndex].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3712                                                           MaskRef << CAN_POS_18)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3713    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3714  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3715  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3716  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3717  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3718  ** Syntax           : IFX_LOCAL_INLINE void Can_lInitControllerStatus(void)   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3719  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3720  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3721  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3722  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3723  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3724  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3725  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3726  ** Parameters (in)  : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3727  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3728  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3729  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3730  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3731  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3732  ** Description      : Calls function to initialize CAN controllers            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3733  **                    Initializes CAN controller state and wakeup status      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3734  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3735  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3736  IFX_LOCAL_INLINE void Can_lInitControllerStatus(void)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3737  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3738    uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3739  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3740    /* for all configured CAN controllers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3741    for(ControllerId=CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3742      ControllerId<(Can_kConfigPtr->CanNumController);
	ld.a	a15,Can_kConfigPtr
.L818:
	mov	d9,#0
.L637:
	ld.bu	d0,[a15]30
.L642:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3742      ControllerId<(Can_kConfigPtr->CanNumController);      (inlined)
	jeq	d0,#0,.L22
.L322:
	mov	d8,#3
	lea	a14,CAN_NUM_CONTROLLERS_IN_KERNEL
.L337:
	movh	d10,#255

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3743      ControllerId++)      (inlined)
.L23:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3743      ControllerId++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3744    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3745      /* check if the CAN controller is activated */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3746      if(CAN_INVALID_HW_CONTROLLER_ID !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3747        Can_kConfigPtr->CanHwControllerIdMap[ControllerId])
	addsc.a	a2,a15,d9,#0
	ld.bu	d4,[a2]31
.L273:
	mov	d15,#255
.L274:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3746      if(CAN_INVALID_HW_CONTROLLER_ID !=      (inlined)
	jeq	d15,d4,.L24
.L329:
	sha	d2,d4,#-2
.L645:
	addsc.a	a2,a14,d2,#0
.L819:
	sha	d0,d2,#4
.L820:
	extr.u	d12,d0,#0,#8
	ld.bu	d0,[a2]
.L343:
	lea	a2,CAN_KER
	addsc.a	a5,a2,d2,#2
.L344:
	and	d11,d4,#3
.L345:
	ld.a	a2,[a5]
	sha	d15,d11,#8
.L346:
	sha	d1,d0,#1
.L347:
	addsc.a	a2,a2,d15,#0
.L348:
	add	d0,d11
.L821:
	add	d0,d12
.L822:
	extr.u	d14,d0,#0,#8
	ld.w	d0,[a2]512
.L648:
	extr.u	d1,d1,#0,#8
.L349:
	or	d0,d0,#73
	st.w	[a2]512,d0
.L350:
	mov	d6,d8
.L823:
	ld.a	a4,[a15]
	ld.a	a2,[a5]
.L824:
	add	d1,d11
.L825:
	addsc.a	a4,a4,d9,#1
	addsc.a	a2,a2,d15,#0
	ld.hu	d0,[a4]0
.L649:
	st.w	[a2]524,d0
.L826:
	add	d1,d12
.L354:
	ld.a	a2,[a5]
.L355:
	extr.u	d13,d1,#0,#8
.L356:
	addsc.a	a2,a2,d15,#0
	ld.w	d15,[a2]520
	insert	d15,d15,#0,#0,#4
.L650:
	or	d15,d13
	st.w	[a2]520,d15
.L338:
	ld.w	d15,[a2]532
.L651:
	or	d15,d10
	st.w	[a2]532,d15
.L339:
	ld.w	d15,[a2]512
.L652:
	insert	d15,d15,#0,#6,#1
	st.w	[a2]512,d15
.L359:
	addsc.a	a2,a12,d4,#0
.L827:
	mul	d15,d9,#6
.L653:
	st.b	[a2],d9
.L828:
	ld.a	a15,[a15]16
.L829:
	addsc.a	a15,a15,d15,#0
.L830:
	ld.w	d5,[a15]
.L831:
	call	Can_lSetBaudrate
.L646:
	ld.a	a15,Can_kConfigPtr
.L832:
	lea	a2,[a15]8
	ld.a	a15,[a2]
.L833:
	addsc.a	a15,a15,d9,#2
.L834:
	ld.bu	d15,[a15]2
.L835:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2935    if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L25
.L836:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3748      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3749        /* Initialize the CAN controller registers */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3750        Can_lInitializeController(ControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3751          Can_kConfigPtr->CanHwControllerIdMap[ControllerId]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3752      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3753  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3754      /* Initialize the CAN controller status to STOPPED state */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3755      Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3756  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3757  #if (CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3758      /* Clear wakeup status flag */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3759      Can_17_MCanP_ControllerWakeupStatus[ControllerId] = CAN_ZERO ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3760  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3761    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3762  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3763  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3764  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3765  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3766  ** TRACEABILITY: [cover parentID=DS_AS403_CAN384_CAN262,DS_AS403_CAN257_CAN266,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3767  DS_AS403_CAN264,DS_AS403_CAN268]                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3768  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3769  ** Syntax           : IFX_LOCAL_INLINE void Can_lSetModeWuSupportOn           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3770  **                                   (                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3771  **                                       uint8 Controller,                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3772  **                                       uint8 HwControllerId,                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3773  **                                     Can_StateTransitionType Transition     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3774  **                                     )                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3775  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3776  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3777  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3778  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3779  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3780  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3781  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3782  ** Reentrancy       : Reentrant (for different controllers)                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3783  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3784  ** Parameters (in)  : Controller - Associated CAN Controller (CanControllerId)**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3785  **                    HwControllerId - Associated hardware CAN Controller Id  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3786  **                    Transition - Requested transition                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3787  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3788  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3789  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3790  ** Return value     : void                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3791  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3792  ** Description      : Performs software triggered state transitions of the    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3793  **                    CAN Controller State machine when wakeup support is     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3794  **                    enabled                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3795  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3796  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3797  IFX_LOCAL_INLINE void Can_lSetModeWuSupportOn(uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3798                                            uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3799                                            Can_StateTransitionType Transition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3800  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3801  #if(CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3802    uint8 HohIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3803    uint8 FirstTxMo;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3804    uint8 NumTxMo;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3805  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3806    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3807    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3808  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3809    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3810    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3811    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3812  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3813    switch (Transition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3814    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3815    case CAN_T_START :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3816      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3817        /* Clear old transmit requests, if any */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3818  #if(CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3819        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3820          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3821        FirstTxMo = Can_kConfigPtr->
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3822          CanControllerMOMapConfigPtr[Controller].ControllerMOMap[2];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3823        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3824          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3825        NumTxMo = Can_kConfigPtr->
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3826          CanControllerMOMapConfigPtr[Controller].ControllerMOMap[3];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3827        for(HohIndex=0U; HohIndex<NumTxMo; HohIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3828        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3829          CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[FirstTxMo].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3830                                               (uint32)(CAN_MOCTR_WRITE_REQ_CLR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3831          FirstTxMo++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3832        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3833  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3834  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3835        /* Enable transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3836        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3837       CAN_NCR_TXDIS_CLEARMASK,(uint32)CAN_NODE_TX_ENABLE << CAN_NCR_TXDIS_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3838  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3839        /* Clear receive message object to avoid old (unintended) notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3840  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3841        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3842          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3843        if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3844        Can_kConfigPtr->CanEventHandlingConfigPtr[Controller].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3845                                                     CanEventType[EVENTTYPE_ONE])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3846        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3847          /* Clear receive message object to avoid old (unintended)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3848            notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3849          Can_lClearReceivedMsg(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3850        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3851        else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3852        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3853  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3854          /* Clear receive message object to avoid old (unintended)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3855            notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3856          Can_lClearReceivedMsgRuntime(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3857  #endif/*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3858        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3859  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3860  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3861        /* Enable CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3862        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3863                                          CAN_NCR_INIT_CLEARMASK,CAN_NODE_ENABLE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3864  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3865        /* Set current mode to STARTED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3866        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STARTED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3867  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3868      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3869    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3870    case CAN_T_SLEEP :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3871      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3872        /* Clear receive message object to avoid old (unintended) notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3873  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3874        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3875          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3876        if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3877        Can_kConfigPtr->CanEventHandlingConfigPtr[Controller].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3878                                                     CanEventType[EVENTTYPE_ONE])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3879        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3880          /* Clear receive message object to avoid old (unintended)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3881            notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3882          Can_lClearReceivedMsg(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3883        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3884        else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3885        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3886  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3887          /* Clear receive message object to avoid old (unintended)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3888            notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3889          Can_lClearReceivedMsgRuntime(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3890  #endif/*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3891        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3892  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3893  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3894        /* Enable CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3895        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3896                                          CAN_NCR_INIT_CLEARMASK,CAN_NODE_ENABLE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3897  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3898        /* Clear wakeup status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3899        Can_17_MCanP_ControllerWakeupStatus[Controller] = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3900  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3901        /* Set current mode to SLEEP */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3902        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_SLEEP;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3903  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3904      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3905    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3906    case CAN_T_STOP :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3907      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3908        /* Disable transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3909        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3910                        CAN_NCR_TXDIS_CLEARMASK,(uint32)CAN_NODE_TX_DISABLE << \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3911                                                             CAN_NCR_TXDIS_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3912  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3913        /* Disable CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3914        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3915                                         CAN_NCR_INIT_CLEARMASK,CAN_NODE_DISABLE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3916  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3917        /* Set current mode to STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3918        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STOPPED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3919  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3920      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3921    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3922    default:    /* case CAN_T_WAKEUP */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3923      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3924        /* Disable CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3925        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3926                                         CAN_NCR_INIT_CLEARMASK,CAN_NODE_DISABLE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3927  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3928        /* Set current mode to STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3929        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STOPPED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3930  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3931      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3932    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3933    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3934  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3935  #endif /* #if(CAN_WAKEUP_CONFIGURED == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3936  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3937  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3938  ** TRACEABILITY: [cover parentID=DS_AS_CAN261_CAN273_CAN282,DS_AS_CAN265,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3939  DS_AS_CAN263_CAN283]                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3940  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3941  ** Syntax           : IFX_LOCAL_INLINE void Can_lSetModeWuSupportOff          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3942  **                                   (                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3943  **                                       uint8 Controller,                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3944  **                                       uint8 HwControllerId,                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3945  **                                     Can_StateTransitionType Transition     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3946  **                                     )                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3947  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3948  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3949  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3950  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3951  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3952  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3953  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3954  ** Reentrancy       : Reentrant (for different controllers)                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3955  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3956  ** Parameters (in)  : Controller - Associated CAN Controller (CanControllerId)**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3957  **                    HwControllerId - Associated hardware CAN Controller Id  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3958  **                    Transition - Requested transition                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3959  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3960  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3961  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3962  ** Return value     : void                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3963  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3964  ** Description      : Performs software triggered state transitions of the    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3965  **                    CAN Controller State machine when wakeup support is     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3966  **                    Disabled                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3967  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3968  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3969  IFX_LOCAL_INLINE void Can_lSetModeWuSupportOff(uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3970                                             uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3971                                             Can_StateTransitionType Transition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3972  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3973  #if(CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3974    uint8 HohIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3975    uint8 FirstTxMo;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3976    uint8 NumTxMo;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3977  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3978    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3979    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3980  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3981    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3982    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3983    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3984  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3985    switch (Transition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3986    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3987    case CAN_T_START :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3988      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3989        /* Clear old transmit requests, if any */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3990  #if(CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3991        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3992          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3993        FirstTxMo = Can_kConfigPtr->
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3994          CanControllerMOMapConfigPtr[Controller].ControllerMOMap[2];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3995        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3996          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3997        NumTxMo = Can_kConfigPtr->
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3998          CanControllerMOMapConfigPtr[Controller].ControllerMOMap[3];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3999  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4000        for(HohIndex = CAN_ZERO; HohIndex < NumTxMo; HohIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4001        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4002          CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[FirstTxMo].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4003                                               (uint32)(CAN_MOCTR_WRITE_REQ_CLR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4004          FirstTxMo++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4005        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4006  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4007  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4008        /* Clear receive message object to avoid old (unintended) notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4009  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4010        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4011          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4012        if (CAN_INTERRUPT ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4013        Can_kConfigPtr->CanEventHandlingConfigPtr[Controller].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4014                                                     CanEventType[EVENTTYPE_ONE])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4015        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4016          /* Clear receive message object to avoid old (unintended)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4017            notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4018          Can_lClearReceivedMsg(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4019        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4020        else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4021        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4022  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4023          /* Clear receive message object to avoid old (unintended)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4024            notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4025          Can_lClearReceivedMsgRuntime(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4026  #endif/*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4027        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4028  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4029  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4030        /* Enable CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4031        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4032                                          CAN_NCR_INIT_CLEARMASK,CAN_NODE_ENABLE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4033  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4034        /* Set current mode to STARTED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4035        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STARTED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4036      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4037    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4038    case CAN_T_SLEEP :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4039      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4040        /* Set current mode to SLEEP */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4041        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_SLEEP;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4042      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4043    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4044    case CAN_T_STOP :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4045      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4046        /* Disable CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4047        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4048                                 CAN_NCR_INIT_CLEARMASK,(uint32)CAN_NODE_DISABLE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4049       /* Set current mode to STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4050        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STOPPED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4051      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4052    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4053    default:  /* case CAN_T_WAKEUP */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4054      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4055        /* Set current mode to STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4056        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STOPPED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4057      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4058    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4059    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4060  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4061  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4062  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4063  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4064  ** Syntax           : void Can_lClearReceivedMsg(uint8 HwControllerId)        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4065  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4066  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4067  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4068  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4069  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4070  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4071  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4072  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4073  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4074  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4075  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4076  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4077  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4078  ** Description      : Clears receive message objects to avoid any unintended  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4079  **                    notification                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4080  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4081  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4082  static void Can_lClearReceivedMsg(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4083  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4084    volatile uint32 MsiMaskCopy;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4085    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4086    uint8 PndBitPosition;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4087    uint8 MsgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4088    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4089    uint8 LoopBreak32;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4090  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4091    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4092    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4093  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4094    /* Save current MSIMASK - which needs to be restored back at the end */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4095    /* to avoid re-entrancy issue */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4096    MsiMaskCopy = CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MSIMASK.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4097  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4098    /* Loop through each of the MSPND register to check for pending notification*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4099    for (MsgIndex = 0U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4100      MsgIndex <= Can_kConfigPtr->CanRxLastMspndIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4101      MsgIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4102    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4103      LoopBreak32 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4104      /* Load corresponding MSIMASK to register */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4105      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MSIMASK.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4106                                         Can_RxMsiMask[HwControllerId][MsgIndex]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4107  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4108      /* Check for any pending notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4109      /* To avoid infinite loop in case of hardware error, LoopBreak is used
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4110      with worst case of 32 iterations to process 32 message objects pointed
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4111      by the given MSIMASK */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4112      while (((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4113              MSID[MsgIndex].U) & CAN_MSID_INDEX) !=\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4114                      CAN_MSID_NO_MSG_PND_VALUE)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4115                      && (LoopBreak32 < CAN_THIRTY_TWO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4116      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4117        /* Count the iterations */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4118        LoopBreak32++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4119        /* Get the pending bit position */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4120        PndBitPosition = (uint8)(CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4121                            (CAN_KER[KerIdx]->MSID[MsgIndex].U) & CAN_MSID_INDEX);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4122  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4123        /* Calculate the message object id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4124        HwObjectId = ((uint16)PndBitPosition + \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4125          (uint16)((uint16)(MsgIndex) << CAN_MOIPR_MPN_MSPND_SHIFT));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4126  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4127        /* Clear NEWDAT and RXPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4128        CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4129                                      CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4130  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4131        /* Clear MSPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4132        CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MSPND[MsgIndex].U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4133                                      ~((unsigned_int)CAN_ONE << PndBitPosition));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4134      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4135    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4136    /* Restore the MSIMASK value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4137    CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MSIMASK.U,MsiMaskCopy);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4138  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4139  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4140  /*#if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4141  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4142  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4143  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4144  ** Syntax           : void Can_lClearReceivedMsgRuntime(uint8 HwControllerId) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4145  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4146  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4147  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4148  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4149  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4150  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4151  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4152  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4153  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4154  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4155  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4156  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4157  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4158  ** Description      : Clears receive message objects to avoid any unintended  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4159  **                    notification                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4160  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4161  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4162  static void Can_lClearReceivedMsgRuntime(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4163  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4164    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4165    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4166    uint8 RxObjectStart = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4167    uint8 RxObjectcount = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4168    uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4169    uint8 LoopIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4170    uint8 MOIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4171    uint8 MOIndexIncrement;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4172  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4173     /* Calculate to which kernel the Controller belongs to */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4174     KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4175  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4176     /* Extract corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4177     ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4178     /* Calculate Rx MO start */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4179     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4180         PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4181     RxObjectStart = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4182                                     [ControllerId].ControllerMOMap[CAN_ZERO];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4183     /* Calculate Rx MO Count */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4184     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4185         PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4186     RxObjectcount = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4187                                     [ControllerId].ControllerMOMap[CAN_ONE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4188  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4189    #if(CAN_FD_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4190    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4191     PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4192    if(NULL_PTR !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4193    Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4194    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4195      RxObjectcount = (RxObjectcount/CAN_THREE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4196      /*Set the MO index increment value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4197      MOIndexIncrement = CAN_MOSize_FD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4198    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4199    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4200    #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4201    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4202      /*Set the MO index increment value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4203      MOIndexIncrement = CAN_MOSize_STD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4204    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4205  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4206    for(LoopIndex = CAN_ZERO;LoopIndex < RxObjectcount;LoopIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4207    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4208      HwObjectId = (uint16)((uint16)RxObjectStart + MOIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4209      if ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4210                (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U))& CAN_MOSTAT_RXPND_MASK)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4211      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4212         /* Clear NEWDAT and RXPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4213         CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4214                               MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4215                              (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4216      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4217  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4218      /* Increment MO Index */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4219      MOIndex = MOIndex + MOIndexIncrement;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4220    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4221  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4222  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4223  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4224  /*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4225  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4226  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4227  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4228  ** TRACEABILITY: [cover parentID=DS_AS403_CAN409_CAN410_CAN411_CAN412]        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4229  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4230  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lModeDetCheck       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4231  **                                   (                                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4232  **                                       uint8 Controller,                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4233  **                                     Can_StateTransitionType Transition     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4234  **                                     )                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4235  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4236  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4237  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4238  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4239  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4240  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4241  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4242  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4243  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4244  ** Parameters (in)  : Controller - Associated CAN Controller Id               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4245  **                    Transition - Requested transition                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4246  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4247  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4248  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4249  ** Return value     : E_OK - Valid transition                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4250  **                    E_NOT_OK - Invalid transition                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4251  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4252  ** Description      : Checks the validity of software triggered CAN           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4253  **                    Controller state transition                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4254  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4255  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4256  IFX_LOCAL_INLINE Std_ReturnType Can_lModeDetCheck(uint8 Controller,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4257                                               Can_StateTransitionType Transition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4258  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4259    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4260  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4261    RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4262  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4263    switch (Transition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4264    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4265    case CAN_T_START :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4266      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4267        /* if current mode is not STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4268        if (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4269        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4270          RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4271        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4272      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4273    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4274    case CAN_T_SLEEP :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4275      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4276        /* if current mode is neither SLEEP nor STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4277        if((Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_SLEEP) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4278          (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4279        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4280          RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4281        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4282      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4283    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4284    case CAN_T_STOP :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4285      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4286        /* if current mode is neither STARTED nor STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4287        if((Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STARTED) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4288          (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4289        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4290          RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4291        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4292      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4293    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4294    case CAN_T_WAKEUP :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4295      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4296        /* if current mode is neither SLEEP nor STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4297        if((Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_SLEEP) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4298          (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4299        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4300          RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4301        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4302      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4303    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4304    default:
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4305      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4306        /* Invalid state is requested */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4307        RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4308      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4309    break;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4310    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4311    return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4312  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4313  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4314  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4315  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4316  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR759_PR760_PR761,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4317  DS_AS_CAN202_CAN049]                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4318  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4319  ** Syntax     :IFX_LOCAL_INLINE void Can_lDisableInterrupts (uint8 Controller)**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4320  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4321  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4322  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4323  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4324  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4325  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4326  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4327  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4328  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4329  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4330  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4331  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4332  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4333  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4334  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4335  ** Description      : Disables CAN Controller Interrupts                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4336  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4337  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4338  IFX_LOCAL_INLINE void Can_lDisableInterrupts (uint8 Controller)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4339  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4340    volatile uint32 * RegAddress;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4341    uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4342    uint8 BOSrcNum;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4343    uint8 RxSrcNum;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4344    uint32 TxSreVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4345    uint32 RxSreVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4346    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4347    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4348    uint8 IntSrcOffset;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4349  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4350  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4351    /* Enter Critical Section */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4352    SchM_Enter_Can_17_MCanP_CanDisInt();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4353  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4354    if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4355    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4356      HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[Controller];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4357      /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4358      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4359      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4360      IntSrcOffset = (KerIdx << CAN_FOUR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4361  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4362      /* Store the interrupt enable/disable status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4363      /* Refer section "Service Request Node Allocation/Mapping" for SRN mapping*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4364      BOSrcNum =  (uint8)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4365        ((uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) << CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4366        + (HwCtrlIDKer * CAN_HEDEVICE) + IntSrcOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4367      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4368  efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4369      TxSreVal = (uint32)((CAN_SFR_RUNTIME_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4370    (CAN_SRC[HwCtrlIDKer + IntSrcOffset].U) & CAN_SRC_SRE) >> CAN_SRC_SRE_BITPOS)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4371                  << CAN_TX_INT_SHIFT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4372  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4373      RxSrcNum =  (uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) +
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4374        HwCtrlIDKer + IntSrcOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4375      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4376  efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4377      RxSreVal = (uint32)((CAN_SFR_RUNTIME_READ32(CAN_SRC[RxSrcNum].U)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4378                       & CAN_SRC_SRE) >> CAN_SRC_SRE_BITPOS) << CAN_RX_INT_SHIFT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4379  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4380      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4381  efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4382      Can_InterruptsEnabledStatus[Controller] = (uint8) (TxSreVal | RxSreVal |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4383                  (uint32)((CAN_SFR_RUNTIME_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4384                      (CAN_SRC[BOSrcNum].U) & CAN_SRC_SRE)>> CAN_SRC_SRE_BITPOS));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4385  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4386      /* Disable the interrupts relatd to this controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4387      /* Refer section "Service Request Node Allocation/Mapping" for SRN mapping*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4388  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4389      /* Clear transmit interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4390      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4391      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4392      RegAddress = (volatile uint32 *)(void *)&CAN_SRC[BOSrcNum];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4393      CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_SRE_CLEARMASK),\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4394                                                              CAN_SRC_MASK_NOSET)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4395      /* Clear receive interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4396      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4397      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4398      RegAddress = (volatile uint32 *)(void *)&CAN_SRC[RxSrcNum];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4399      CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_SRE_CLEARMASK),\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4400                                                              CAN_SRC_MASK_NOSET)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4401      /* Clear busoff interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4402      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4403      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4404      RegAddress =(volatile uint32 *)(void *)&CAN_SRC[HwCtrlIDKer + IntSrcOffset];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4405      CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_SRE_CLEARMASK),\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4406                                                              CAN_SRC_MASK_NOSET)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4407   }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4408  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4409    /* Count the number of times Can_17_MCanP_DiableControllerInterrupts API
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4410    is called */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4411    Can_17_MCanP_InterruptDisableCount[Controller]++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4412  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4413    /* Exit Critical Section */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4414    SchM_Exit_Can_17_MCanP_CanDisInt();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4415  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4416  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4417  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4418  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR759_PR760_PR761,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4419  DS_AS_CAN204_CAN208_CAN050]                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4420  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4421  ** Syntax       :IFX_LOCAL_INLINE void Can_lEnableInterrupts(uint8 Controller)**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4422  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4423  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4424  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4425  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4426  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4427  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4428  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4429  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4430  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4431  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4432  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4433  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4434  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4435  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4436  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4437  ** Description      : Disables CAN Controller Interrupts                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4438  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4439  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4440  IFX_LOCAL_INLINE void Can_lEnableInterrupts(uint8 Controller)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4441  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4442    volatile uint32 * RegAddress;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4443    uint32 RegSetMask;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4444    uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4445    uint8 BOSrcNum;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4446    uint8 RxSrcNum;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4447    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4448    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4449    uint8 IntSrcOffset;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4450  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4451    /* Enter Critical Section */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4452    SchM_Enter_Can_17_MCanP_CanEnInt();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4453  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4454    /* No action shall be performed when Can_17_MCanP_DisableControllerInterrupts
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4455    has not been called before. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4456    if (Can_17_MCanP_InterruptDisableCount[Controller] > CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4457    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4458  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4459      /* Incremental disable/enable count */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4460      Can_17_MCanP_InterruptDisableCount[Controller]-- ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4461  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4462      if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4463      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4464        HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[Controller];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4465  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4466        /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4467        KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4468        HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4469        IntSrcOffset = (KerIdx << CAN_FOUR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4470  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4471        /* Restore the status of interrupts */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4472        /* Refer section "Service Request Node Allocation/Mapping" for
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4473        SRN mapping*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4474        BOSrcNum =  (uint8)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4475          ((uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) << CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4476          + (HwCtrlIDKer * CAN_HEDEVICE) + IntSrcOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4477        RxSrcNum =  (uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4478          + HwCtrlIDKer + IntSrcOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4479  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4480        /* Restore transmit interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4481        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4482      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4483        RegAddress = (volatile uint32 *)(void *)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4484         &CAN_SRC[HwCtrlIDKer + IntSrcOffset];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4485        RegSetMask = ((((uint32)Can_InterruptsEnabledStatus[Controller] >>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4486         CAN_TX_INT_SHIFT ) & CAN_ONE)<< CAN_SRE_BIT_POS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4487        CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_MASK_NOCLR),\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4488                                                                      RegSetMask)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4489        /* Restore receive interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4490        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4491      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4492        RegAddress = (volatile uint32 *)(void *)&CAN_SRC[RxSrcNum];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4493        RegSetMask = ((((uint32)Can_InterruptsEnabledStatus[Controller] >>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4494         CAN_RX_INT_SHIFT ) & CAN_ONE)<< CAN_SRE_BIT_POS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4495        CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_MASK_NOCLR),\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4496                                                                      RegSetMask)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4497  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4498        /* Restore busoff interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4499        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4500      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4501        RegAddress = (volatile uint32 *)(void *)&CAN_SRC[BOSrcNum];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4502        RegSetMask =(((uint32)Can_InterruptsEnabledStatus[Controller] &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4503                                             CAN_ONE)<<CAN_SRE_BIT_POS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4504        CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_MASK_NOCLR),\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4505                                                                      RegSetMask)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4506      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4507    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4508    /* Exit Critical Section */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4509    SchM_Exit_Can_17_MCanP_CanEnInt();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4510  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4511  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4512  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4513  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4514  ** TRACEABILITY: [cover parentID=DS_AS_CAN217_CAN218_CAN219]                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4515  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4516  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lWriteDetCheck      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4517  **                                            (                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4518  **                                              Can_HwHandleType Hth,         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4519  **                                              const Can_PduType *PduInfo    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4520  **                                            )                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4521  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4522  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4523  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4524  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4525  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4526  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4527  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4528  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4529  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4530  ** Parameters (in)  : Hth - Hardware Transmit Handler                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4531  **                    PduInfo - Pointer to SDU user memory, DLC and Identifier**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4532  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4533  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4534  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4535  ** Return value     : E_OK - No Development Error                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4536  **                    E_NOT_OK - Development Error detected and reported      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4537  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4538  ** Description      : Handles DET checks for Can_17_MCanP_Write API           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4539  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4540  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4541  IFX_LOCAL_INLINE Std_ReturnType Can_lWriteDetCheck(Can_HwHandleType Hth,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4542                                                 const Can_PduType *PduInfo)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4543  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4544  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4545  #if (CAN_STANDARD_ID_ONLY != STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4546    const Can_TxHwObjectConfigType *TxHwObjCfgPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4547    uint8 HthIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4548  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4549  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4550    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4551  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4552  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4553    RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4554  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4555  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4556    /* Check if 'Hth' is a valid transmit handle */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4557  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4558  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4559    if((Hth < Can_kConfigPtr->CanNumRxHwObj) ||
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4560      (Hth >= (Can_kConfigPtr->CanNumRxHwObj +
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4561      Can_kConfigPtr->CanNumTxHwObj)))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4562  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4563    if (Hth >= Can_kConfigPtr->CanNumTxHwObj)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4564  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4565  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4566    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4567      /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4568      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4569        CAN_SID_WRITE, CAN_E_PARAM_HANDLE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4570      RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4571    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4572  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4573  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4574    /* Check if PduInfo is a null pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4575    else if (PduInfo == NULL_PTR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4576    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4577      /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4578      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4579        CAN_SID_WRITE, CAN_E_PARAM_POINTER);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4580      RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4581    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4582  #if (CAN_FD_ENABLE== STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4583    /* check if DLC is greater than 8 */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4584    else if (PduInfo->length > CAN_MAX_DATA_LENGTH )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4585    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4586      /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4587      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4588        CAN_SID_WRITE, CAN_E_PARAM_DLC);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4589      RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4590    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4591  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4592  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4593    /* Valid CAN FD lengths: 0-8,12,16,20,24,32,48,64 bytes */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4594    else if ((PduInfo->length > CAN_MAX_DATA_LENGTH)&&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4595      (PduInfo->length <= CAN_MAX_FD_LENGTH))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4596    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4597      if ((PduInfo->length > CAN_TWENTY_FOUR)?
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4598        (PduInfo->length & CAN_FIFTEEN):(PduInfo->length & CAN_THREE))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4599      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4600        /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4601        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4602          CAN_SID_WRITE, CAN_E_PARAM_DLC);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4603        RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4604      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4605    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4606    else if (PduInfo->length > CAN_MAX_FD_LENGTH)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4607    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4608      /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4609      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4610        CAN_SID_WRITE, CAN_E_PARAM_DLC);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4611      RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4612    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4613  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4614    /* Check if sdu is a null pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4615    else if (PduInfo->sdu == NULL_PTR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4616    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4617      /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4618      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4619        CAN_SID_WRITE, CAN_E_PARAM_POINTER);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4620      RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4621    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4622    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4623    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4624  #if (CAN_STANDARD_ID_ONLY != STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4625      /* Extract HTH index */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4626  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4627      HthIndex = (uint8)(Hth - Can_kConfigPtr->CanNumRxHwObj);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4628  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4629      HthIndex = Hth;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4630  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4631  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4632      TxHwObjCfgPtr = Can_kConfigPtr->CanTxHwObjectConfigPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4633  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4634      /* Check for invalid message type */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4635      /* [1] Standard id was configured for the hardware object,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4636      but extended id is requested for transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4637      /* [2] Extended id was configured for the hardware object,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4638      but standard id is requested for transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4639      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4640          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4641      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4642          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4643      if (((TxHwObjCfgPtr[HthIndex].FrameType == CAN_ID_EXTENDED) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4644        (((PduInfo->id) & CAN_EXTENDED_MSB_SET) == CAN_ZERO)) ||
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4645        ((TxHwObjCfgPtr[HthIndex].FrameType == CAN_ID_STANDARD) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4646        (((PduInfo->id) & CAN_EXTENDED_MSB_SET) != CAN_ZERO)))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4647      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4648        /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4649        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4650          CAN_SID_WRITE, CAN_E_PARAM_MSGID);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4651        RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4652      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4653  #endif /* #if (CAN_STANDARD_ID_ONLY != STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4654    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4655  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4656    UNUSED_PARAMETER (Hth)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4657    UNUSED_PARAMETER (PduInfo)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4658  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4659  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4660      return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4661  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4662  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4663  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4664  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4665  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4666  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR759_PR760_PR761,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4667  DS_AS_CAN011_CAN212_CAN213_CAN214_CAN275_CAN059_CAN076_CAN276]**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4668  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4669  ** Syntax           : IFX_LOCAL_INLINE Can_ReturnType Can_lWriteMsgObj        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4670  **                                            (                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4671  **                                              uint8 HthIndex,               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4672  **                                              uint16 HwObjectId,            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4673  **                                              const Can_PduType *PduInfo    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4674  **                                            )                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4675  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4676  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4677  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4678  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4679  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4680  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4681  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4682  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4683  ** Parameters (in)  : HthIndex - HTH index in the configuration structure     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4684  **                    HwObjectId - Message Object Id                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4685  **                    PduInfo - Pointer to SDU user memory, DLC and Identifier**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4686  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4687  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4688  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4689  ** Return value     : CAN_OK - Write command has been accepted                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4690  **                    CAN_BUSY - No message object available or pre-emptive   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4691  **                               call of Can_17_MCanP_Write that can't be     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4692  **                               implemented re-entrant                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4693  **                    CAN_NOT_OK - development error occured                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4694  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4695  ** Description      : Programs Message Object for transmission                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4696  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4697  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4698  IFX_LOCAL_INLINE Can_ReturnType Can_lWriteMsgObj(uint8 HthIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4699                                               uint16 HwObjectId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4700                                               const Can_PduType *PduInfo)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4701  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4702    volatile uint32 *MoData0_3;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4703    volatile uint32 *MoData4_7;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4704  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4705    volatile uint32 *MoData8_35;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4706    volatile uint32 *MoData36_63;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4707    uint8 locindex0;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4708    uint8 locindex1;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4709    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4710  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4711    uint8 Index;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4712    uint8 Index1;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4713    uint8 TxMOIdx = 0U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4714    uint8 HthIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4715  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4716    #if(CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4717    #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4718    uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4719    uint8 HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4720    #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4721    #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4722  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4723    Can_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4724    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4725    uint8 MsgDLC;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4726    volatile uint8 CanCtrStat;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4727    uint8 Loc_Sdu;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4728  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4729    RetVal = CAN_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4730    Index1 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4731  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4732    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4733    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4734          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4735    KerIdx =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4736      CAN_CALC_KERIDX(Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4737      HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4738  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4739  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4740      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4741          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4742      HwCtrlIDKer =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4743      CAN_CALC_HWCTRLID(Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4744      HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4745  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4746    /* Enter Critical Section */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4747    SchM_Enter_Can_17_MCanP_CanWrMO();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4748  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4749    /* Check for free message object confgiured for the HTH */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4750  #if(CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4751  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4752    while
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4753    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4754          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4755      ((((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].STAT.U\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4756      )) &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4757      (CAN_MOCTR_RXUPD_CLR | CAN_MOCTR_TXRQ_CLR)) != CAN_ZERO) &&\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4758      (HwObjectId <\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4759      (Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].MsgObjIdLast)))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4760    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4761      #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4762      /* Extract HwControllerId from the configuration */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4763      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4764        PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4765      HwControllerId = Can_kConfigPtr->CanTxHwObjectConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4766                                                      [HthIndex].HwControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4767      /* Extract the corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4768      ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4769      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4770      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4771      if(NULL_PTR !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4772         Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4773      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4774          HwObjectId+= CAN_MOSize_FD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4775      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4776      else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4777      #endif /* End of #if (CAN_FD_ENABLE== STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4778      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4779          HwObjectId+= CAN_MOSize_STD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4780      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4781    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4782  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4783  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4784  #ifdef IFX_CAN_DEBUG
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4785    CanCtrStat = TestCan_DebugMask;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4786  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4787    CanCtrStat =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4788      (uint8)(CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4789                                  [HwObjectId].STAT.U) & CAN_MOCTR_RXUPD_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4790  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4791  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4792    /* Check if hardware transmit object is busy with another transmit request */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4793    if (CanCtrStat== CAN_ZERO )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4794    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4795      /* Signal mutex for Hth */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4796      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4797                                                 ~((uint32)CAN_MOCTR_RXUPD_CLR1));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4798  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4799      /* Exit Critical Section */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4800      SchM_Exit_Can_17_MCanP_CanWrMO();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4801  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4802      /* The CAN driver writes ID and DLC in the appropriate hardware
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4803      registers and triggers the transmission. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4804  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4805      /* Check if a pre-emptive call of Can_Write has been issued, that cannot be
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4806      handled re-entrant (i.e. a Can_17_MCanP_Write call with the same HTH)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4807      if ((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4808                                      STAT.U) & CAN_MOCTR_TXRQ_CLR) == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4809      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4810  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4811        /* Check if extended id is requested for transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4812        if (PduInfo->id & CAN_EXTENDED_MSB_SET)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4813        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4814          /* Set ID value, ID type and message priority class  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4815        CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4816                                    CAN_PRIORITY_ID_BASED | CAN_USE_EXTENDED_ID);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4817        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4818                CAN_MOAR_ID_CLEARMASK,(uint32)(PduInfo->id & CAN_PDUINFO_ID_MASK))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4819  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4820          if (PduInfo->id & CAN_FD_EXTENDED_SET)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4821          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4822            Can_lFDFset(KerIdx,HwCtrlIDKer,HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4823          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4824          else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4825          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4826              CAN_SFR_RUNTIME_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4827               ((CAN_KER[KerIdx]->MO[HwObjectId].FCR.U),\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4828                                              CAN_MOFCR_FDF_CLEARMASK,CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4829          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4830  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4831        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4832        else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4833  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4834          /* Standard id is requested for transmission */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4835        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4836          /* Set ID value, ID type and message priority class  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4837         CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4838                                                          CAN_PRIORITY_ID_BASED);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4839         CAN_SFR_RUNTIME_USER_MODE_MODIFY32((CAN_KER[KerIdx]->MO[HwObjectId].AR.U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4840              ,CAN_MOAR_ID_CLEARMASK,((uint32)PduInfo->id <<\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4841                                  CAN_MOAR_ID_STD_SHIFT))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4842  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4843          if (PduInfo->id & CAN_FD_STANDARD_SET)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4844          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4845            Can_lFDFset(KerIdx,HwCtrlIDKer,HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4846          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4847          else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4848          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4849             CAN_SFR_RUNTIME_USER_MODE_MODIFY32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4850               ((CAN_KER[KerIdx]->MO[HwObjectId].FCR.U),\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4851                                              CAN_MOFCR_FDF_CLEARMASK,CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4852          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4853  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4854        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4855  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4856        MsgDLC = PduInfo->length;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4857        /*Message length varies from DLC when FD is enabled and
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4858        DLC is greater than 8.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4859        DLC of 9,10,11,12,13,14,15 corresponds to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4860        message length 12,16,20,24,32,48,64 respectively */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4861  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4862        if (PduInfo->length > CAN_EIGHT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4863        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4864          MsgDLC = (PduInfo->length > CAN_TWENTY_FOUR)?
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4865            ((PduInfo->length >> CAN_FOUR)+ CAN_ELEVEN):
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4866          ((PduInfo->length >> CAN_TWO) + CAN_SIX);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4867        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4868  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4869  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4870        /* Assign DLC */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4871        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4872                                                MO[HwObjectId].FCR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4873                                                CAN_MOFCR_DLC_CLEARMASK,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4874                                                (uint32)MsgDLC <<\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4875                                                CAN_MOFCR_DLC_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4876  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4877        /* Update data bytes */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4878        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4879        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4880        MoData0_3=\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4881          (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAL.U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4882        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4883        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4884        MoData4_7 =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4885          (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAH.U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4886  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4887  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4888  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4889        /* For a 64 byte message, data bytes 0-7 are stored in the message object,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4890        similar to a standard message object, data bytes 8-35 are stored
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4891        in the message object to which MOFGPR.BOT refers to and
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4892        data bytes 36-63 are stored in the message object to which MOFGPR.TOP
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4893        refers to Data byte 0 refers to the first byte transferred within
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4894        a CAN frame. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4895  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4896        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4897        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4898        MoData8_35 = (volatile uint32 *)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4899          (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_ONE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4900        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4901        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4902        MoData36_63 = (volatile uint32 *)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4903          (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_TWO];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4904  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4905        locindex0 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4906        locindex1 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4907  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4908  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4909  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4910        for(Index=CAN_ZERO; Index < PduInfo->length; Index++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4911        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4912          if (CAN_FOUR > Index)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4913          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4914  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4915            /* copy data to local variable */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4916            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4917      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4918            Loc_Sdu= PduInfo->sdu[Index];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4919            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4920      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4921            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4922      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4923            CAN_SFR_RUNTIME_USER_MODE_MODIFY32(MoData0_3[0],\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4924                         CAN_MO_CLEARMASK(Index),(uint32)Loc_Sdu<<\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4925                                              CAN_MO_BIT_SHIFT_COUNT(Index))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4926  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4927          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4928          if ((CAN_FOUR <= Index)&& (CAN_EIGHT > Index))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4929          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4930            /* copy data to local variable */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4931            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4932      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4933            Loc_Sdu= PduInfo->sdu[Index];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4934            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4935      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4936            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4937      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4938            CAN_SFR_RUNTIME_USER_MODE_MODIFY32(MoData4_7[0],\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4939                         CAN_MO_CLEARMASK(Index1),(uint32)Loc_Sdu<<\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4940                                             CAN_MO_BIT_SHIFT_COUNT(Index1))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4941            Index1++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4942          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4943  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4944  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4945          if ((CAN_EIGHT <= Index)&& (CAN_THIRTY_SIX > Index))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4946          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4947            /* copy data to local variable */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4948            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4949      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4950            Loc_Sdu= PduInfo->sdu[Index];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4951            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4952      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4953            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4954      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4955            CAN_SFR_RUNTIME_USER_MODE_MODIFY32(MoData8_35[locindex0],\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4956                         CAN_MO_CLEARMASK((Index % CAN_FOUR)),(uint32)Loc_Sdu<<\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4957                                     CAN_MO_BIT_SHIFT_COUNT(Index % CAN_FOUR))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4958           locindex0 = Can_lindexcheck(Index,locindex0);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4959  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4960          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4961          if (CAN_THIRTY_SIX <= Index)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4962          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4963  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4964            /* copy data to local variable */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4965            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4966      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4967            Loc_Sdu= PduInfo->sdu[Index];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4968            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4969      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4970            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4971      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4972            CAN_SFR_RUNTIME_USER_MODE_MODIFY32(MoData36_63[locindex1],\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4973                        CAN_MO_CLEARMASK(Index % CAN_FOUR),(uint32)Loc_Sdu<<\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4974                                     CAN_MO_BIT_SHIFT_COUNT(Index % CAN_FOUR))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4975  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4976           locindex1 = Can_lindexcheck(Index,locindex1);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4977  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4978          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4979  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4980        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4981        /* Calculate the starting value of Hw Object Id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4982        HthIdx = (uint8)(HwObjectId-(Can_kConfigPtr->CanTxHwObjCntKer[KerIdx]));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4983        TxMOIdx = Can_lGetHthIndex(KerIdx,HthIdx);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4984        /* Mark the hardware object for transmission. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4985        CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4986                                             ~((uint32)CAN_MOCTR_WRITE_REQ_CLR1));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4987  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4988        /* Store the software pdu handle number */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4989        Can_SwObjectHandle[KerIdx][TxMOIdx] = PduInfo->swPduHandle;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4990      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4991      else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4992      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4993        /* Hardware object is busy transmitting */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4994        RetVal = CAN_BUSY ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4995      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4996  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4997      /* Release the mutex for Hth */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4998      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4999                                                            CAN_MOCTR_RXUPD_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5000  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5001    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5002    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5003    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5004      /* hardware object busy with another transmit request */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5005      /* Exit Critical Section */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5006      SchM_Exit_Can_17_MCanP_CanWrMO();
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5007  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5008      RetVal = CAN_BUSY ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5009    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5010    return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5011  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5012  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5013  ** TRACEABILITY     :                                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5014  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5015  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5016  ** Syntax           : IFX_LOCAL_INLINE int8 Can_lindexcheck                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5017  **                                            (                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5018  **                                              uint8 index,                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5019  **                                              uint8 locindex,               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5020  **                                            }                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5021  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5022  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5023  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5024  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5025  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5026  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5027  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5028  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5029  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5030  ** Parameters (in)  : index - HTH index in the configuration structure        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5031  **                    locindex - Message Object Id                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5032  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5033  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5034  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5035  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5036  ** Return value     : locindex                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5037  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5038  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5039  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5040  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5041  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5042  ** Description      : API for checkng index                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5043  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5044  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5045  IFX_LOCAL_INLINE uint8 Can_lindexcheck(uint8 index,uint8 locindex)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5046  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5047  if((index % CAN_FOUR)==3U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5048   {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5049    locindex++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5050   }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5051  else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5052  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5053  /*Do nothing*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5054  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5055  return(locindex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5056  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5057  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5058  ** TRACEABILITY     : [   ]                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5059  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5060  ** Syntax           : IFX_LOCAL_INLINE void Can_lFDFset                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5061  **                                            (                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5062  **                                              uint8 KerIdx,                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5063  **                                              uint8 HwCtrlIDKer,            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5064  **                                              uint16 HwObjectId             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5065  **                                            )                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5066  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5067  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5068  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5069  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5070  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5071  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5072  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5073  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5074  ** Parameters (in)  : HthIndex - HTH index in the configuration structure     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5075  **                    HwObjectId - Message Object Id                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5076  **                    PduInfo - Pointer to SDU user memory, DLC and Identifier**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5077  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5078  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5079  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5080  ** Return value     : none                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5081  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5082  ** Description      : API for setting the FD frame transmission               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5083  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5084  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5085  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5086  IFX_LOCAL_INLINE void Can_lFDFset(uint8 KerIdx,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5087                                             uint8 HwCtrlIDKer,uint16 HwObjectId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5088  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5089     if((CAN_ONE == ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5090                  (CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U) &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5091                                          CAN_NCR_FDEN) >> CAN_NCR_FDEN_BITPOS)))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5092       {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5093         CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5094            FCR.U,CAN_MOFCR_FDF_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_FDF_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5095       }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5096  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5097  #endif /*#if (CAN_FD_ENABLE== STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5098  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5099  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5100  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5101  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5102  ** Syntax           : static void Can_lReceiveHandler(uint8 HwControllerId)   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5103  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5104  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5105  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5106  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5107  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5108  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5109  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5110  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5111  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5112  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5113  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5114  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5115  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5116  ** Description      : - This function is the core part of the interrupt       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5117  **                    service routine for Receive Interrupt                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5118  **                    - In case of successful reception event, this           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5119  **                    function calls the function Can_lRxIsrExtractData to    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5120  **                    extract data from the message object and notify upper   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5121  **                    layer                                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5122  ******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5123  static void Can_lReceiveHandler(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5124  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5125    volatile uint32 MsiMaskCopy;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5126    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5127    uint8 PndBitPosition;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5128    uint8 MsgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5129    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5130    uint8 LoopBreak32;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5131  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5132    uint8 LoopBreak;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5133    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5134    LoopBreak = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5135  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5136  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5137  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5138    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5139    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5140  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5141    /* Save current MSIMASK - which needs to be restored back at the end */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5142    /* to avoid re-entrancy issue */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5143    MsiMaskCopy = (CAN_KER[KerIdx]->MSIMASK.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5144  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5145  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5146    /* Loop for all the MSPND registers corresponding to recive MOs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5147    for (MsgIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5148      ((MsgIndex <= Can_kConfigPtr->CanRxLastMspndIdx)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5149  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5150      && (LoopBreak == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5151  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5152      );
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5153    MsgIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5154    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5155        LoopBreak32 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5156        /* Load MSIMASK corresponding to the controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5157        CAN_KER[KerIdx]->MSIMASK.U = Can_RxMsiMask[HwControllerId][MsgIndex];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5158  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5159        /* Check for any penidng notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5160        /* To avoid infinite loop in case of hardware error, LoopBreak is used
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5161        with worst case of 32 iterations to process 32 message objects pointed
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5162        by the given MSIMASK */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5163        while ((((((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5164              MSID[MsgIndex].U)) & CAN_MSID_INDEX) !=\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5165                      CAN_MSID_NO_MSG_PND_VALUE)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5166                      && (LoopBreak32 < CAN_THIRTY_TWO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5167  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5168                      && (LoopBreak == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5169  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5170              )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5171        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5172          /* Count the iterations */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5173          LoopBreak32++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5174          /* Get the pending bit position */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5175          PndBitPosition = (uint8)(CAN_KER[KerIdx]->MSID[MsgIndex].U) &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5176                                                      CAN_MSID_INDEX;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5177  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5178          /* Calculate the message object id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5179          HwObjectId = ((uint16)PndBitPosition + \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5180                 (uint16)((uint16)MsgIndex << CAN_MOIPR_MPN_MSPND_SHIFT));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5181  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5182  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5183  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5184          /* Check whether received HwObjectId is Receive FIFO base object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5185          if ((((CAN_KER[KerIdx]->MO[HwObjectId].FCR.U)) & CAN_MOFCR_MMC) ==\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5186                                                           CAN_FIFO_MOFCR_MMC_BIT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5187         {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5188            /* Call receive fifo handler */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5189            Can_lRxFifoHandler(HwControllerId,HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5190  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5191            /* Reset MSPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5192            (CAN_KER[KerIdx]->MSPND[MsgIndex].U =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5193                                      ~((unsigned_int)CAN_ONE << PndBitPosition));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5194          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5195          else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5196  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5197          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5198            /* Extract the required infomation from the message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5199  #if (CAN_DEV_ERROR_DETECT == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5200            Can_lRxIsrExtractData(HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5201            HwObjectId,MsgIndex,PndBitPosition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5202  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5203            Status = Can_lRxIsrExtractData(HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5204            HwObjectId,MsgIndex,PndBitPosition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5205            if(E_NOT_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5206            {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5207              LoopBreak = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5208            }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5209  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_OFF)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5210          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5211        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5212  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5213    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5214      CAN_KER[KerIdx]->MSIMASK.U= MsiMaskCopy;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5215  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5216  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5217  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5218   /* #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U)) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5219  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5220  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5221  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5222  ** Syntax           : static void Can_lReceiveHandlerRuntime\                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5223  **                                                     (uint8 HwControllerId) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5224  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5225  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5226  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5227  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5228  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5229  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5230  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5231  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5232  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5233  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5234  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5235  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5236  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5237  ** Description      :
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5238  **                 - In case of successful reception event, this              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5239  **                function calls the function Can_lRxIsrExtractData_runtime to**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5240  **                extract data from the message object and notify upper       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5241  **                layer                                                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5242  **                - This function is called by the polling function           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5243  **                Can_17_MCanP_MainFunction_Read for controllers              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5244  **                configured with CanRxProcessing as POLLING                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5245  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5246  ******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5247  static void Can_lReceiveHandlerRuntime(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5248  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5249     uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5250     uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5251     uint8 RxObjectStart = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5252     uint8 RxObjectcount = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5253     uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5254     uint8 LoopIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5255     uint8 MOIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5256     uint8 MOIndexIncrement;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5257  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5258     #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5259     uint8 LoopBreak;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5260     Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5261     LoopBreak = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5262     #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5263  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5264     /* Calculate to which kernel the Controller belongs to */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5265     KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5266     /* Extract corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5267     ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5268     /* Calculate Rx MO start */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5269     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5270       PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5271     RxObjectStart = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5272                                     [ControllerId].ControllerMOMap[CAN_ZERO];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5273     /* Calculate Rx MO Count */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5274     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5275      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5276     RxObjectcount = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5277                                     [ControllerId].ControllerMOMap[CAN_ONE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5278     #if(CAN_FD_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5279     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5280      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5281     if(NULL_PTR !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5282     Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5283     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5284       RxObjectcount = (RxObjectcount/CAN_THREE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5285       /*Set the MO index increment value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5286       MOIndexIncrement = CAN_MOSize_FD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5287     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5288     else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5289     #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5290     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5291       /*Set the MO index increment value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5292       MOIndexIncrement = CAN_MOSize_STD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5293     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5294  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5295     for(LoopIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5296     ((LoopIndex < RxObjectcount)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5297     #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5298      && (LoopBreak == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5299     #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5300     );LoopIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5301     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5302        /* Calculate Rx Hardware object id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5303        HwObjectId = (uint16)((uint16)RxObjectStart + MOIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5304        if ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5305                 (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U))& CAN_MOSTAT_RXPND_MASK)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5306       {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5307         /* Extract the required infomation from the message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5308         #if (CAN_DEV_ERROR_DETECT == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5309         Can_lRxIsrExtractDataRuntime(HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5310           HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5311         #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5312         Status = Can_lRxIsrExtractDataRuntime(HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5313             HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5314         if(E_NOT_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5315         {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5316           LoopBreak = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5317         }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5318         #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5319       }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5320  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5321       /* Increment MO Index */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5322       MOIndex = MOIndex + MOIndexIncrement;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5323     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5324  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5325  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5326  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5327  /* #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5328  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5329  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5330  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5331  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR766_PR768_1,DS_NAS_CAN_PR97,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5332  DS_AS403_CAN395_1,DS_AS403_CAN423_1,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5333  DS_AS_CAN060_CAN299_CAN300_1,DS_AS_CAN012_1,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5334  DS_AS_CAN443_CAN444_CAN396_1,DS_AS403_CAN279]                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5335  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5336  ** Syntax           :                                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5337  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5338  **      #if (CAN_DEV_ERROR_DETECT == STD_ON)                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5339  **      IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractData                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5340  **                                     (                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5341  **                                       uint8 HwControllerId,                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5342  **                                       uint16 HwObjectId,                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5343  **                                       uint8 MsgIndex,                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5344  **                                       uint8 PndBitPosition                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5345  **                                     )                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5346  **      #else                                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5347  **      IFX_LOCAL_INLINE void Can_lRxIsrExtractData                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5348  **                           (                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5349  **                             uint8 HwControllerId,                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5350  **                             uint16 HwObjectId,                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5351  **                             uint8 MsgIndex,                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5352  **                             uint8 PndBitPosition                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5353  **                           )                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5354  **      #endif                                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5355  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5356  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5357  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5358  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5359  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5360  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5361  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5362  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5363  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5364  ** Parameters (in)  : HwObjectId - Message Object Id                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5365  **                    MsgIndex - MSPND Register Index                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5366  **                    PndBitPosition - Bit Position within MSPND Register     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5367  **                    HwControllerId                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5368  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5369  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5370  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5371  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5372  ** Description      : This function extracts data from the message object     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5373  **                    and notifies upper layer                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5374  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5375  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5376  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5377  IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractData(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5378                                                    uint16 HwObjectId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5379                                                    uint8 MsgIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5380                                                    uint8 PndBitPosition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5381  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5382  IFX_LOCAL_INLINE void Can_lRxIsrExtractData(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5383                                          uint16 HwObjectId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5384                                          uint8 MsgIndex,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5385                                          uint8 PndBitPosition)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5386  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5387  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5388    volatile uint32 *MoData0_3;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5389    volatile uint32 *MoData4_7;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5390  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5391    volatile uint32 *MoData8_35;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5392    volatile uint32 *MoData36_63;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5393    uint8 locMoDataIndex0;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5394    uint8 locMoDataIndex1;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5395    const uint8 CAN_MAPPING_DLC_FD_LENGTH[]= {12U,16U,20U,24U,32U,48U,64U};
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5396  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5397  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5398    uint32 TempMoctr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5399    Can_IdType MessageId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5400    uint8 MoDataIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5401    uint8 MoDataIndex1;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5402    uint8 MessageDlc;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5403    uint8 MessageLength;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5404    uint8 LoopBreak2; /* To avoid infinte loop */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5405    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5406    uint8 Hrh = 0U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5407  #if (CAN_LPDU_RX_CALLOUT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5408    boolean RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5409  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5410  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5411    uint8 LoopBreak; /* To exit the loop in case of development error */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5412    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5413  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5414    Status = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5415    MessageDlc = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5416    MessageId = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5417    LoopBreak = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5418  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5419    LoopBreak2 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5420  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5421    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5422    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5423  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5424  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5425    Hrh = Can_lCalculateHrhId(KerIdx,HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5426  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5427    do
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5428    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5429      #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5430      /* check for message object over-writing */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5431  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5432      if ((CAN_KER[KerIdx]->MO[HwObjectId].STAT.U)& CAN_MOSTAT_MSGLST_CLR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5433      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5434        /* Clear MSGLST, NEWDAT and RXPND */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5435  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5436        CAN_KER[KerIdx]->MO[HwObjectId].CTR.U = (CAN_MOSTAT_MSGLST_CLR |
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5437          CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5438  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5439        /* Clear MSPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5440        CAN_KER[KerIdx]->MSPND[MsgIndex].U =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5441          ~((unsigned_int)CAN_ONE << PndBitPosition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5442  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5443        /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5444        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5445          CAN_SID_RECEIVEISR, CAN_E_DATALOST);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5446        Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5447  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5448        LoopBreak = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5449      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5450      else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5451  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5452      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5453        /* Clear NEWDAT and RXPND */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5454        CAN_KER[KerIdx]->MO[HwObjectId].CTR.U =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5455          (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5456  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5457  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5458        /* Check if extended id is received */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5459        if ((((CAN_KER[KerIdx]->MO[HwObjectId].AR.U) & CAN_MOAR_IDE ) >> \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5460                                      CAN_MOAR_IDE_BITPOS) == CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5461        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5462          /* extract message Id and set MSBit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5463          MessageId = (Can_IdType)(((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5464                      MO[HwObjectId].AR.U) & CAN_MOAR_ID) | CAN_EXTENDED_MSB_SET);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5465          #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5466         if(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U & CAN_FCR_FDF_MASK)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5467         {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5468             MessageId |= CAN_MSGID_MASK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5469         }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5470        #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5471       }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5472        else /* Standard frame */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5473  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5474        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5475          /* extract message id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5476        MessageId =(Can_IdType)(uint32)((\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5477          (CAN_KER[KerIdx]->MO[HwObjectId].AR.U) & CAN_MOAR_ID) >>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5478              CAN_MOAR_ID_STD_SHIFT) ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5479        #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5480         if(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U & CAN_FCR_FDF_MASK)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5481         {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5482             MessageId |= CAN_MSGID_MASK1;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5483         }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5484        #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5485       }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5486        /* Extract DLC */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5487        MessageDlc = (uint8) (((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5488                  MO[HwObjectId].FCR.U) & CAN_MOFCR_DLC) >> CAN_MOFCR_DLC_BITPOS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5489       MessageLength = MessageDlc;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5490        /* Message length varies from DLC when FD is enabled and
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5491        DLC is greater than 8.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5492        DLC of 9,10,11,12,13,14,15 corresponds to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5493        message length 12,16,20,24,32,48,64 respectively */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5494        if(MessageDlc > CAN_EIGHT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5495        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5496  #if (CAN_FD_ENABLE== STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5497          MessageLength = CAN_EIGHT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5498          MessageDlc = CAN_EIGHT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5499  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5500          MessageLength = CAN_MAPPING_DLC_FD_LENGTH[MessageDlc-CAN_NINE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5501  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5502        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5503  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5504  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5505        /* Extract received data bytes */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5506        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5507        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5508        MoData0_3 =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5509          (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAL.U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5510        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5511        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5512        MoData4_7 =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5513          (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAH.U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5514  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5515  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5516        /* For a 64 byte message, data bytes 0-7 are stored in the message object,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5517        similar to a standard message object, data bytes 8-35 are stored
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5518        in the message object to which MOFGPR.BOT refers to and
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5519        data bytes 36-63 are stored in the message object to which MOFGPR.TOP
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5520        refers to Data byte 0 refers to the first byte transferred within a
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5521        CAN frame. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5522        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5523        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5524        MoData8_35 = (volatile uint32 *)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5525          (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_ONE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5526        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5527        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5528        MoData36_63 = (volatile uint32 *)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5529          (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_TWO];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5530  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5531        locMoDataIndex0 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5532        locMoDataIndex1 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5533  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5534  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5535  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5536        MoDataIndex1 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5537        for(MoDataIndex=CAN_ZERO; MoDataIndex < MessageLength; MoDataIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5538        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5539          if (CAN_FOUR > MoDataIndex)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5540          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5541            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5542      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5543            Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5544                (uint8)(((MoData0_3[0])\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5545                              & CAN_MO_SETMASK(MoDataIndex))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5546                                CAN_MO_BIT_SHIFT_COUNT(MoDataIndex));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5547          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5548          if ((CAN_FOUR <= MoDataIndex)&& (CAN_EIGHT > MoDataIndex))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5549          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5550            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5551      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5552            Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5553                (uint8)(((MoData4_7[0])\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5554                              & CAN_MO_SETMASK(MoDataIndex1))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5555                                CAN_MO_BIT_SHIFT_COUNT(MoDataIndex1));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5556            MoDataIndex1++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5557          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5558  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5559          if ((CAN_EIGHT <= MoDataIndex)&& (CAN_THIRTY_SIX > MoDataIndex))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5560          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5561            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5562      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5563            Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5564                (uint8)(((MoData8_35[locMoDataIndex0])\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5565                              & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5566                                CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5567  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5568            locMoDataIndex0 = Can_lDataIndexMapping(MoDataIndex,locMoDataIndex0);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5569          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5570          if (CAN_THIRTY_SIX <= MoDataIndex)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5571          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5572            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5573      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5574            Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5575                     (uint8)(((MoData36_63[locMoDataIndex1])\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5576                          & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5577                          CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5578           locMoDataIndex1 = Can_lDataIndexMapping(MoDataIndex,locMoDataIndex1);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5579          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5580  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5581        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5582  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5583        LoopBreak2++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5584  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5585        /* Clear MSPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5586        CAN_KER[KerIdx]->MSPND[MsgIndex].U =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5587          ~((unsigned_int)CAN_ONE << PndBitPosition);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5588      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5589  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5590      /* If NEWDAT or RXUPD bit is set --> Message object got/getting updated */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5591      /* In such a case the extracted information will not be consistent */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5592      /* Hence, information needs to be re-extracted from the message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5593  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5594  #ifdef IFX_CAN_DEBUG03
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5595      TempMoctr =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5596        CAN_KER[KerIdx]->MO[HwObjectId].STAT.U | TestCan_DebugMask03;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5597  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5598      TempMoctr = CAN_KER[KerIdx]->MO[HwObjectId].STAT.U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5599  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5600    }while(((((TempMoctr & CAN_MOCTR_NEWDAT_CLR) != CAN_ZERO) ||
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5601      ((TempMoctr & CAN_MOCTR_RXUPD_CLR)  != CAN_ZERO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5602      &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5603      (LoopBreak2 <= CAN_TWO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5604  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5605      && (LoopBreak == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5606  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5607      );
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5608  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5609  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5610    /* In all the cases of (LoopBreak2 > CAN_TWO), development error is reported,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5611    as MSGLST bit will be set */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5612    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5613  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5614    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5615      /* The condition (LoopBreak2 > CAN_TWO) indicates data inconsistency, i.e.,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5616      the message object is getting updated while the data is being copied to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5617      the user buffer. Since the data in the user buffer is inconsistent in
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5618      this case, CanIf_RxIndication and Receive L-PDU callout will not be
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5619      called; The function is exited to avoid blocking.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5620      According to AUTOSAR: "The system designer shall assure that
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5621      the runtime for message reception (interrupt driven or polling)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5622      correlates with the fastest possible reception in the system."
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5623      This also implies the need for having correct interrupt priorities to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5624      ensure that the interrupt latency is within tolerable limits */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5625      if(LoopBreak2 <= CAN_TWO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5626      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5627  #if (CAN_LPDU_RX_CALLOUT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5628        /* Call receive L-PDU callout function if configured */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5629        RetVal = Can_kConfigPtr->Can_LPduRxCalloutFuncPtr(Hrh,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5630          MessageId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5631          MessageDlc,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5632          &Can_RxMessageData[HwControllerId][CAN_ZERO]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5633  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5634        /* Notification function CanIf_RxIndication should be called only if the
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5635        callout function returns true */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5636        if(TRUE == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5637  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5638        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5639          /* Call the notification function */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5640  //        CanIf_RxIndication((Can_HwHandleType)(Hrh),
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5641  //          MessageId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5642  //          MessageDlc,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5643  //          &Can_RxMessageData[HwControllerId][CAN_ZERO]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5644        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5645      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5646    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5647  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5648    return (Status);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5649  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5650  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5651  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5652  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5653   /* #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U)) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5654  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5655  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5656  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5657  ** TRACEABILITY     : [cover parentID= DS_AS403_CAN395_2,DS_AS403_CAN423_2,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5658  DS_NAS_CAN_PR766_PR768_2,DS_AS_CAN443_CAN444_CAN396_2,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5659  DS_AS_CAN060_CAN299_CAN300_2,DS_AS_CAN012_2]   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5660  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5661  ** Syntax           :                                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5662  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5663  **      #if (CAN_DEV_ERROR_DETECT == STD_ON)                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5664  **      IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractDataRuntime          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5665  **                                     (                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5666  **                                       uint8 HwControllerId,                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5667  **                                       uint16 HwObjectId
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5668  **                                     )                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5669  **      #else                                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5670  **      IFX_LOCAL_INLINE void Can_lRxIsrExtractDataRuntime                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5671  **                           (                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5672  **                             uint8 HwControllerId,                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5673  **                             uint16 HwObjectId
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5674  **                           )                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5675  **      #endif                                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5676  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5677  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5678  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5679  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5680  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5681  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5682  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5683  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5684  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5685  ** Parameters (in)  : HwObjectId - Message Object Id                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5686  **                    HwControllerId                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5687  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5688  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5689  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5690  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5691  ** Description      : This function extracts data from the message object     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5692  **                    and notifies upper layer                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5693  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5694  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5695  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5696  IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractDataRuntime
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5697                                                   (uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5698                                                    uint16 HwObjectId
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5699                                                    )
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5700  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5701  IFX_LOCAL_INLINE void Can_lRxIsrExtractDataRuntime(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5702                                          uint16 HwObjectId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5703  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5704  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5705    volatile uint32 *MoData0_3;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5706    volatile uint32 *MoData4_7;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5707  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5708    volatile uint32 *MoData8_35;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5709    volatile uint32 *MoData36_63;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5710    uint8 locMoDataIndex0;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5711    uint8 locMoDataIndex1;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5712    const uint8 CAN_MAPPING_DLC_FD_LENGTH[]= {12U,16U,20U,24U,32U,48U,64U};
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5713  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5714  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5715    uint32 TempMoctr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5716    Can_IdType MessageId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5717    uint8 MoDataIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5718    uint8 MoDataIndex1;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5719    uint8 MessageDlc;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5720    uint8 MessageLength;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5721    uint8 LoopBreak2; /* To avoid infinte loop */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5722    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5723    uint8 Hrh = 0U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5724  #if (CAN_LPDU_RX_CALLOUT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5725    boolean RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5726  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5727  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5728    uint8 LoopBreak; /* To exit the loop in case of development error */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5729    Std_ReturnType Status;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5730  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5731    Status = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5732    MessageDlc = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5733    MessageId = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5734    LoopBreak = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5735  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5736    LoopBreak2 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5737  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5738    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5739    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5740  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5741  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5742    Hrh = Can_lCalculateHrhId(KerIdx,HwObjectId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5743    do
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5744    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5745  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5746      /* check for message object over-writing */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5747  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5748        if(CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5749                                   MO[HwObjectId].STAT.U)& CAN_MOSTAT_MSGLST_CLR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5750        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5751          /* Clear MSGLST, NEWDAT and RXPND */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5752           CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5753                                  MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5754                                 (CAN_MOSTAT_MSGLST_CLR |CAN_MOCTR_NEWDAT_CLR |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5755                                  CAN_MOCTR_RXPND_CLR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5756  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5757          /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5758          Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5759          CAN_SID_RECEIVEISR, CAN_E_DATALOST);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5760          Status = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5761  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5762          LoopBreak = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5763        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5764        else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5765  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5766        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5767         /* Clear NEWDAT and RXPND */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5768         CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5769                                  MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5770                                  (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5771  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5772  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5773          /* Check if extended id is received */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5774          if (((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5775                                  MO[HwObjectId].AR.U)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5776                            & CAN_MOAR_IDE ) >> CAN_MOAR_IDE_BITPOS) == CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5777          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5778            /* extract message Id and set MSBit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5779            MessageId =(Can_IdType)((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5780                                                     (CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5781                      MO[HwObjectId].AR.U) & CAN_MOAR_ID) | CAN_EXTENDED_MSB_SET);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5782         #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5783         if(CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5784                       (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U) & CAN_FCR_FDF_MASK)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5785         {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5786             MessageId |= CAN_MSGID_MASK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5787         }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5788        #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5789          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5790          else /* Standard frame */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5791  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5792          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5793             /* extract message id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5794          MessageId =(Can_IdType)(uint32)((\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5795          CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5796                                          &CAN_MOAR_ID) >>CAN_MOAR_ID_STD_SHIFT);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5797          #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5798         if(CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5799                       (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U) & CAN_FCR_FDF_MASK)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5800         {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5801             MessageId |= CAN_MSGID_MASK1;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5802         }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5803        #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5804          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5805          /* Extract DLC */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5806          MessageDlc = (uint8)((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5807               ->MO[HwObjectId].FCR.U) & CAN_MOFCR_DLC) >> CAN_MOFCR_DLC_BITPOS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5808          MessageLength = MessageDlc;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5809          /* Message length varies from DLC when FD is enabled and
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5810          DLC is greater than 8.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5811          DLC of 9,10,11,12,13,14,15 corresponds to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5812          message length 12,16,20,24,32,48,64 respectively */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5813          if(MessageDlc > CAN_EIGHT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5814          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5815  #if (CAN_FD_ENABLE== STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5816            MessageLength = CAN_EIGHT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5817            MessageDlc = CAN_EIGHT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5818  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5819            MessageLength = CAN_MAPPING_DLC_FD_LENGTH[MessageDlc-CAN_NINE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5820  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5821           }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5822  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5823          /* Extract received data bytes */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5824          /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5825          uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5826          MoData0_3 =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5827          (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAL.U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5828          /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5829          uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5830          MoData4_7 =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5831            (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAH.U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5832  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5833  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5834        /* For a 64 byte message, data bytes 0-7 are stored in the message object,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5835        similar to a standard message object, data bytes 8-35 are stored
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5836        in the message object to which MOFGPR.BOT refers to and
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5837        data bytes 36-63 are stored in the message object to which MOFGPR.TOP
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5838        refers to Data byte 0 refers to the first byte transferred within a
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5839        CAN frame. */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5840        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5841        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5842          MoData8_35 = (volatile uint32 *)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5843            (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_ONE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5844          /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5845          uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5846          MoData36_63 = (volatile uint32 *)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5847            (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_TWO];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5848  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5849          locMoDataIndex0 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5850          locMoDataIndex1 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5851  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5852  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5853         /* Initialize MoDataIndex1 */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5854         MoDataIndex1 = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5855  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5856        for(MoDataIndex=CAN_ZERO; MoDataIndex < MessageLength; MoDataIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5857        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5858          if (CAN_FOUR > MoDataIndex)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5859          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5860            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5861      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5862            Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5863             (uint8)(((CAN_SFR_RUNTIME_USER_MODE_READ32(MoData0_3[0]))\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5864                     & CAN_MO_SETMASK(MoDataIndex))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5865                        CAN_MO_BIT_SHIFT_COUNT(MoDataIndex));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5866          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5867          if ((CAN_FOUR <= MoDataIndex)&& (CAN_EIGHT > MoDataIndex))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5868          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5869            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5870      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5871            Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5872             (uint8)(((CAN_SFR_RUNTIME_USER_MODE_READ32(MoData4_7[0]))\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5873                     & CAN_MO_SETMASK(MoDataIndex1))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5874                        CAN_MO_BIT_SHIFT_COUNT(MoDataIndex1));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5875            MoDataIndex1++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5876          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5877  #if (CAN_FD_ENABLE== STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5878          if ((CAN_EIGHT <= MoDataIndex)&& (CAN_THIRTY_SIX > MoDataIndex))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5879          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5880            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5881      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5882            Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5883           (uint8)(((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5884                          (MoData8_35[locMoDataIndex0]))\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5885                        & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5886                        CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5887  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5888           locMoDataIndex0 = Can_lDataIndexMapping(MoDataIndex,locMoDataIndex0);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5889  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5890          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5891          if (CAN_THIRTY_SIX <= MoDataIndex)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5892          {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5893            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5894      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5895            Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5896                   (uint8)(((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5897                         (MoData36_63[locMoDataIndex1]))\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5898                      & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5899                      CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5900  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5901           locMoDataIndex1 = Can_lDataIndexMapping(MoDataIndex,locMoDataIndex1);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5902          }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5903  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5904        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5905  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5906        LoopBreak2++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5907  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5908      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5909      /* If NEWDAT or RXUPD bit is set --> Message object got/getting updated */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5910      /* In such a case the extracted information will not be consistent */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5911      /* Hence, information needs to be re-extracted from the message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5912  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5913  #ifdef IFX_CAN_DEBUG03
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5914      TempMoctr =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5915       (CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].STAT.U)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5916                                                          | TestCan_DebugMask03);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5917  #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5918      TempMoctr = CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5919                                         (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5920  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5921  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5922    }while(((((TempMoctr & CAN_MOCTR_NEWDAT_CLR) != CAN_ZERO) ||
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5923      ((TempMoctr & CAN_MOCTR_RXUPD_CLR)  != CAN_ZERO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5924      &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5925      (LoopBreak2 <= CAN_TWO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5926  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5927      && (LoopBreak == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5928  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5929      );
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5930  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5931  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5932    /* In all the cases of (LoopBreak2 > CAN_TWO), development error is reported,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5933    as MSGLST bit will be set */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5934    if(E_OK == Status)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5935  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5936    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5937      /* The condition (LoopBreak2 > CAN_TWO) indicates data inconsistency, i.e.,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5938      the message object is getting updated while the data is being copied to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5939      the user buffer. Since the data in the user buffer is inconsistent in
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5940      this case, CanIf_RxIndication and Receive L-PDU callout will not be
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5941      called; The function is exited to avoid blocking.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5942      According to AUTOSAR: "The system designer shall assure that
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5943      the runtime for message reception (interrupt driven or polling)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5944      correlates with the fastest possible reception in the system."
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5945      This also implies the need for having correct interrupt priorities to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5946      ensure that the interrupt latency is within tolerable limits */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5947      if(LoopBreak2 <= CAN_TWO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5948      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5949  #if (CAN_LPDU_RX_CALLOUT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5950        /* Call receive L-PDU callout function if configured */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5951        RetVal = Can_kConfigPtr->Can_LPduRxCalloutFuncPtr(Hrh,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5952          MessageId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5953          MessageDlc,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5954          &Can_RxMessageData[HwControllerId][CAN_ZERO]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5955  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5956        /* Notification function CanIf_RxIndication should be called only if the
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5957        callout function returns true */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5958        if(TRUE == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5959  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5960        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5961          /* Call the notification function */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5962  //        CanIf_RxIndication((Can_HwHandleType)(Hrh),
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5963  //          MessageId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5964  //          MessageDlc,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5965  //          &Can_RxMessageData[HwControllerId][CAN_ZERO]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5966        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5967      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5968    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5969  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5970  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5971    return (Status);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5972  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5973  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5974  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5975  #endif /*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5976  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5977  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5978  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5979  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5980  ** Syntax           :                                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5981  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5982  **      IFX_LOCAL_INLINE uint8 Can_lDataIndexMapping                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5983  **                                     (                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5984  **                                       uint8 MoDataIndex,                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5985  **                                       uint8 locMoDataIndex,                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5986  **                                     )                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5987  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5988  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5989  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5990  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5991  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5992  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5993  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5994  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5995  ** Parameters (in)  : MoDataIndex                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5996  **                    locMoDataIndex                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5997  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5998  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5999  ** Return value     : locMoDataIndex                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6000  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6001  ** Description      : API for checking the index                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6002  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6003  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6004  IFX_LOCAL_INLINE uint8 Can_lDataIndexMapping(uint8 MoDataIndex,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6005                                                            uint8 locMoDataIndex)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6006  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6007    if((MoDataIndex % CAN_FOUR)==3U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6008     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6009      locMoDataIndex++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6010     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6011    return(locMoDataIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6012  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6013  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6014  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6015  ** Syntax           :                                                         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6016  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6017  **      IFX_LOCAL_INLINE uint8 Can_lCalculateHrhId                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6018  **                                     (                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6019  **                                       uint8 KerIdx,                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6020  **                                       uint16 HwObjectId                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6021  **                                     )                                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6022  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6023  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6024  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6025  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6026  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6027  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6028  ** Reentrancy       : non Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6029  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6030  ** Parameters (in)  : KerIdx                                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6031  **                    HwObjectId                                              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6032  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6033  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6034  ** Return value     : Hrh                                                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6035  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6036  ** Description      : This function used for calculating hrhid                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6037  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6038  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6039  IFX_LOCAL_INLINE uint8 Can_lCalculateHrhId(uint8 KerIdx,uint16 HwObjectId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6040  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6041    uint8 Hrh = 0U;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6042    #if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6043    uint8 HrhOffset;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6044    uint8 RxObjOffset;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6045    #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6046    #if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6047    #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6048      RxObjOffset = Can_kConfigPtr->CanRxHwObjCntKer[KerIdx];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6049    #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6050      RxObjOffset = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6051    #endif /*#if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6052    #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6053    UNUSED_PARAMETER(KerIdx)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6054    #endif /*#if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6055  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6056    /* Calculate the starting value of HW Object Id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6057    #if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6058    HrhOffset = (uint8)(HwObjectId - RxObjOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6059    Hrh = Can_lGetHrhIndex(KerIdx,HrhOffset);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6060    #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6061    UNUSED_PARAMETER(HwObjectId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6062    #endif /*#if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6063    return(Hrh);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6064  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6065  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6066  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6067  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6068  ** TRACEABILITY: [cover parentID=DS_AS_CAN364_CAN269_CAN270_CAN271]           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6069  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6070  ** Syntax           : static void Can_lWakeupHandler(uint8 HwControllerId)    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6071  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6072  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6073  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6074  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6075  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6076  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6077  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6078  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6079  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6080  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6081  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6082  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6083  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6084  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6085  ** Description      : This function is the core part of the interrupt         **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6086  **                    service routine for Receive Interrupt used for detection**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6087  **                    and reporting of wakeup event                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6088  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6089  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6090  static void Can_lWakeupHandler(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6091  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6092    volatile uint32 MsiMaskCopy;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6093    EcuM_WakeupSourceType WakeupSourceId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6094    uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6095    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6096    uint8 PndBitPosition;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6097    uint8 MsgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6098    uint8 LoopBreak;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6099    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6100    uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6101  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6102    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6103    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6104    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6105  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6106    /* Save current MSIMASK - which needs to be restored back at the end */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6107    /* to avoid re-entrancy issue */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6108    MsiMaskCopy =CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_MSIMASK.U) ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6109    LoopBreak = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6110  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6111    /* Extract the coreesponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6112    ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6113  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6114    /* Loop through all MSPND registers configured for receive message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6115    for (MsgIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6116      ((MsgIndex <= Can_kConfigPtr->CanRxLastMspndIdx) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6117      (LoopBreak == CAN_ZERO));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6118    MsgIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6119    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6120        /* Load the MSIMASK corresponding to the controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6121        (CAN_KER[KerIdx]->MSIMASK.U = Can_RxMsiMask[HwControllerId][MsgIndex]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6122  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6123        /* Check for any pending notification */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6124        if ((((CAN_KER[KerIdx]->MSID[MsgIndex].U))\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6125                                & CAN_MSID_INDEX) !=CAN_MSID_NO_MSG_PND_VALUE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6126        {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6127          /* Get the pending bit position */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6128          PndBitPosition = (uint8)(((CAN_KER[KerIdx]->MSID[MsgIndex].U))\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6129                                & CAN_MSID_INDEX);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6130  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6131          /* Calculate the message object id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6132          HwObjectId = ((uint16)PndBitPosition + (uint16)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6133            ((uint16)(MsgIndex) << CAN_MOIPR_MPN_MSPND_SHIFT));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6134  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6135          /* Clear NEWDAT and RXPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6136          (CAN_KER[KerIdx]->MO[HwObjectId].CTR.U =\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6137                                  CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6138  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6139          /* Clear MSPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6140          (CAN_KER[KerIdx]->MSPND[MsgIndex].U =~((unsigned_int)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6141                                        CAN_ONE << PndBitPosition));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6142  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6143          /* Extract corresponding wakeup source id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6144          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6145            PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6146          WakeupSourceId = (EcuM_WakeupSourceType)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6147            Can_kConfigPtr->CanWakeupSourceIdPtr[ControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6148  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6149          /* Disable the CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6150          CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U = ((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6151                                     N[HwCtrlIDKer].CR.U &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6152                                     CAN_NCR_INIT_CLEARMASK) | CAN_NODE_DISABLE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6153  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6154          /* Set CAN controller mode to STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6155          Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6156  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6157          /* Set CAN controller wakeup status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6158          Can_17_MCanP_ControllerWakeupStatus[ControllerId] = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6159  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6160          /* Call EcuM function to check for wakeup event */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6161          EcuM_CheckWakeup(WakeupSourceId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6162  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6163          /* Exit the loop to avoid multiple wakeup notifications for the same
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6164          CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6165          LoopBreak = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6166        }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6167    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6168    /* Restore the MSIMASK value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6169  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6170      CAN_KER[KerIdx]->MSIMASK.U = MsiMaskCopy;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6171  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6172  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6173  /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6174  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6175  /*#if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6176  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6177  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6178  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6179  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6180  ** TRACEABILITY: [cover parentID=]                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6181  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6182  ** Syntax           : static void Can_lWakeupHandlerRuntime\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6183                                                      (uint8 HwControllerId)    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6184  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6185  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6186  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6187  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6188  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6189  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6190  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6191  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6192  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6193  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6194  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6195  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6196  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6197  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6198  ** Description      : - This function is also called by the polling function  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6199  **                    Can_17_MCanP_MainFunction_Wakeup for controllers        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6200  **                    configured with CanWakeupProcessing as POLLING          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6201  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6202  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6203  static void Can_lWakeupHandlerRuntime(uint8 HwControllerId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6204  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6205    uint16 HwObjectId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6206   uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6207   uint8 RxObjectStart = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6208   uint8 RxObjectcount = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6209   uint8 ControllerId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6210   uint8 LoopIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6211   uint8 LoopBreak;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6212   uint8 MOIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6213   uint8 HwCtrlIDKer;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6214   uint8 MOIndexIncrement;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6215   EcuM_WakeupSourceType WakeupSourceId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6216  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6217     /* Calculate to which kernel the Controller belongs to */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6218     KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6219     HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6220     /* Extract corresponding CanControllerId */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6221     ControllerId = Can_NodeIdMap[HwControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6222     /* Calculate Rx MO start */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6223     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6224         PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6225     RxObjectStart = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6226                                     [ControllerId].ControllerMOMap[CAN_ZERO];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6227     /* Calculate Rx MO Count */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6228     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6229         PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6230     RxObjectcount = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6231                                     [ControllerId].ControllerMOMap[CAN_ONE];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6232  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6233     #if(CAN_FD_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6234     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6235      PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6236     if(NULL_PTR !=
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6237     Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6238     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6239       RxObjectcount = (RxObjectcount/CAN_THREE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6240       /*Set the MO index increment value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6241       MOIndexIncrement = CAN_MOSize_FD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6242     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6243     else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6244     #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6245     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6246       /*Set the MO index increment value */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6247       MOIndexIncrement = CAN_MOSize_STD;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6248     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6249  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6250     /* Initialize loop break */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6251     LoopBreak = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6252  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6253     for(LoopIndex = CAN_ZERO;((LoopIndex < RxObjectcount)&&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6254      (LoopBreak == CAN_ZERO));LoopIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6255     {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6256       HwObjectId = (uint16)((uint16)RxObjectStart + MOIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6257       if ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6258                 (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U))& CAN_MOSTAT_RXPND_MASK)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6259       {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6260          /* Clear NEWDAT and RXPND bit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6261          CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6262                                MO[HwObjectId].CTR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6263                               (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6264  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6265          /* Extract corresponding wakeup source id */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6266          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6267            PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6268          WakeupSourceId = (EcuM_WakeupSourceType)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6269            Can_kConfigPtr->CanWakeupSourceIdPtr[ControllerId];
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6270  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6271          /* Disable the CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6272          CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6273                                     N[HwCtrlIDKer].CR.U,\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6274                                     CAN_NCR_INIT_CLEARMASK, CAN_NODE_DISABLE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6275  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6276          /* Set CAN controller mode to STOPPED */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6277          Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6278  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6279          /* Set CAN controller wakeup status */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6280          Can_17_MCanP_ControllerWakeupStatus[ControllerId] = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6281  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6282         /* Call EcuM function to check for wakeup event */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6283         EcuM_CheckWakeup(WakeupSourceId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6284  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6285         /* Exit the loop to avoid multiple wakeup notifications for the same
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6286         CAN controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6287         LoopBreak = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6288       }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6289  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6290       /* Increment MO Index */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6291       MOIndex = MOIndex + MOIndexIncrement;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6292  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6293     }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6294  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6295  #endif /* #if(CAN_WAKEUP_CONFIGURED == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6296  #endif/* #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6297  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6298  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6299  ** Syntax           : IFX_LOCAL_INLINE void Can_lClearAndEnableInterrupt      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6300  **                                         (                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6301  **                                           uint8 ServiceRequestNumber       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6302  **                                         )                                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6303  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6304  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6305  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6306  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6307  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6308  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6309  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6310  ** Parameters (in)  : ServiceRequestNumber - Service Request Number           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6311  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6312  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6313  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6314  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6315  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6316  ** Description      : This function clears and enables interrupt              **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6317  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6318  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6319  IFX_LOCAL_INLINE void Can_lClearAndEnableInterrupt(uint8
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6320                                                 ServiceRequestNumber)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6321  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6322    /* It is not advisable to clear a pending service request flag SRR
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6323    (writing CLRR = 1) and enable the corresponding service request node
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6324    SRN (writing SRE = 1) simultaneously at the same write access to the
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6325    Service Request Control Register. If this should happen, an unintended
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6326    interrupt request may be generated.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6327    */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6328    /* Clear interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6329    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6330      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6331    CAN_SFR_INIT_MODIFY32(CAN_SRC[ServiceRequestNumber].U,\ 
	add	d11,d12
	ld.w	d0,.2.cnt
.L647:
	extr.u	d15,d11,#0,#8
.L362:
	mov.a	a15,d0
	addsc.a	a15,a15,d15,#2
	ld.w	d15,[a15]
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#25,#1
	st.w	[a15],d15
.L367:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6332                                                  CAN_SRC_CLEARMASK,CAN_SRC_CLRR)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6333     /* Enable interrupt */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6334    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6335      efficiently access the SFRs */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6336    CAN_SFR_INIT_MODIFY32(CAN_SRC[ServiceRequestNumber].U,\ 
	ld.w	d15,[a15]
.L654:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#10,#1
	st.w	[a15],d15

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2935    if (CAN_INTERRUPT ==      (inlined)
.L25:
	ld.a	a15,[a2]
.L837:
	addsc.a	a15,a15,d9,#2
.L838:
	ld.bu	d15,[a15]1
.L839:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2944    if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L26
.L371:
	ld.w	d15,.2.cnt
	mov.a	a15,d15
	addsc.a	a15,a15,d14,#2
	ld.w	d15,[a15]
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#25,#1
	st.w	[a15],d15
.L372:
	ld.w	d15,[a15]
.L655:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#10,#1
	st.w	[a15],d15

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2944    if (CAN_INTERRUPT ==      (inlined)
.L26:
	ld.a	a15,[a2]
.L840:
	addsc.a	a15,a15,d9,#2
.L841:
	ld.bu	d15,[a15]
.L842:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2953    if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L27
.L375:
	ld.w	d15,.2.cnt
	mov.a	a15,d15
	addsc.a	a15,a15,d13,#2
	ld.w	d15,[a15]
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#25,#1
	st.w	[a15],d15
.L376:
	ld.w	d15,[a15]
.L656:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#10,#1
	st.w	[a15],d15

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  2953    if (CAN_INTERRUPT ==      (inlined)
.L27:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3746      if(CAN_INVALID_HW_CONTROLLER_ID !=      (inlined)
.L24:
	lea	a15,Can_17_MCanP_ControllerMode
.L843:
	addsc.a	a15,a15,d9,#0
.L844:
	add	d9,#1
.L644:
	st.b	[a15],d8
.L845:
	extr.u	d9,d9,#0,#8
.L657:
	ld.a	a15,Can_kConfigPtr
.L846:
	ld.bu	d15,[a15]30
.L847:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3742      ControllerId<(Can_kConfigPtr->CanNumController);      (inlined)
	jlt.u	d9,d15,.L23
.L22:
	mov	d2,#0
	ld.a	a14,[a15]20
.L659:
	mov	d8,d2
	ld.w	d10,.3.cnt
.L660:
	mov	d9,#1
	ld.w	d11,.4.cnt
.L658:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3048      (HwObjIndex < Can_kConfigPtr->CanNumTxHwObj)&&(E_OK==RetVal);      (inlined)
	j	.L28

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3050      )      (inlined)
.L29:
	addsc.a	a15,a14,d8,#1
.L275:
	mov	d15,#255
.L276:
	ld.bu	d12,[a15]1
.L662:
	and	d14,d12,#3
.L663:
	sha	d13,d12,#-2
.L664:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3065      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)      (inlined)
	jeq	d15,d12,.L30
.L848:
	ld.bu	d5,[a15]
.L665:
	st.w	[a10]8,d5
.L667:
	mov	d4,d12
	call	Can_lAllocateHwObject
.L666:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3090          if(E_OK == RetVal)      (inlined)
	jne	d2,#0,.L31
.L397:
	lea	a15,CAN_KER
	addsc.a	a2,a15,d13,#2
	ld.w	d15,[a10]8
.L668:
	ld.a	a15,[a2]
.L849:
	sha	d3,d15,#5
	addsc.a	a5,a12,d12,#0
.L850:
	sh	d1,d15,#8
	addsc.a	a15,a15,d3,#0
.L398:
	sha	d15,d12,#5
.L399:
	ld.w	d0,[a15]4104
.L400:
	sh	d14,#4
.L401:
	insert	d0,d0,#0,#8,#8
.L669:
	or	d0,d1
	st.w	[a15]4104,d0
.L402:
	addsc.a	a15,a13,d15,#0
.L851:
	ld.w	d15,[a10]8
.L671:
	sha	d15,#-5
.L672:
	addsc.a	a15,a15,d15,#2
.L852:
	ld.w	d15,[a10]8
.L673:
	ld.w	d0,[a15]
.L670:
	and	d15,#31
.L674:
	sh	d15,d9,d15
.L853:
	or	d0,d15
	st.w	[a15],d0
.L406:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	ld.w	d15,[a15]4104
.L407:
	lea	a4,[a15]4096
.L408:
	insert	d15,d15,#0,#4,#4
.L675:
	or	d15,d14
	st.w	[a15]4104,d15
.L409:
	ld.a	a15,Can_kConfigPtr
.L854:
	ld.bu	d15,[a5]
.L676:
	ld.a	a15,[a15]8
.L855:
	addsc.a	a15,a15,d15,#2
.L856:
	ld.bu	d15,[a15]2
.L857:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3160            if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L32
.L413:
	ld.w	d15,[a4]
	and	d15,d10
	insert	d15,d15,#1,#17,#1

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3165              CAN_SFR_INIT_USER_MODE_MODIFY32\       (inlined)
	j	.L33

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3160            if (CAN_INTERRUPT ==      (inlined)
.L32:
	ld.w	d15,[a4]
.L677:
	and	d15,d10

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3169            else      (inlined)
.L33:
	st.w	[a4],d15
.L416:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	ld.w	d15,[a15]4120
	insert	d15,d15,#0,#30,#2
	insert	d15,d15,#1,#31,#1
	st.w	[a15]4120,d15
.L419:
	st.w	[a15]4124,d11

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3090          if(E_OK == RetVal)      (inlined)
.L31:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3065      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)      (inlined)
.L30:
	add	d8,#1
.L661:
	extr.u	d8,d8,#0,#16

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3048      (HwObjIndex < Can_kConfigPtr->CanNumTxHwObj)&&(E_OK==RetVal);      (inlined)
.L28:
	ld.a	a15,Can_kConfigPtr
.L858:
	ld.hu	d15,[a15]40
.L859:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3048      (HwObjIndex < Can_kConfigPtr->CanNumTxHwObj)&&(E_OK==RetVal);      (inlined)
	jge.u	d8,d15,.L34
.L860:
	jeq	d2,#0,.L29
.L34:
	mov	d15,d2
.L386:
	jne	d15,#0,.L35
.L382:
	mov	d15,#1
	st.b	Can_17_MCanP_DriverState,d15
.L35:
.L21:
.L14:
	ret
.L265:
	
__Can_17_MCanP_Init_function_end:
	.size	Can_17_MCanP_Init,__Can_17_MCanP_Init_function_end-Can_17_MCanP_Init
.L139:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_SetControllerMode
; Function Can_17_MCanP_SetControllerMode
.L90:
Can_17_MCanP_SetControllerMode:	.type	func
	ld.a	a15,Can_kConfigPtr
.L865:
	addsc.a	a2,a15,d4,#0
	ld.bu	d15,[a2]31
.L427:
	sha	d0,d15,#-2
.L681:
	and	d1,d15,#3
.L680:
	jeq	d5,#0,.L36
.L866:
	jeq	d5,#1,.L37
.L867:
	jeq	d5,#2,.L38
.L868:
	j	.L39

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  3987    case CAN_T_START :      (inlined)
.L36:
	ld.a	a15,[a15]4
.L869:
	addsc.a	a15,a15,d4,#2
.L870:
	ld.bu	d2,[a15]2
.L678:
	ld.bu	d15,[a15]3
.L683:
	fcall	.cocofun_12
.L871:
	mov	d0,#776
.L682:
	jlt	d15,#1,.L42
.L872:
	mov.a	a2,d15
.L684:
	add.a	a2,#-1

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4000        for(HohIndex = CAN_ZERO; HohIndex < NumTxMo; HohIndex++)      (inlined)
.L41:
	ld.a	a4,[a15]
	sha	d15,d2,#5
.L873:
	add	d2,#1
.L679:
	addsc.a	a4,a4,d15,#0
.L874:
	extr.u	d2,d2,#0,#8
.L685:
	st.w	[a4]4124,d0
	loop	a2,.L41
.L42:
	fcall	.cocofun_13
.L686:
	insert	d15,d15,#0,#0,#1
	st.w	[a15]512,d15
.L446:
	mov	d15,#2

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4037    break;      (inlined)
	j	.L43

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4038    case CAN_T_SLEEP :      (inlined)
.L38:
	mov	d15,#1

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4043    break;      (inlined)
	j	.L44

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4044    case CAN_T_STOP :      (inlined)
.L37:
	fcall	.cocofun_12
	fcall	.cocofun_13
.L687:
	or	d15,#1
	st.w	[a15]512,d15

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4053    default:  /* case CAN_T_WAKEUP */      (inlined)
.L39:
	mov	d15,#3

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4060  }      (inlined)
.L43:
.L44:
	lea	a15,Can_17_MCanP_ControllerMode
.L875:
	addsc.a	a15,a15,d4,#0
.L428:
	mov	d2,#0
.L437:
	st.b	[a15],d15
.L438:
	ret
.L422:
	
__Can_17_MCanP_SetControllerMode_function_end:
	.size	Can_17_MCanP_SetControllerMode,__Can_17_MCanP_SetControllerMode_function_end-Can_17_MCanP_SetControllerMode
.L144:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('.cocofun_13')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
; Function .cocofun_13
.L92:
.cocofun_13:	.type	func
; Function body .cocofun_13, coco_iter:0
	ld.a	a15,[a15]
	sha	d15,d1,#8
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]512
.L688:
	fret
.L244:
	; End of function
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('.cocofun_12')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
; Function .cocofun_12
.L94:
.cocofun_12:	.type	func
; Function body .cocofun_12, coco_iter:0
	lea	a15,CAN_KER
.L763:
	addsc.a	a15,a15,d0,#2
.L1082:
	fret
.L239:
	; End of function
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_DisableControllerInterrupts
; Function Can_17_MCanP_DisableControllerInterrupts
.L96:
Can_17_MCanP_DisableControllerInterrupts:	.type	func
	mov	d8,d4
	call	SchM_Enter_Can_17_MCanP_CanDisInt
.L453:
	lea	a15,Can_17_MCanP_InterruptDisableCount
.L880:
	addsc.a	a6,a15,d8,#0
	ld.bu	d3,[a6]
.L881:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4354    if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)      (inlined)
	jne	d3,#0,.L46
.L882:
	fcall	.cocofun_10
.L689:
	add	d15,d1
	ld.w	d1,.2.cnt
.L696:
	add	d0,d15
	lea	a5,Can_InterruptsEnabledStatus
.L883:
	mov.a	a15,d1
.L884:
	extr.u	d2,d2,#0,#8
	addsc.a	a5,a5,d8,#0
.L697:
	addsc.a	a2,a15,d15,#2
.L885:
	extr.u	d15,d0,#0,#8
.L698:
	ld.w	d1,[a2]
.L886:
	addsc.a	a4,a15,d15,#2
.L887:
	addsc.a	a15,a15,d2,#2
.L888:
	extr.u	d1,d1,#10,#1
	ld.w	d15,[a4]
.L699:
	extr.u	d15,d15,#10,#1
.L700:
	sh	d1,#2
.L702:
	sh	d15,#1
.L889:
	or	d1,d15
	ld.w	d15,[a15]
.L701:
	sh	d15,d15,#-10
.L890:
	and	d15,#1
.L891:
	or	d1,d15
	st.b	[a5],d1
.L469:
	ld.w	d15,.5.cnt
	ld.w	d0,[a15]
.L703:
	and	d0,d15
	st.w	[a15],d0
.L470:
	ld.w	d0,[a4]
.L704:
	and	d0,d15
	st.w	[a4],d0
.L473:
	ld.w	d0,[a2]
.L705:
	and	d0,d15
	st.w	[a2],d0

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4354    if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)      (inlined)
.L46:
	add	d3,#1
	st.b	[a6],d3
.L892:
	j	SchM_Exit_Can_17_MCanP_CanDisInt
.L450:
	
__Can_17_MCanP_DisableControllerInterrupts_function_end:
	.size	Can_17_MCanP_DisableControllerInterrupts,__Can_17_MCanP_DisableControllerInterrupts_function_end-Can_17_MCanP_DisableControllerInterrupts
.L149:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('.cocofun_10')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
; Function .cocofun_10
.L98:
.cocofun_10:	.type	func
; Function body .cocofun_10, coco_iter:0
	ld.a	a15,Can_kConfigPtr
.L1066:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]31
.L690:
	lea	a15,CAN_NUM_CONTROLLERS_IN_KERNEL
.L1067:
	sha	d0,d15,#-2
.L692:
	addsc.a	a15,a15,d0,#0
.L1068:
	sha	d1,d0,#4
.L1069:
	ld.bu	d0,[a15]
.L693:
	extr.u	d1,d1,#0,#8
.L694:
	sha	d2,d0,#1
.L1070:
	extr.u	d2,d2,#0,#8
.L695:
	and	d15,#3
.L691:
	add	d2,d15
.L1071:
	add	d2,d1
	fret
.L229:
	; End of function
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_EnableControllerInterrupts
; Function Can_17_MCanP_EnableControllerInterrupts
.L100:
Can_17_MCanP_EnableControllerInterrupts:	.type	func
	mov	d8,d4
	call	SchM_Enter_Can_17_MCanP_CanEnInt
.L480:
	lea	a15,Can_17_MCanP_InterruptDisableCount
.L897:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L898:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4456    if (Can_17_MCanP_InterruptDisableCount[Controller] > CAN_ZERO)      (inlined)
	jeq	d15,#0,.L47
.L899:
	add	d15,#-1
	st.b	[a15],d15
.L900:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4462      if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)      (inlined)
	jne	d15,#0,.L48
.L901:
	fcall	.cocofun_10
.L706:
	extr.u	d3,d2,#0,#8
	ld.w	d2,.2.cnt
.L708:
	add	d0,d15
	lea	a4,Can_InterruptsEnabledStatus
.L902:
	mov.a	a15,d2
.L903:
	addsc.a	a4,a4,d8,#0
.L904:
	add	d0,d1
.L905:
	add	d1,d15
	ld.bu	d15,[a4]
.L707:
	addsc.a	a2,a15,d1,#2
.L709:
	extr.u	d1,d15,#2,#1
.L494:
	ld.w	d2,[a2]
.L495:
	extr.u	d0,d0,#0,#8
.L496:
	insert	d2,d2,#0,#31,#1
.L497:
	sh	d1,d1,#10
.L498:
	or	d1,d2
	st.w	[a2],d1
.L499:
	addsc.a	a2,a15,d0,#2
.L906:
	extr.u	d0,d15,#1,#1
	addsc.a	a15,a15,d3,#2
.L503:
	ld.w	d1,[a2]
.L504:
	and	d15,#1
.L505:
	insert	d1,d1,#0,#31,#1
.L506:
	sh	d0,d0,#10
.L710:
	sh	d15,d15,#10
.L507:
	or	d0,d1
	st.w	[a2],d0
.L508:
	ld.w	d0,[a15]
.L711:
	insert	d0,d0,#0,#31,#1
.L712:
	or	d0,d15
	st.w	[a15],d0

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4462      if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)      (inlined)
.L48:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4456    if (Can_17_MCanP_InterruptDisableCount[Controller] > CAN_ZERO)      (inlined)
.L47:
	j	SchM_Exit_Can_17_MCanP_CanEnInt
.L477:
	
__Can_17_MCanP_EnableControllerInterrupts_function_end:
	.size	Can_17_MCanP_EnableControllerInterrupts,__Can_17_MCanP_EnableControllerInterrupts_function_end-Can_17_MCanP_EnableControllerInterrupts
.L154:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_Write')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_Write
; Function Can_17_MCanP_Write
.L102:
Can_17_MCanP_Write:	.type	func
	ld.a	a15,Can_kConfigPtr
.L518:
	mov	d10,#0
	sub.a	a10,#8
.L713:
	mov	d11,d10
	mov.aa	a12,a4
.L519:
	ld.a	a2,[a15]20
.L911:
	addsc.a	a15,a2,d4,#1
.L528:
	ld.bu	d15,[a15]1
.L529:
	ld.bu	d9,[a15]
.L530:
	sha	d8,d15,#-2
	call	SchM_Enter_Can_17_MCanP_CanWrMO
.L714:
	sha	d12,d9,#5
	lea	a15,CAN_KER
	addsc.a	a13,a15,d8,#2
	fcall	.cocofun_11
	lea	a15,[a15]4124
	ld.w	d15,[a15]
.L912:
	and	d15,#4
	st.b	[a10],d15
.L913:
	ld.bu	d0,[a10]
.L914:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4793    if (CanCtrStat== CAN_ZERO )      (inlined)
	jne	d0,#0,.L49
.L915:
	ld.w	d15,.6.cnt
	st.w	[a15],d15
.L916:
	call	SchM_Exit_Can_17_MCanP_CanWrMO
.L917:
	fcall	.cocofun_11
	lea	a15,[a15]4096
	ld.w	d15,[a15]28
.L918:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4807      if ((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].\       (inlined)
	jnz.t	d15:8,.L50
.L919:
	movh	d15,#32768
	st.w	[a15]24,d15
.L544:
	fcall	.cocofun_11
.L715:
	ld.w	d15,[a15]4120
	ld.w	d0,[a12]2
	insert	d15,d15,#0,#0,#29
	sh	d0,d0,#18
.L716:
	or	d15,d0
	st.w	[a15]4120,d15
.L545:
	ld.bu	d15,[a12]1
.L548:
	ld.w	d0,[a15]4096
	sh	d15,d15,#24
	ld.w	d1,.7.cnt
.L717:
	and	d0,d1
.L718:
	or	d0,d15
	st.w	[a15]4096,d0
.L549:
	fcall	.cocofun_11
.L553:
	mov	d5,#255
	lea	a2,[a15]4112
.L722:
	mov	d6,#-1
	lea	a15,[a15]4116
.L554:
	mov	d7,d5
	mov	d13,d6
.L563:
	mov	d4,#0

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4910        for(Index=CAN_ZERO; Index < PduInfo->length; Index++)      (inlined)
	j	.L51
.L52:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4912          if (CAN_FOUR > Index)      (inlined)
	jge.u	d4,#4,.L53
.L920:
	ld.a	a4,[a12]8
.L555:
	sh	d2,d4,#3
	ld.w	d1,[a2]
	sh	d3,d5,d2
.L556:
	addsc.a	a4,a4,d4,#0
.L557:
	xor	d3,d6
.L558:
	ld.bu	d0,[a4]
.L559:
	and	d1,d3
	sh	d0,d0,d2
.L725:
	or	d1,d0
	st.w	[a2],d1

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4912          if (CAN_FOUR > Index)      (inlined)
.L53:
	add	d15,d4,#-4
	extr.u	d15,d15,#0,#8
.L921:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4928          if ((CAN_FOUR <= Index)&& (CAN_EIGHT > Index))      (inlined)
	jge.u	d15,#4,.L54
.L922:
	ld.a	a4,[a12]8
.L564:
	and	d15,d11,#3
	ld.w	d0,[a15]
	sh	d15,#3
.L565:
	addsc.a	a4,a4,d4,#0
.L566:
	sh	d1,d7,d15
.L567:
	ld.bu	d2,[a4]
.L568:
	xor	d1,d13
	and	d0,d1
	sh	d2,d2,d15
.L726:
	or	d0,d2
	st.w	[a15],d0
.L569:
	add	d11,#1
.L721:
	extr.u	d11,d11,#0,#8

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4928          if ((CAN_FOUR <= Index)&& (CAN_EIGHT > Index))      (inlined)
.L54:
	add	d4,#1
.L724:
	extr.u	d4,d4,#0,#8

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4910        for(Index=CAN_ZERO; Index < PduInfo->length; Index++)      (inlined)
.L51:
	ld.bu	d15,[a12]1
.L923:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4910        for(Index=CAN_ZERO; Index < PduInfo->length; Index++)      (inlined)
	jlt.u	d4,d15,.L52
.L924:
	ld.a	a15,Can_kConfigPtr
.L723:
	mov	d4,d8
.L727:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]44
.L925:
	sub	d9,d15
.L720:
	extr.u	d5,d9,#0,#8
	call	Can_lGetHthIndex
.L719:
	fcall	.cocofun_11
.L728:
	ld.w	d15,.8.cnt
	st.w	[a15]4124,d15
.L926:
	mul	d15,d8,#7
	lea	a15,Can_SwObjectHandle
.L927:
	addsc.a	a15,a15,d15,#0
.L928:
	addsc.a	a15,a15,d2,#0
.L929:
	ld.bu	d15,[a12]
.L930:
	st.b	[a15],d15
.L931:
	fcall	.cocofun_11
	lea	a15,[a15]4096
.L932:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4982        HthIdx = (uint8)(HwObjectId-(Can_kConfigPtr->CanTxHwObjCntKer[KerIdx]));      (inlined)
	j	.L55

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4807      if ((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].\       (inlined)
.L50:
	mov	d10,#2

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4991      else      (inlined)
.L55:
	mov	d15,#4
	st.w	[a15]28,d15
.L933:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4999                                                            CAN_MOCTR_RXUPD_CLR);      (inlined)
	j	.L56

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  4793    if (CanCtrStat== CAN_ZERO )      (inlined)
.L49:
	call	SchM_Exit_Can_17_MCanP_CanWrMO
.L934:
	mov	d10,#2

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  5002    else      (inlined)
.L56:
	mov	d2,d10
	ret
.L512:
	
__Can_17_MCanP_Write_function_end:
	.size	Can_17_MCanP_Write,__Can_17_MCanP_Write_function_end-Can_17_MCanP_Write
.L159:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('.cocofun_11')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
; Function .cocofun_11
.L104:
.cocofun_11:	.type	func
; Function body .cocofun_11, coco_iter:0
	ld.a	a15,[a13]
.L1077:
	addsc.a	a15,a15,d12,#0
.L1076:
	fret
.L234:
	; End of function
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_Write
; Function Can_17_MCanP_MainFunction_Write
.L106:
Can_17_MCanP_MainFunction_Write:	.type	func
	ld.bu	d15,Can_17_MCanP_DriverState
.L939:
	jeq	d15,#0,.L58
.L940:
	mov	d8,#0
	mov.a	a12,#3
.L59:
	ld.a	a2,Can_kConfigPtr
.L941:
	ld.a	a15,[a2]8
.L942:
	addsc.a	a15,a15,d8,#2
.L943:
	ld.bu	d15,[a15]2
.L944:
	jne	d15,#2,.L60
.L945:
	addsc.a	a15,a2,d8,#0
	ld.bu	d4,[a15]31
	call	Can_17_MCanP_IsrTransmitRuntime
.L60:
	add	d8,#1
	loop	a12,.L59
.L58:
	ret
.L571:
	
__Can_17_MCanP_MainFunction_Write_function_end:
	.size	Can_17_MCanP_MainFunction_Write,__Can_17_MCanP_MainFunction_Write_function_end-Can_17_MCanP_MainFunction_Write
.L164:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_Read
; Function Can_17_MCanP_MainFunction_Read
.L108:
Can_17_MCanP_MainFunction_Read:	.type	func
	ret
.L573:
	
__Can_17_MCanP_MainFunction_Read_function_end:
	.size	Can_17_MCanP_MainFunction_Read,__Can_17_MCanP_MainFunction_Read_function_end-Can_17_MCanP_MainFunction_Read
.L169:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_BusOff
; Function Can_17_MCanP_MainFunction_BusOff
.L110:
Can_17_MCanP_MainFunction_BusOff:	.type	func
	ld.bu	d15,Can_17_MCanP_DriverState
.L954:
	jeq	d15,#0,.L61
.L955:
	mov	d15,#0
	mov.a	a12,#3
.L62:
	ld.a	a15,Can_kConfigPtr
.L956:
	ld.a	a2,[a15]8
.L957:
	addsc.a	a2,a2,d15,#2
.L958:
	ld.bu	d0,[a2]
.L959:
	jne	d0,#2,.L63
.L960:
	addsc.a	a15,a15,d15,#0
	ld.bu	d4,[a15]31
	call	Can_17_MCanP_IsrBusOffRuntime
.L63:
	add	d15,#1
	loop	a12,.L62
.L61:
	ret
.L574:
	
__Can_17_MCanP_MainFunction_BusOff_function_end:
	.size	Can_17_MCanP_MainFunction_BusOff,__Can_17_MCanP_MainFunction_BusOff_function_end-Can_17_MCanP_MainFunction_BusOff
.L174:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_Wakeup
; Function Can_17_MCanP_MainFunction_Wakeup
.L112:
Can_17_MCanP_MainFunction_Wakeup:	.type	func
	ret
.L576:
	
__Can_17_MCanP_MainFunction_Wakeup_function_end:
	.size	Can_17_MCanP_MainFunction_Wakeup,__Can_17_MCanP_MainFunction_Wakeup_function_end-Can_17_MCanP_MainFunction_Wakeup
.L179:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_Mode
; Function Can_17_MCanP_MainFunction_Mode
.L114:
Can_17_MCanP_MainFunction_Mode:	.type	func
	ret
.L577:
	
__Can_17_MCanP_MainFunction_Mode_function_end:
	.size	Can_17_MCanP_MainFunction_Mode,__Can_17_MCanP_MainFunction_Mode_function_end-Can_17_MCanP_MainFunction_Mode
.L184:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_CheckWakeup
; Function Can_17_MCanP_CheckWakeup
.L116:
Can_17_MCanP_CheckWakeup:	.type	func
	mov	d2,#1
	ret
.L578:
	
__Can_17_MCanP_CheckWakeup_function_end:
	.size	Can_17_MCanP_CheckWakeup,__Can_17_MCanP_CheckWakeup_function_end-Can_17_MCanP_CheckWakeup
.L189:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_IsrReceiveHandler
; Function Can_17_MCanP_IsrReceiveHandler
.L118:
Can_17_MCanP_IsrReceiveHandler:	.type	func
	ret
.L593:
	
__Can_17_MCanP_IsrReceiveHandler_function_end:
	.size	Can_17_MCanP_IsrReceiveHandler,__Can_17_MCanP_IsrReceiveHandler_function_end-Can_17_MCanP_IsrReceiveHandler
.L204:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_IsrTransmitHandler
; Function Can_17_MCanP_IsrTransmitHandler
.L120:
Can_17_MCanP_IsrTransmitHandler:	.type	func
	sub.a	a10,#8
.L729:
	jge.u	d4,#5,.L65
.L989:
	sha	d9,d4,#-2
	lea	a15,CAN_KER
.L731:
	addsc.a	a12,a15,d9,#2
.L990:
	sha	d4,#5
	movh.a	a2,#@his(Can_TxMsiMask)
.L730:
	ld.a	a15,[a12]
.L991:
	mov	d8,#0
	lea	a2,[a2]@los(Can_TxMsiMask)
.L732:
	addsc.a	a13,a2,d4,#0
.L992:
	ld.w	d0,[a15]448
.L993:
	ld.a	a15,Can_kConfigPtr
.L994:
	st.w	[a10],d0
.L995:
	ld.bu	d0,[a15]47
.L996:
	ld.bu	d10,[a15]46
.L733:
	jlt.u	d0,d10,.L66
.L67:
	addsc.a	a2,a13,d10,#2
.L997:
	ld.a	a15,[a12]
.L998:
	mov	d11,#1
	ld.w	d0,[a2]
.L999:
	mov	d12,#-1
.L1000:
	st.w	[a15]448,d0
.L1001:
	mov	d13,#32
	j	.L68
.L69:
	ld.a	a15,[a12]
.L1002:
	sha	d0,d10,#5
.L1003:
	mov	d4,d9
.L735:
	addsc.a	a15,a15,d10,#2
.L1004:
	add	d8,#1
.L1005:
	ld.w	d15,[a15]384
.L1006:
	ld.a	a15,Can_kConfigPtr
.L1007:
	and	d14,d15,#63
.L737:
	add	d15,d14,d0
.L738:
	addsc.a	a15,a15,d9,#0
	ld.bu	d0,[a15]44
.L1008:
	sub	d0,d15,d0
.L1009:
	extr.u	d5,d0,#0,#8
	call	Can_lGetHthIndex
.L736:
	ld.a	a15,[a12]
.L1010:
	sha	d15,#5
.L739:
	addsc.a	a15,a15,d15,#0
.L1011:
	mov	d15,#10
.L1012:
	st.w	[a15]4124,d15
.L1013:
	sh	d15,d11,d14
.L1014:
	ld.a	a15,[a12]
.L1015:
	xor	d15,d12
.L1016:
	addsc.a	a15,a15,d10,#2
.L1017:
	st.w	[a15]320,d15
.L68:
	ld.a	a15,[a12]
.L1018:
	addsc.a	a15,a15,d10,#2
.L1019:
	ld.w	d15,[a15]384
.L1020:
	and	d15,#63
.L1021:
	jeq	d15,d13,.L70
.L1022:
	jlt.u	d8,d13,.L69
.L70:
	add	d10,#1
	ld.a	a15,Can_kConfigPtr
.L734:
	extr.u	d10,d10,#0,#8
.L740:
	ld.bu	d15,[a15]47
.L1023:
	jge.u	d15,d10,.L67
.L66:
	ld.a	a15,[a12]
.L1024:
	ld.w	d15,[a10]
.L1025:
	st.w	[a15]448,d15
.L65:
	ret
.L595:
	
__Can_17_MCanP_IsrTransmitHandler_function_end:
	.size	Can_17_MCanP_IsrTransmitHandler,__Can_17_MCanP_IsrTransmitHandler_function_end-Can_17_MCanP_IsrTransmitHandler
.L209:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_IsrTransmitRuntime
; Function Can_17_MCanP_IsrTransmitRuntime
.L122:
Can_17_MCanP_IsrTransmitRuntime:	.type	func
	jge.u	d4,#5,.L71
.L1030:
	lea	a15,Can_NodeIdMap
.L1031:
	addsc.a	a15,a15,d4,#0
.L1032:
	sha	d10,d4,#-2
.L741:
	ld.bu	d15,[a15]
.L742:
	ld.a	a15,Can_kConfigPtr
.L1033:
	mov	d11,#0
.L744:
	ld.a	a15,[a15]4
.L1034:
	addsc.a	a15,a15,d15,#2
.L1035:
	ld.bu	d15,[a15]3
.L743:
	ld.bu	d9,[a15]2
.L746:
	lea	a15,CAN_KER
	addsc.a	a12,a15,d10,#2
.L1036:
	jlt	d15,#1,.L75
.L1037:
	mov.a	a13,d15
.L747:
	mov	d8,#10
.L1038:
	add.a	a13,#-1
.L73:
	ld.a	a15,[a12]
.L1039:
	add	d15,d9,d11
.L748:
	sha	d12,d15,#5
	addsc.a	a15,a15,d12,#0
	ld.w	d0,[a15]4124
.L1040:
	jz.t	d0:1,.L74
.L1041:
	ld.a	a15,Can_kConfigPtr
.L1042:
	mov	d4,d10
.L750:
	addsc.a	a15,a15,d10,#0
	ld.bu	d0,[a15]44
.L1043:
	sub	d15,d0
.L749:
	extr.u	d5,d15,#0,#8
	call	Can_lGetHthIndex
.L751:
	ld.a	a15,[a12]
	addsc.a	a15,a15,d12,#0
	st.w	[a15]4124,d8
.L74:
	add	d11,#1
.L745:
	extr.u	d11,d11,#0,#8
	loop	a13,.L73
.L75:
.L71:
	ret
.L604:
	
__Can_17_MCanP_IsrTransmitRuntime_function_end:
	.size	Can_17_MCanP_IsrTransmitRuntime,__Can_17_MCanP_IsrTransmitRuntime_function_end-Can_17_MCanP_IsrTransmitRuntime
.L214:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_IsrBusOffHandler
; Function Can_17_MCanP_IsrBusOffHandler
.L124:
Can_17_MCanP_IsrBusOffHandler:	.type	func
	fcall	.cocofun_9
.L760:
	ret
.L580:
	
__Can_17_MCanP_IsrBusOffHandler_function_end:
	.size	Can_17_MCanP_IsrBusOffHandler,__Can_17_MCanP_IsrBusOffHandler_function_end-Can_17_MCanP_IsrBusOffHandler
.L194:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('.cocofun_9')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
; Function .cocofun_9
.L126:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0
	sha	d15,d4,#-2
	lea	a15,CAN_KER
.L752:
	addsc.a	a15,a15,d15,#2
.L1054:
	and	d0,d4,#3
.L754:
	ld.a	a15,[a15]
.L1055:
	sha	d15,d0,#8
.L753:
	addsc.a	a15,a15,d15,#0
	lea	a15,[a15]512
.L1056:
	ld.w	d15,[a15+]
.L756:
	and	d15,#1
.L1057:
	ld.w	d0,[a15]
.L755:
	jz.t	d0:5,.L76
.L1058:
	jeq	d15,#0,.L77
.L761:
	mov	d15,#991
	st.w	[a15],d15
.L757:
	lea	a15,Can_NodeIdMap
.L1059:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L758:
	lea	a15,Can_17_MCanP_ControllerMode
.L1060:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L759:
	jne	d15,#2,.L78
.L1061:
	mov	d15,#3
	st.b	[a15],d15
.L78:
.L77:
.L76:
	fret
.L224:
	; End of function
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Can_17_MCanP_IsrBusOffRuntime
; Function Can_17_MCanP_IsrBusOffRuntime
.L128:
Can_17_MCanP_IsrBusOffRuntime:	.type	func
	fcall	.cocofun_9
.L762:
	ret
.L587:
	
__Can_17_MCanP_IsrBusOffRuntime_function_end:
	.size	Can_17_MCanP_IsrBusOffRuntime,__Can_17_MCanP_IsrBusOffRuntime_function_end-Can_17_MCanP_IsrBusOffRuntime
.L199:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Can_lAllocateHwObject')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6337                                                   CAN_SRC_CLEARMASK,CAN_SRC_SRE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6338  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6339  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6340  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6341  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6342  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6343  ** Syntax         : IFX_LOCAL_INLINE void Can_lRxFifoHandler\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6344                                        (uint8 HwControllerId,uint16 HwObjectId)**
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6345  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6346  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6347  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6348  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6349  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6350  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6351  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6352  ** Parameters (in)  : HwObjectId - Message Object Id                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6353  **                    HwControllerId                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6354  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6355  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6356  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6357  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6358  ** Description      : Recieve event handler for Receive FIFO                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6359  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6360  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6361  IFX_LOCAL_INLINE void Can_lRxFifoHandler(uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6362                                       uint16 HwObjectId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6363  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6364    uint16 FifoIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6365    uint8 CurrentHardwareObject;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6366    uint8 FifoTop;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6367    uint8 FifoBottom;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6368    uint8 Threshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6369    uint8 NewThreshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6370    uint8 Temp;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6371    uint8 CurrentThreshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6372    uint16 Hfh;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6373    uint8 BreakLoop;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6374    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6375    uint16 FifoTopBot;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6376  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6377    Hfh = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6378    Threshold = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6379    BreakLoop = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6380  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6381    /* Extract threshold of the current FIFO based on HwObjectId  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6382    for(FifoIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6383      ((FifoIndex < Can_kConfigPtr->CanNumRxFifo) && (BreakLoop == CAN_ZERO));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6384      FifoIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6385    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6386      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6387          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6388      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6389          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6390      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6391          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6392      if((Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].HwObjectId == HwObjectId) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6393        (Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].HwControllerId ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6394        HwControllerId) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6395        (Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].HwControllerId
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6396        != CAN_INVALID_HW_CONTROLLER_ID))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6397      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6398        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6399          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6400        Threshold = Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].RxFifoThreshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6401        Hfh = FifoIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6402        BreakLoop = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6403      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6404    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6405  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6406    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6407    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6408  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6409  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6410    /* Calculate the hfh (hardware fifo handle) number */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6411  #if ((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)&&(CAN_TX_HARDWARE_OBJECTS_MAX > 0U))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6412    Hfh = Hfh + Can_kConfigPtr->CanNumRxHwObj + Can_kConfigPtr->CanNumTxHwObj;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6413  #elif (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6414    Hfh = Hfh + Can_kConfigPtr->CanNumRxHwObj;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6415  #elif (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6416    Hfh = Hfh + Can_kConfigPtr->CanNumTxHwObj;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6417  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6418  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6419    /* Extract the Current Hardwareobject number, TOP and BOT of the base FIFO */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6420      FifoTop = (uint8)(((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6421              MO[HwObjectId].FGPR.U) >> CAN_MOFGPR_TOP_SHIFT) & CAN_8BIT_MASK);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6422      FifoBottom = (uint8)((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6423                                      MO[HwObjectId].FGPR.U) & CAN_8BIT_MASK);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6424    /* extract CurrentThreshold */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6425      CurrentThreshold = (uint8)(((CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U) >>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6426                  CAN_MOFGPR_SEL_SHIFT) & CAN_8BIT_MASK);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6427    if((CurrentThreshold - FifoBottom ) < Threshold)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6428    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6429      Temp = Threshold -(CurrentThreshold - FifoBottom);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6430      CurrentHardwareObject = (FifoTop - Temp)+ CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6431    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6432    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6433    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6434      CurrentHardwareObject = CurrentThreshold - Threshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6435    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6436  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6437    /* FifoTop & FifoBottom values are stored in the FifoTopBot variable
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6438    to reduce the number of input parameters to the Can_lRxFifoExtractData
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6439    function */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6440  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6441    FifoTopBot =
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6442    (uint16)((uint16)((uint16)FifoTop << CAN_EIGHT)|(uint16)FifoBottom);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6443      /* Extract data from the message object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6444      Can_lRxFifoExtractData(FifoTopBot, CurrentHardwareObject,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6445      HwControllerId,Hfh, Threshold);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6446  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6447    /* Calculate new threshold */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6448    NewThreshold = CurrentThreshold + Threshold;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6449  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6450    /* If NewThreshold is beyond TOP, reset it as per circuler linked list */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6451    if(NewThreshold > FifoTop)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6452    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6453      Temp = FifoTop - CurrentThreshold ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6454      NewThreshold = FifoBottom + ((Threshold -Temp)-CAN_ONE);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6455    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6456  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6457    /* Update new threshold */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6458     CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U =(unsigned_int)((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6459                                                    MO[HwObjectId].FGPR.U &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6460                                                 CAN_MOFGPR_SEL_CLEARMASK) |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6461            (unsigned_int)((unsigned_int)NewThreshold << CAN_MOFGPR_SEL_BITPOS));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6462  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6463  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6464  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6465  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6466  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6467  ** Syntax           : IFX_LOCAL_INLINE void Can_lRxFifoExtractData            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6468  **                                       (                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6469  **                                          uint16 FifoTopBot,                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6470  **                                          uint8 CurrentMo,                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6471  **                                          uint8 HwControllerId,             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6472  **                                          uint8 Hfh,                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6473  **                                          uint8 Threshold                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6474  **                                        )                                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6475  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6476  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6477  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6478  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6479  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6480  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6481  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6482  ** Parameters (in)  : FifoTop - FIFO Top Message Object                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6483  **                    FifoBottom - FIFO Bottom Message Object                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6484  **                    CurrentMo - Associated Message Object                   **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6485  **                    Hfh - Hardware FIFO Handler                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6486  **                    Threshold - Receive FIFO Threshold                      **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6487  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6488  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6489  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6490  ** Return value     : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6491  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6492  ** Description      : This function extracts data from the message object     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6493  **                    and notifies upper layer                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6494  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6495  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6496  IFX_LOCAL_INLINE void Can_lRxFifoExtractData(uint16 FifoTopBot,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6497                                           uint8 CurrentMo,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6498                                           uint8 HwControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6499                                           uint16 Hfh,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6500                                           uint8 Threshold)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6501  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6502    volatile uint32 *MoData;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6503    Can_IdType MessageId;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6504    uint8 MoDataIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6505    uint8 MessageDlc;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6506    uint8 Count;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6507    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6508    uint8 FifoTop;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6509    uint8 FifoBottom;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6510    uint8 locMoDataIndex3;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6511  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6512    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6513    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6514  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6515    /* Extract the FifoTop & FifoBottom values from FifoTopBot */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6516    FifoBottom = (uint8)(FifoTopBot & CAN_8BIT_MASK);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6517    FifoTop = (uint8)((uint8)(FifoTopBot >> CAN_EIGHT) & CAN_8BIT_MASK);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6518  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6519    for (Count = CAN_ZERO; Count < Threshold; Count++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6520    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6521      locMoDataIndex3= CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6522  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6523      /* Extract the Message Id of the Current Message Object */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6524  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6525  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6526      /*  Extended frame */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6527      if ((((CAN_KER[KerIdx]->MO[CurrentMo].AR.U)\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6528                            & CAN_MOAR_IDE) >> CAN_MOAR_IDE_BITPOS) == CAN_ONE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6529      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6530        /* Extract Message Id and set MSBit */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6531        MessageId = (Can_IdType)((
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6532                  (CAN_KER[KerIdx]->MO[CurrentMo].AR.U) & CAN_MOAR_ID))\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6533                          | CAN_EXTENDED_MSB_SET;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6534      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6535      else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6536  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6537        /* Standard frame */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6538  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)  */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6539      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6540        MessageId = (uint32)((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6541                     MO[CurrentMo].AR.U) & CAN_MOAR_ID) >> CAN_MOAR_ID_STD_SHIFT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6542      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6543  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6544      /* Extract DLC */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6545      MessageDlc = (uint8) (((CAN_KER[KerIdx]->\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6546                  MO[CurrentMo].FCR.U) & CAN_MOFCR_DLC) >> CAN_MOFCR_DLC_BITPOS);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6547  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6548      if(MessageDlc > CAN_EIGHT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6549      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6550        MessageDlc = CAN_EIGHT;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6551      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6552  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6553      /* Extract Recived message Data */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6554      /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6555        uint32* is typecasted to unit8* via void pointer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6556      MoData = ((volatile uint32 *)(void *)&\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6557                                        CAN_KER[KerIdx]->MO[CurrentMo].DATAL.U);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6558  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6559      for(MoDataIndex=0U;MoDataIndex<MessageDlc;MoDataIndex++)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6560      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6561        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6562          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6563        Can_RxFifoMessageData[HwControllerId][MoDataIndex]=\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6564            (uint8)(((MoData[locMoDataIndex3])\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6565                          & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6566                          CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6567  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6568          if((MoDataIndex % CAN_FOUR)==3U)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6569           {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6570            locMoDataIndex3++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6571           }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6572      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6573  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6574      /* Notify the upper layer */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6575  //    CanIf_RxIndication((Can_HwHandleType)Hfh,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6576  //      MessageId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6577  //      MessageDlc,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6578  //      &Can_RxFifoMessageData[HwControllerId][CAN_ZERO]);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6579  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6580      CurrentMo++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6581  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6582      /* If CurrentMo goes beyond TOP, Set CurrentMo to FifoBottom */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6583      if(CurrentMo > FifoTop)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6584      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6585        CurrentMo = FifoBottom;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6586      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6587    }/* End of for loop */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6588  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6589  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6590  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6591  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6592  #if (CAN_CHANGE_BAUDRATE_API == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6593  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6594  ** Syntax           : static uint8 Can_lSearchBaudrate                        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6595  **                          (                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6596  **                            uint8 Controller,                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6597  **                            const uint16 Baudrate                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6598  **                          )                                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6599  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6600  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6601  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6602  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6603  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6604  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6605  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6606  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6607  **                    Baudrate - Baudrate to be checked                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6608  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6609  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6610  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6611  ** Return value     : uint8 : Baudrate configuration index                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6612  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6613  ** Description      : Checks if the CAN Controller Baudrate is configured or  **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6614  **                    not                                                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6615  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6616  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6617  static uint8 Can_lSearchBaudrate(uint8 Controller, const uint16 Baudrate)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6618  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6619    const Can_17_MCanP_ControllerBaudrateConfigType *BaudrateCfgPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6620    const Can_BaudrateConfigPtrType *CanBaudrateCfgPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6621    uint8 BaudrateCfgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6622    uint8 BreakLoop;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6623  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6624    BaudrateCfgIndex = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6625    BreakLoop = CAN_ZERO;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6626  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6627    /* Get the baudrate configuration index */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6628    CanBaudrateCfgPtr = Can_kConfigPtr->CanBaudrateConfigPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6629    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6630          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6631    CanBaudrateCfgPtr += Controller;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6632  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6633    while((BaudrateCfgIndex < Can_kConfigPtr->CanNumBaudrateCfgs[Controller]) &&
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6634      (BreakLoop == CAN_ZERO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6635    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6636      BaudrateCfgPtr = CanBaudrateCfgPtr->Can_kBaudrateConfigPtr;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6637      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6638          PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6639      BaudrateCfgPtr += BaudrateCfgIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6640  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6641      /* check if baudrate is configured */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6642      if(BaudrateCfgPtr->CanControllerBaudrateCfg == Baudrate)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6643      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6644        BreakLoop = CAN_ONE;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6645      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6646      else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6647      {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6648        BaudrateCfgIndex++;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6649      }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6650    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6651  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6652    return (BaudrateCfgIndex);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6653  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6654  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6655  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6656  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6657  ** TRACEABILITY: [cover parentID=DS_AS_CAN280]                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6658  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6659  ** Syntax           : static Std_ReturnType Can_lAllocateHwObject             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6660  **                                          (                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6661  **                                            uint8 AssociatedController,     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6662  **                                            uint16 HwObjectId               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6663  **                                          )                                 **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6664  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6665  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6666  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6667  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6668  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6669  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6670  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6671  ** Reentrancy       : Non-Reentrant                                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6672  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6673  ** Parameters (in)  : AssociatedController - CAN Controller Id                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6674  **                    HwObjectId - Message Object Id                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6675  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6676  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6677  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6678  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6679  **                    - E_OK: Message object allocation successful            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6680  **                    - E_NOT_OK: Message object allocation failed            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6681  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6682  ** Description      : Allocates the Message Object to corresponding CAN       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6683  **                    CAN Controller List                                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6684  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6685  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6686  static Std_ReturnType Can_lAllocateHwObject(uint8 HwControllerId,
; Function Can_lAllocateHwObject
.L130:
Can_lAllocateHwObject:	.type	func

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6687                                              uint16 HwObjectId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6688  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6689    uint32 TimeOutIndex;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6690    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6691    uint8 TempPanar2;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6692    uint8 KerIdx;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6693  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6694    RetVal = E_OK;
	mov	d2,#0
.L766:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6695    /* Calculate to which kernel, the controller belongs to*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6696    KerIdx = CAN_CALC_KERIDX(HwControllerId);
	sha	d0,d4,#-2
.L764:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6697  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6698    /* Give command to allocate the hardware object to its associated controller
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6699    Note: Controller 0 ==> List 1 and Controller 1 ==> List 2 */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6700    TempPanar2 = (CAN_CALC_HWCTRLID(HwControllerId)) + CAN_ONE;
	and	d15,d4,#3
.L767:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6701    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->PANCTR.U,\ 
	add	d15,#1
	fcall	.cocofun_12
.L619:
	ld.a	a2,[a15]
	ld.w	d0,[a2]452
.L765:
	insert	d0,d0,#0,#24,#8
	sh	d15,d15,#24
.L768:
	or	d0,d15
	st.w	[a2]452,d0
.L620:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6702      CAN_PANCTR_PANAR2_CLEARMASK,(uint32)TempPanar2 << CAN_PANCTR_PANAR2_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6703    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->PANCTR.U,\ 
	ld.w	d15,[a2]452
	insert	d15,d15,#0,#16,#8
	sh	d0,d5,#16
.L769:
	or	d15,d0
	st.w	[a2]452,d15
.L622:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6704      CAN_PANCTR_PANAR1_CLEARMASK,(uint32)HwObjectId << CAN_PANCTR_PANAR1_BITPOS)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6705    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->PANCTR.U,\ 
	ld.w	d15,[a2]452
.L770:
	insert	d15,d15,#2,#0,#8
	st.w	[a2]452,d15
.L624:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6706                          CAN_PANCTR_PANCMD_CLEARMASK,CAN_PANCMD_STATIC_ALLOCATE)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6707  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6708    /* Wait until hardware object is allocated to the controller */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6709    TimeOutIndex = CAN_TIMEOUT_DURATION;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6710  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6711  #ifdef IFX_CAN_DEBUG02
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6712    while (((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6713          CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS) |\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6714          TestCan_lAllocateHwObject()) == CAN_ONE) && (TimeOutIndex != CAN_ZERO))
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6715   #else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6716    while ((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6717                CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS)  == CAN_ONE) && \ 
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6718                                                      (TimeOutIndex != CAN_ZERO))
	mov	d15,#400
	j	.L82
.L83:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6719  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6720    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6721      TimeOutIndex-- ;
	add	d15,#-1
.L82:
	ld.a	a2,[a15]
	ld.w	d0,[a2]452
.L1048:
	jz.t	d0:8,.L84
.L1049:
	jne	d15,#0,.L83
.L84:

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6722    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6723  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6724    /* The detection of production code errors cannot be switched off.
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6725    This requirement will be violated in case of HIS requirements */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6726    if (TimeOutIndex == CAN_ZERO)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6727    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6728      /* Report hardware errors and failures to DEM */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6729  #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6730      Dem_ReportErrorStatus((Dem_EventIdType)CAN_E_TIMEOUT,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6731        DEM_EVENT_STATUS_FAILED);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6732  #endif
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6733  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6734      RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6735    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6736    return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6737  }
	cmovn	d2,d15,#1
	ret
.L612:
	
__Can_lAllocateHwObject_function_end:
	.size	Can_lAllocateHwObject,__Can_lAllocateHwObject_function_end-Can_lAllocateHwObject
.L219:
	; End of function
	
	.sdecl	'.zrodata.Can_17_MCanP.CAN_NUM_CONTROLLERS_IN_KERNEL',data,rom,cluster('CAN_NUM_CONTROLLERS_IN_KERNEL')
	.sect	'.zrodata.Can_17_MCanP.CAN_NUM_CONTROLLERS_IN_KERNEL'
CAN_NUM_CONTROLLERS_IN_KERNEL:	.type	object
	.size	CAN_NUM_CONTROLLERS_IN_KERNEL,1
	.byte	4
	.sdecl	'.zbss.Can_17_MCanP.Can_SwObjectHandle',data,cluster('Can_SwObjectHandle')
	.sect	'.zbss.Can_17_MCanP.Can_SwObjectHandle'
	.align	4
Can_SwObjectHandle:	.type	object
	.size	Can_SwObjectHandle,7
	.space	7
	.sdecl	'.zbss.Can_17_MCanP.Can_17_MCanP_InterruptDisableCount',data,cluster('Can_17_MCanP_InterruptDisableCount')
	.sect	'.zbss.Can_17_MCanP.Can_17_MCanP_InterruptDisableCount'
Can_17_MCanP_InterruptDisableCount:	.type	object
	.size	Can_17_MCanP_InterruptDisableCount,4
	.space	4
	.sdecl	'.zbss.Can_17_MCanP.Can_InterruptsEnabledStatus',data,cluster('Can_InterruptsEnabledStatus')
	.sect	'.zbss.Can_17_MCanP.Can_InterruptsEnabledStatus'
Can_InterruptsEnabledStatus:	.type	object
	.size	Can_InterruptsEnabledStatus,4
	.space	4
	.sdecl	'.zbss.Can_17_MCanP.Can_NodeIdMap',data,cluster('Can_NodeIdMap')
	.sect	'.zbss.Can_17_MCanP.Can_NodeIdMap'
Can_NodeIdMap:	.type	object
	.size	Can_NodeIdMap,4
	.space	4
	.sdecl	'.zbss.Can_17_MCanP.Can_17_MCanP_DriverState',data,cluster('Can_17_MCanP_DriverState')
	.sect	'.zbss.Can_17_MCanP.Can_17_MCanP_DriverState'
Can_17_MCanP_DriverState:	.type	object
	.size	Can_17_MCanP_DriverState,1
	.space	1
	.sdecl	'.zdata.Can_17_MCanP.Can_kConfigPtr',data,cluster('Can_kConfigPtr')
	.sect	'.zdata.Can_17_MCanP.Can_kConfigPtr'
	.global	Can_kConfigPtr
	.align	4
Can_kConfigPtr:	.type	object
	.size	Can_kConfigPtr,4
	.space	4
	.sdecl	'.zbss.Can_17_MCanP.Can_17_MCanP_ControllerMode',data,cluster('Can_17_MCanP_ControllerMode')
	.sect	'.zbss.Can_17_MCanP.Can_17_MCanP_ControllerMode'
	.align	4
Can_17_MCanP_ControllerMode:	.type	object
	.size	Can_17_MCanP_ControllerMode,4
	.space	4
	.sdecl	'.bss.Shared.DEFAULT_RAM_32BIT',data,cluster('Can_RxMsiMask')
	.sect	'.bss.Shared.DEFAULT_RAM_32BIT'
	.align	4
Can_RxMsiMask:	.type	object
	.size	Can_RxMsiMask,128
	.space	128
	.sdecl	'.bss.Shared.DEFAULT_RAM_32BIT',data,cluster('Can_TxMsiMask')
	.sect	'.bss.Shared.DEFAULT_RAM_32BIT'
	.align	4
Can_TxMsiMask:	.type	object
	.size	Can_TxMsiMask,128
	.space	128
	.calls	'Can_17_MCanP_Init','Mcal_ResetENDINIT'
	.calls	'Can_17_MCanP_Init','Mcal_SetENDINIT'
	.calls	'Can_17_MCanP_Init','Can_lSetBaudrate'
	.calls	'Can_17_MCanP_Init','Can_lAllocateHwObject'
	.calls	'Can_17_MCanP_DisableControllerInterrupts','SchM_Enter_Can_17_MCanP_CanDisInt'
	.calls	'Can_17_MCanP_DisableControllerInterrupts','SchM_Exit_Can_17_MCanP_CanDisInt'
	.calls	'Can_17_MCanP_EnableControllerInterrupts','SchM_Enter_Can_17_MCanP_CanEnInt'
	.calls	'Can_17_MCanP_EnableControllerInterrupts','SchM_Exit_Can_17_MCanP_CanEnInt'
	.calls	'Can_17_MCanP_Write','SchM_Enter_Can_17_MCanP_CanWrMO'
	.calls	'Can_17_MCanP_Write','SchM_Exit_Can_17_MCanP_CanWrMO'
	.calls	'Can_17_MCanP_Write','Can_lGetHthIndex'
	.calls	'Can_17_MCanP_MainFunction_Write','Can_17_MCanP_IsrTransmitRuntime'
	.calls	'Can_17_MCanP_MainFunction_BusOff','Can_17_MCanP_IsrBusOffRuntime'
	.calls	'Can_17_MCanP_IsrTransmitHandler','Can_lGetHthIndex'
	.calls	'Can_17_MCanP_IsrTransmitRuntime','Can_lGetHthIndex'
	.calls	'Can_17_MCanP_SetControllerMode','.cocofun_12'
	.calls	'Can_17_MCanP_SetControllerMode','.cocofun_13'
	.calls	'Can_17_MCanP_DisableControllerInterrupts','.cocofun_10'
	.calls	'Can_17_MCanP_EnableControllerInterrupts','.cocofun_10'
	.calls	'Can_17_MCanP_Write','.cocofun_11'
	.calls	'Can_17_MCanP_IsrBusOffHandler','.cocofun_9'
	.calls	'Can_17_MCanP_IsrBusOffRuntime','.cocofun_9'
	.calls	'Can_lAllocateHwObject','.cocofun_12'
	.calls	'Can_17_MCanP_Init','',16
	.calls	'Can_17_MCanP_SetControllerMode','',0
	.calls	'.cocofun_13','',0
	.calls	'.cocofun_12','',0
	.calls	'Can_17_MCanP_DisableControllerInterrupts','',0
	.calls	'.cocofun_10','',0
	.calls	'Can_17_MCanP_EnableControllerInterrupts','',0
	.calls	'Can_17_MCanP_Write','',8
	.calls	'.cocofun_11','',0
	.calls	'Can_17_MCanP_MainFunction_Write','',0
	.calls	'Can_17_MCanP_MainFunction_Read','',0
	.calls	'Can_17_MCanP_MainFunction_BusOff','',0
	.calls	'Can_17_MCanP_MainFunction_Wakeup','',0
	.calls	'Can_17_MCanP_MainFunction_Mode','',0
	.calls	'Can_17_MCanP_CheckWakeup','',0
	.calls	'Can_17_MCanP_IsrReceiveHandler','',0
	.calls	'Can_17_MCanP_IsrTransmitHandler','',8
	.calls	'Can_17_MCanP_IsrTransmitRuntime','',0
	.calls	'Can_17_MCanP_IsrBusOffHandler','',0
	.calls	'.cocofun_9','',0
	.calls	'Can_17_MCanP_IsrBusOffRuntime','',0
	.extern	SchM_Enter_Can_17_MCanP_CanDisInt
	.extern	SchM_Exit_Can_17_MCanP_CanDisInt
	.extern	SchM_Enter_Can_17_MCanP_CanEnInt
	.extern	SchM_Exit_Can_17_MCanP_CanEnInt
	.extern	SchM_Enter_Can_17_MCanP_CanWrMO
	.extern	SchM_Exit_Can_17_MCanP_CanWrMO
	.extern	Mcal_ResetENDINIT
	.extern	Mcal_SetENDINIT
	.extern	CAN_KER
	.extern	Can_lSetBaudrate
	.extern	Can_lGetHthIndex
	.calls	'Can_lAllocateHwObject','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L132:
	.word	22461
	.half	3
	.word	.L133
	.byte	4
.L131:
	.byte	1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L134
.L268:
	.byte	2
	.byte	'Can_lInitGlobalVar',0,3,1,133,19,23,1,1
.L271:
	.byte	3,0
.L281:
	.byte	4
	.byte	'unsigned char',0,1,8
.L283:
	.byte	5
	.byte	'Can_lInitClkSetting',0,3,1,229,19,33
	.word	249
	.byte	1,1
.L285:
	.byte	6
.L297:
	.byte	3
.L305:
	.byte	3,0,0
.L308:
	.byte	5
	.byte	'Can_lInitDemCheck',0,3,1,220,21,33
	.word	249
	.byte	1,1
.L309:
	.byte	3,0
.L321:
	.byte	2
	.byte	'Can_lInitializeController',0,3,1,164,22,23,1,1
.L323:
	.byte	7
	.byte	'ControllerId',0,1,164,22,55
	.word	249
.L325:
	.byte	7
	.byte	'HwControllerId',0,1,165,22,51
	.word	249
.L327:
	.byte	6
.L341:
	.byte	3
.L352:
	.byte	3
.L335:
	.byte	3
.L358:
	.byte	3,3,3,3,0,0
.L316:
	.byte	2
	.byte	'Can_lInitControllerStatus',0,3,1,152,29,23,1,1
.L318:
	.byte	6,3,0,0
.L379:
	.byte	5
	.byte	'Can_lInitMsgObj',0,3,1,168,23,33
	.word	249
	.byte	1,1
.L380:
	.byte	6,3,0,0
.L383:
	.byte	5
	.byte	'Can_lInitTxMsgObj',0,3,1,214,23,33
	.word	249
	.byte	1,1
.L384:
	.byte	6
.L395:
	.byte	3
.L404:
	.byte	3
.L411:
	.byte	3
.L415:
	.byte	3
.L418:
	.byte	3,0,0
.L452:
	.byte	2
	.byte	'Can_lDisableInterrupts',0,3,1,242,33,23,1,1
.L454:
	.byte	7
	.byte	'Controller',0,1,242,33,53
	.word	249
.L456:
	.byte	6
.L468:
	.byte	3
.L472:
	.byte	3
.L475:
	.byte	3,0,0
.L479:
	.byte	2
	.byte	'Can_lEnableInterrupts',0,3,1,216,34,23,1,1
.L481:
	.byte	7
	.byte	'Controller',0,1,216,34,51
	.word	249
.L483:
	.byte	6
.L492:
	.byte	3
.L501:
	.byte	3
.L510:
	.byte	3,0,0
.L361:
	.byte	2
	.byte	'Can_lClearAndEnableInterrupt',0,3,1,175,49,23,1,1
.L363:
	.byte	7
	.byte	'ServiceRequestNumber',0,1,176,49,48
	.word	249
.L365:
	.byte	6
.L366:
	.byte	3
.L369:
	.byte	3,0,0
.L421:
	.byte	8,2,73,9,1,9
	.byte	'CAN_OK',0,0,9
	.byte	'CAN_NOT_OK',0,1,9
	.byte	'CAN_BUSY',0,2,0
.L277:
	.byte	4
	.byte	'unsigned short int',0,2,7
.L303:
	.byte	4
	.byte	'unsigned long int',0,4,7,10
	.word	249
	.byte	11
	.byte	'Can_PduType',0,2,49,16,12,12
	.byte	'swPduHandle',0
	.word	249
	.byte	1,2,35,0,12
	.byte	'length',0
	.word	249
	.byte	1,2,35,1,12
	.byte	'id',0
	.word	779
	.byte	4,2,35,2,12
	.byte	'sdu',0
	.word	800
	.byte	4,2,35,8,0,13
	.word	805
.L514:
	.byte	10
	.word	885
.L517:
	.byte	5
	.byte	'Can_lWriteMsgObj',0,3,1,218,36,33
	.word	718
	.byte	1,1
.L520:
	.byte	7
	.byte	'HthIndex',0,1,218,36,56
	.word	249
.L522:
	.byte	7
	.byte	'HwObjectId',0,1,219,36,53
	.word	757
.L524:
	.byte	7
	.byte	'PduInfo',0,1,220,36,65
	.word	890
.L526:
	.byte	6
.L543:
	.byte	3
.L547:
	.byte	3
.L551:
	.byte	3
.L561:
	.byte	3,0,0
.L424:
	.byte	8,2,63,9,1,9
	.byte	'CAN_T_START',0,0,9
	.byte	'CAN_T_STOP',0,1,9
	.byte	'CAN_T_SLEEP',0,2,9
	.byte	'CAN_T_WAKEUP',0,3,0
.L426:
	.byte	2
	.byte	'Can_lSetModeWuSupportOff',0,3,1,129,31,23,1,1
.L429:
	.byte	7
	.byte	'Controller',0,1,129,31,54
	.word	249
.L431:
	.byte	7
	.byte	'HwControllerId',0,1,130,31,50
	.word	249
.L433:
	.byte	7
	.byte	'Transition',0,1,131,31,68
	.word	986
.L435:
	.byte	6
.L444:
	.byte	3
.L448:
	.byte	3,0,0,14
	.byte	'SchM_Enter_Can_17_MCanP_CanDisInt',0,3,72,13,1,1,1,1,14
	.byte	'SchM_Exit_Can_17_MCanP_CanDisInt',0,3,92,13,1,1,1,1,14
	.byte	'SchM_Enter_Can_17_MCanP_CanEnInt',0,3,112,13,1,1,1,1,14
	.byte	'SchM_Exit_Can_17_MCanP_CanEnInt',0,3,132,1,13,1,1,1,1,14
	.byte	'SchM_Enter_Can_17_MCanP_CanWrMO',0,3,152,1,13,1,1,1,1,14
	.byte	'SchM_Exit_Can_17_MCanP_CanWrMO',0,3,172,1,13,1,1,1,1,14
	.byte	'Mcal_ResetENDINIT',0,4,119,13,1,1,1,1,14
	.byte	'Mcal_SetENDINIT',0,4,146,1,13,1,1,1,1,11
	.byte	'Can_NPCRValueType',0,5,173,4,16,2,12
	.byte	'Can_NPCRValue',0
	.word	757
	.byte	2,2,35,0,0,13
	.word	1447
	.byte	10
	.word	1495
.L628:
	.byte	15,4
	.word	249
	.byte	16,3,0,11
	.byte	'Can_ControllerMOMapConfigType',0,5,166,4,16,4,12
	.byte	'ControllerMOMap',0
	.word	1505
	.byte	4,2,35,0,0,13
	.word	1514
	.byte	10
	.word	1576
	.byte	11
	.byte	'Can_EventHandlingType',0,5,211,4,16,4,12
	.byte	'CanEventType',0
	.word	1505
	.byte	4,2,35,0,0,13
	.word	1586
	.byte	10
	.word	1637
	.byte	11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,5,179,4,16,6,12
	.byte	'CanControllerBaudrate',0
	.word	779
	.byte	4,2,35,0,12
	.byte	'CanControllerBaudrateCfg',0
	.word	757
	.byte	2,2,35,4,0,13
	.word	1647
	.byte	10
	.word	1761
	.byte	11
	.byte	'Can_BaudrateConfigPtrType',0,5,186,4,16,4,12
	.byte	'Can_kBaudrateConfigPtr',0
	.word	1766
	.byte	4,2,35,0,0,13
	.word	1771
	.byte	10
	.word	1836
	.byte	11
	.byte	'Can_TxHwObjectConfigType',0,5,219,3,16,2,12
	.byte	'MsgObjId',0
	.word	249
	.byte	1,2,35,0,12
	.byte	'HwControllerId',0
	.word	249
	.byte	1,2,35,1,0,13
	.word	1846
.L387:
	.byte	10
	.word	1920
	.byte	13
	.word	249
	.byte	10
	.word	1930
	.byte	15,1
	.word	249
	.byte	16,0,0,11
	.byte	'Can_17_MCanP_ConfigType',0,5,221,4,16,48,12
	.byte	'CanNpcrPtr',0
	.word	1500
	.byte	4,2,35,0,12
	.byte	'CanControllerMOMapConfigPtr',0
	.word	1581
	.byte	4,2,35,4,12
	.byte	'CanEventHandlingConfigPtr',0
	.word	1642
	.byte	4,2,35,8,12
	.byte	'CanBaudrateConfigPtr',0
	.word	1841
	.byte	4,2,35,12,12
	.byte	'CanDefaultBaudrateConfigPtr',0
	.word	1766
	.byte	4,2,35,16,12
	.byte	'CanTxHwObjectConfigPtr',0
	.word	1925
	.byte	4,2,35,20,12
	.byte	'CanTxObjectHthKer0MapPtr',0
	.word	1935
	.byte	4,2,35,24,12
	.byte	'CanFdrSetting',0
	.word	757
	.byte	2,2,35,28,12
	.byte	'CanNumController',0
	.word	249
	.byte	1,2,35,30,12
	.byte	'CanHwControllerIdMap',0
	.word	1505
	.byte	4,2,35,31,12
	.byte	'CanNumBaudrateCfgs',0
	.word	1505
	.byte	4,2,35,35,12
	.byte	'CanNumTxHwObj',0
	.word	757
	.byte	2,2,35,40,12
	.byte	'CanNumRxFifoMsgObj',0
	.word	757
	.byte	2,2,35,42,12
	.byte	'CanTxHwObjCntKer',0
	.word	1940
	.byte	1,2,35,44,12
	.byte	'CanFifoMsgObjCntKer',0
	.word	1940
	.byte	1,2,35,45,12
	.byte	'CanTxFirstMspndIdx',0
	.word	249
	.byte	1,2,35,46,12
	.byte	'CanTxLastMspndIdx',0
	.word	249
	.byte	1,2,35,47,0,13
	.word	1949
.L266:
	.byte	10
	.word	2473
.L279:
	.byte	17
	.word	249
.L289:
	.byte	17
	.word	779
.L291:
	.byte	17
	.word	249
.L294:
	.byte	17
	.word	249
.L314:
	.byte	17
	.word	249
	.byte	17
	.word	779
.L458:
	.byte	10
	.word	2508
.L540:
	.byte	17
	.word	249
.L597:
	.byte	17
	.word	779
	.byte	18
	.byte	'Can_lSetBaudrate',0,6,145,1,13,1,1,1,1,7
	.byte	'HwControllerId',0,6,145,1,36
	.word	249
	.byte	7
	.byte	'ControllerBaudrate',0,6,146,1,37
	.word	779
	.byte	7
	.byte	'ApiAccesId',0,6,146,1,62
	.word	249
	.byte	0,19
	.byte	'Can_lGetHthIndex',0,6,148,1,14
	.word	249
	.byte	1,1,1,1,7
	.byte	'KerIdx',0,6,148,1,37
	.word	249
	.byte	7
	.byte	'HthIdx',0,6,148,1,50
	.word	249
	.byte	0,20
	.word	220
	.byte	3,0,20
	.word	266
	.byte	6,3,3,0,0,20
	.word	303
	.byte	3,0,20
	.word	335
	.byte	21
	.word	369
	.byte	21
	.word	391
	.byte	6,3,3,3,3,22
	.word	646
	.byte	21
	.word	683
	.byte	23
	.word	713
	.byte	24
	.word	714
	.byte	24
	.word	715
	.byte	0,0,3,22
	.word	646
	.byte	21
	.word	683
	.byte	23
	.word	713
	.byte	24
	.word	714
	.byte	24
	.word	715
	.byte	0,0,3,22
	.word	646
	.byte	21
	.word	683
	.byte	23
	.word	713
	.byte	24
	.word	714
	.byte	24
	.word	715
	.byte	0,0,3,0,0,20
	.word	425
	.byte	6,22
	.word	335
	.byte	21
	.word	369
	.byte	21
	.word	391
	.byte	23
	.word	415
	.byte	24
	.word	416
	.byte	24
	.word	417
	.byte	24
	.word	418
	.byte	24
	.word	419
	.byte	22
	.word	646
	.byte	21
	.word	683
	.byte	23
	.word	713
	.byte	24
	.word	714
	.byte	24
	.word	715
	.byte	0,0,24
	.word	420
	.byte	22
	.word	646
	.byte	21
	.word	683
	.byte	23
	.word	713
	.byte	24
	.word	714
	.byte	24
	.word	715
	.byte	0,0,24
	.word	421
	.byte	22
	.word	646
	.byte	21
	.word	683
	.byte	23
	.word	713
	.byte	24
	.word	714
	.byte	24
	.word	715
	.byte	0,0,24
	.word	422
	.byte	0,0,3,0,0,20
	.word	463
	.byte	6,22
	.word	495
	.byte	23
	.word	525
	.byte	24
	.word	526
	.byte	24
	.word	527
	.byte	24
	.word	528
	.byte	24
	.word	529
	.byte	24
	.word	530
	.byte	0,0,3,0,0,20
	.word	495
	.byte	6,3,3,3,3,3,0,0,20
	.word	533
	.byte	21
	.word	564
	.byte	6,3,3,3,0,0,20
	.word	590
	.byte	21
	.word	620
	.byte	6,3,3,3,0,0,20
	.word	646
	.byte	21
	.word	683
	.byte	6,3,3,0,0,20
	.word	895
	.byte	21
	.word	924
	.byte	21
	.word	942
	.byte	21
	.word	962
	.byte	6,3,3,3,3,0,0,20
	.word	1048
	.byte	21
	.word	1081
	.byte	21
	.word	1101
	.byte	21
	.word	1125
	.byte	6,3,3,0,0,25,1,10
	.word	3125
	.byte	26
	.byte	'__codeptr',0,1,1,1
	.word	3127
	.byte	11
	.byte	'_Ifx_CAN_ACCEN0_Bits',0,7,49,16,4,27
	.byte	'EN0',0,1
	.word	249
	.byte	1,7,2,35,0,27
	.byte	'EN1',0,1
	.word	249
	.byte	1,6,2,35,0,27
	.byte	'EN2',0,1
	.word	249
	.byte	1,5,2,35,0,27
	.byte	'EN3',0,1
	.word	249
	.byte	1,4,2,35,0,27
	.byte	'EN4',0,1
	.word	249
	.byte	1,3,2,35,0,27
	.byte	'EN5',0,1
	.word	249
	.byte	1,2,2,35,0,27
	.byte	'EN6',0,1
	.word	249
	.byte	1,1,2,35,0,27
	.byte	'EN7',0,1
	.word	249
	.byte	1,0,2,35,0,27
	.byte	'EN8',0,1
	.word	249
	.byte	1,7,2,35,1,27
	.byte	'EN9',0,1
	.word	249
	.byte	1,6,2,35,1,27
	.byte	'EN10',0,1
	.word	249
	.byte	1,5,2,35,1,27
	.byte	'EN11',0,1
	.word	249
	.byte	1,4,2,35,1,27
	.byte	'EN12',0,1
	.word	249
	.byte	1,3,2,35,1,27
	.byte	'EN13',0,1
	.word	249
	.byte	1,2,2,35,1,27
	.byte	'EN14',0,1
	.word	249
	.byte	1,1,2,35,1,27
	.byte	'EN15',0,1
	.word	249
	.byte	1,0,2,35,1,27
	.byte	'EN16',0,1
	.word	249
	.byte	1,7,2,35,2,27
	.byte	'EN17',0,1
	.word	249
	.byte	1,6,2,35,2,27
	.byte	'EN18',0,1
	.word	249
	.byte	1,5,2,35,2,27
	.byte	'EN19',0,1
	.word	249
	.byte	1,4,2,35,2,27
	.byte	'EN20',0,1
	.word	249
	.byte	1,3,2,35,2,27
	.byte	'EN21',0,1
	.word	249
	.byte	1,2,2,35,2,27
	.byte	'EN22',0,1
	.word	249
	.byte	1,1,2,35,2,27
	.byte	'EN23',0,1
	.word	249
	.byte	1,0,2,35,2,27
	.byte	'EN24',0,1
	.word	249
	.byte	1,7,2,35,3,27
	.byte	'EN25',0,1
	.word	249
	.byte	1,6,2,35,3,27
	.byte	'EN26',0,1
	.word	249
	.byte	1,5,2,35,3,27
	.byte	'EN27',0,1
	.word	249
	.byte	1,4,2,35,3,27
	.byte	'EN28',0,1
	.word	249
	.byte	1,3,2,35,3,27
	.byte	'EN29',0,1
	.word	249
	.byte	1,2,2,35,3,27
	.byte	'EN30',0,1
	.word	249
	.byte	1,1,2,35,3,27
	.byte	'EN31',0,1
	.word	249
	.byte	1,0,2,35,3,0,26
	.byte	'Ifx_CAN_ACCEN0_Bits',0,7,83,3
	.word	3150
	.byte	4
	.byte	'unsigned int',0,4,7,11
	.byte	'_Ifx_CAN_ACCEN1_Bits',0,7,86,16,4,27
	.byte	'reserved_0',0,4
	.word	3707
	.byte	32,0,2,35,0,0,26
	.byte	'Ifx_CAN_ACCEN1_Bits',0,7,89,3
	.word	3723
	.byte	11
	.byte	'_Ifx_CAN_CLC_Bits',0,7,92,16,4,27
	.byte	'DISR',0,1
	.word	249
	.byte	1,7,2,35,0,27
	.byte	'DISS',0,1
	.word	249
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	249
	.byte	1,5,2,35,0,27
	.byte	'EDIS',0,1
	.word	249
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,4
	.word	3707
	.byte	28,0,2,35,0,0,26
	.byte	'Ifx_CAN_CLC_Bits',0,7,99,3
	.word	3800
	.byte	11
	.byte	'_Ifx_CAN_FDR_Bits',0,7,102,16,4,27
	.byte	'STEP',0,2
	.word	757
	.byte	10,6,2,35,0,27
	.byte	'reserved_10',0,1
	.word	249
	.byte	4,2,2,35,1,27
	.byte	'DM',0,1
	.word	249
	.byte	2,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	757
	.byte	16,0,2,35,2,0,26
	.byte	'Ifx_CAN_FDR_Bits',0,7,108,3
	.word	3941
	.byte	11
	.byte	'_Ifx_CAN_ID_Bits',0,7,111,16,4,27
	.byte	'MOD_REV',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'MOD_TYPE',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'MODNUMBER',0,2
	.word	757
	.byte	16,0,2,35,2,0,26
	.byte	'Ifx_CAN_ID_Bits',0,7,116,3
	.word	4066
	.byte	11
	.byte	'_Ifx_CAN_KRST0_Bits',0,7,119,16,4,27
	.byte	'RST',0,1
	.word	249
	.byte	1,7,2,35,0,27
	.byte	'RSTSTAT',0,1
	.word	249
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,4
	.word	3707
	.byte	30,0,2,35,0,0,26
	.byte	'Ifx_CAN_KRST0_Bits',0,7,124,3
	.word	4173
	.byte	11
	.byte	'_Ifx_CAN_KRST1_Bits',0,7,127,16,4,27
	.byte	'RST',0,1
	.word	249
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,4
	.word	3707
	.byte	31,0,2,35,0,0,26
	.byte	'Ifx_CAN_KRST1_Bits',0,7,131,1,3
	.word	4282
	.byte	11
	.byte	'_Ifx_CAN_KRSTCLR_Bits',0,7,134,1,16,4,27
	.byte	'CLR',0,1
	.word	249
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,4
	.word	3707
	.byte	31,0,2,35,0,0,26
	.byte	'Ifx_CAN_KRSTCLR_Bits',0,7,138,1,3
	.word	4373
	.byte	11
	.byte	'_Ifx_CAN_LIST_Bits',0,7,141,1,16,4,27
	.byte	'BEGIN',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'END',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'SIZE',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'EMPTY',0,1
	.word	249
	.byte	1,7,2,35,3,27
	.byte	'reserved_25',0,1
	.word	249
	.byte	7,0,2,35,3,0,26
	.byte	'Ifx_CAN_LIST_Bits',0,7,148,1,3
	.word	4469
	.byte	11
	.byte	'_Ifx_CAN_MCR_Bits',0,7,151,1,16,4,27
	.byte	'CLKSEL',0,1
	.word	249
	.byte	4,4,2,35,0,27
	.byte	'reserved_4',0,2
	.word	757
	.byte	8,4,2,35,0,27
	.byte	'MPSEL',0,1
	.word	249
	.byte	4,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	757
	.byte	16,0,2,35,2,0,26
	.byte	'Ifx_CAN_MCR_Bits',0,7,157,1,3
	.word	4610
	.byte	11
	.byte	'_Ifx_CAN_MECR_Bits',0,7,160,1,16,4,27
	.byte	'TH',0,2
	.word	757
	.byte	16,0,2,35,0,27
	.byte	'INP',0,1
	.word	249
	.byte	4,4,2,35,2,27
	.byte	'NODE',0,1
	.word	249
	.byte	3,1,2,35,2,27
	.byte	'reserved_23',0,1
	.word	249
	.byte	1,0,2,35,2,27
	.byte	'ANYED',0,1
	.word	249
	.byte	1,7,2,35,3,27
	.byte	'CAPEIE',0,1
	.word	249
	.byte	1,6,2,35,3,27
	.byte	'reserved_26',0,1
	.word	249
	.byte	1,5,2,35,3,27
	.byte	'DEPTH',0,1
	.word	249
	.byte	3,2,2,35,3,27
	.byte	'SOF',0,1
	.word	249
	.byte	1,1,2,35,3,27
	.byte	'reserved_31',0,1
	.word	249
	.byte	1,0,2,35,3,0,26
	.byte	'Ifx_CAN_MECR_Bits',0,7,172,1,3
	.word	4741
	.byte	11
	.byte	'_Ifx_CAN_MESTAT_Bits',0,7,175,1,16,4,27
	.byte	'CAPT',0,2
	.word	757
	.byte	16,0,2,35,0,27
	.byte	'CAPRED',0,1
	.word	249
	.byte	1,7,2,35,2,27
	.byte	'CAPE',0,1
	.word	249
	.byte	1,6,2,35,2,27
	.byte	'reserved_18',0,2
	.word	757
	.byte	14,0,2,35,2,0,26
	.byte	'Ifx_CAN_MESTAT_Bits',0,7,181,1,3
	.word	4975
	.byte	11
	.byte	'_Ifx_CAN_MITR_Bits',0,7,184,1,16,4,27
	.byte	'IT',0,2
	.word	757
	.byte	16,0,2,35,0,27
	.byte	'reserved_16',0,2
	.word	757
	.byte	16,0,2,35,2,0,26
	.byte	'Ifx_CAN_MITR_Bits',0,7,188,1,3
	.word	5105
	.byte	11
	.byte	'_Ifx_CAN_MO_AMR_Bits',0,7,191,1,16,4,27
	.byte	'AM',0,4
	.word	3707
	.byte	29,3,2,35,0,27
	.byte	'MIDE',0,1
	.word	249
	.byte	1,2,2,35,3,27
	.byte	'reserved_30',0,1
	.word	249
	.byte	2,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_AMR_Bits',0,7,196,1,3
	.word	5195
	.byte	11
	.byte	'_Ifx_CAN_MO_AR_Bits',0,7,199,1,16,4,27
	.byte	'ID',0,4
	.word	3707
	.byte	29,3,2,35,0,27
	.byte	'IDE',0,1
	.word	249
	.byte	1,2,2,35,3,27
	.byte	'PRI',0,1
	.word	249
	.byte	2,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_AR_Bits',0,7,204,1,3
	.word	5305
	.byte	11
	.byte	'_Ifx_CAN_MO_CTR_Bits',0,7,207,1,16,4,27
	.byte	'RESRXPND',0,1
	.word	249
	.byte	1,7,2,35,0,27
	.byte	'RESTXPND',0,1
	.word	249
	.byte	1,6,2,35,0,27
	.byte	'RESRXUPD',0,1
	.word	249
	.byte	1,5,2,35,0,27
	.byte	'RESNEWDAT',0,1
	.word	249
	.byte	1,4,2,35,0,27
	.byte	'RESMSGLST',0,1
	.word	249
	.byte	1,3,2,35,0,27
	.byte	'RESMSGVAL',0,1
	.word	249
	.byte	1,2,2,35,0,27
	.byte	'RESRTSEL',0,1
	.word	249
	.byte	1,1,2,35,0,27
	.byte	'RESRXEN',0,1
	.word	249
	.byte	1,0,2,35,0,27
	.byte	'RESTXRQ',0,1
	.word	249
	.byte	1,7,2,35,1,27
	.byte	'RESTXEN0',0,1
	.word	249
	.byte	1,6,2,35,1,27
	.byte	'RESTXEN1',0,1
	.word	249
	.byte	1,5,2,35,1,27
	.byte	'RESDIR',0,1
	.word	249
	.byte	1,4,2,35,1,27
	.byte	'reserved_12',0,1
	.word	249
	.byte	4,0,2,35,1,27
	.byte	'SETRXPND',0,1
	.word	249
	.byte	1,7,2,35,2,27
	.byte	'SETTXPND',0,1
	.word	249
	.byte	1,6,2,35,2,27
	.byte	'SETRXUPD',0,1
	.word	249
	.byte	1,5,2,35,2,27
	.byte	'SETNEWDAT',0,1
	.word	249
	.byte	1,4,2,35,2,27
	.byte	'SETMSGLST',0,1
	.word	249
	.byte	1,3,2,35,2,27
	.byte	'SETMSGVAL',0,1
	.word	249
	.byte	1,2,2,35,2,27
	.byte	'SETRTSEL',0,1
	.word	249
	.byte	1,1,2,35,2,27
	.byte	'SETRXEN',0,1
	.word	249
	.byte	1,0,2,35,2,27
	.byte	'SETTXRQ',0,1
	.word	249
	.byte	1,7,2,35,3,27
	.byte	'SETTXEN0',0,1
	.word	249
	.byte	1,6,2,35,3,27
	.byte	'SETTXEN1',0,1
	.word	249
	.byte	1,5,2,35,3,27
	.byte	'SETDIR',0,1
	.word	249
	.byte	1,4,2,35,3,27
	.byte	'reserved_28',0,1
	.word	249
	.byte	4,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_CTR_Bits',0,7,235,1,3
	.word	5404
	.byte	11
	.byte	'_Ifx_CAN_MO_DATAH_Bits',0,7,238,1,16,4,27
	.byte	'DB4',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB5',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB6',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB7',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_DATAH_Bits',0,7,244,1,3
	.word	5985
	.byte	11
	.byte	'_Ifx_CAN_MO_DATAL_Bits',0,7,247,1,16,4,27
	.byte	'DB0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB1',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB2',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB3',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_DATAL_Bits',0,7,253,1,3
	.word	6106
	.byte	11
	.byte	'_Ifx_CAN_MO_EDATA0_Bits',0,7,128,2,16,4,27
	.byte	'DB0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB1',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB2',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB3',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_EDATA0_Bits',0,7,134,2,3
	.word	6227
	.byte	11
	.byte	'_Ifx_CAN_MO_EDATA1_Bits',0,7,137,2,16,4,27
	.byte	'DB0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB1',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB2',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB3',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_EDATA1_Bits',0,7,143,2,3
	.word	6350
	.byte	11
	.byte	'_Ifx_CAN_MO_EDATA2_Bits',0,7,146,2,16,4,27
	.byte	'DB0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB1',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB2',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB3',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_EDATA2_Bits',0,7,152,2,3
	.word	6473
	.byte	11
	.byte	'_Ifx_CAN_MO_EDATA3_Bits',0,7,155,2,16,4,27
	.byte	'DB0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB1',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB2',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB3',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_EDATA3_Bits',0,7,161,2,3
	.word	6596
	.byte	11
	.byte	'_Ifx_CAN_MO_EDATA4_Bits',0,7,164,2,16,4,27
	.byte	'DB0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB1',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB2',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB3',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_EDATA4_Bits',0,7,170,2,3
	.word	6719
	.byte	11
	.byte	'_Ifx_CAN_MO_EDATA5_Bits',0,7,173,2,16,4,27
	.byte	'DB0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB1',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB2',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB3',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_EDATA5_Bits',0,7,179,2,3
	.word	6842
	.byte	11
	.byte	'_Ifx_CAN_MO_EDATA6_Bits',0,7,182,2,16,4,27
	.byte	'DB0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'DB1',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'DB2',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'DB3',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_EDATA6_Bits',0,7,188,2,3
	.word	6965
	.byte	11
	.byte	'_Ifx_CAN_MO_FCR_Bits',0,7,191,2,16,4,27
	.byte	'MMC',0,1
	.word	249
	.byte	4,4,2,35,0,27
	.byte	'RXTOE',0,1
	.word	249
	.byte	1,3,2,35,0,27
	.byte	'BRS',0,1
	.word	249
	.byte	1,2,2,35,0,27
	.byte	'FDF',0,1
	.word	249
	.byte	1,1,2,35,0,27
	.byte	'reserved_7',0,1
	.word	249
	.byte	1,0,2,35,0,27
	.byte	'GDFS',0,1
	.word	249
	.byte	1,7,2,35,1,27
	.byte	'IDC',0,1
	.word	249
	.byte	1,6,2,35,1,27
	.byte	'DLCC',0,1
	.word	249
	.byte	1,5,2,35,1,27
	.byte	'DATC',0,1
	.word	249
	.byte	1,4,2,35,1,27
	.byte	'reserved_12',0,1
	.word	249
	.byte	4,0,2,35,1,27
	.byte	'RXIE',0,1
	.word	249
	.byte	1,7,2,35,2,27
	.byte	'TXIE',0,1
	.word	249
	.byte	1,6,2,35,2,27
	.byte	'OVIE',0,1
	.word	249
	.byte	1,5,2,35,2,27
	.byte	'reserved_19',0,1
	.word	249
	.byte	1,4,2,35,2,27
	.byte	'FRREN',0,1
	.word	249
	.byte	1,3,2,35,2,27
	.byte	'RMM',0,1
	.word	249
	.byte	1,2,2,35,2,27
	.byte	'SDT',0,1
	.word	249
	.byte	1,1,2,35,2,27
	.byte	'STT',0,1
	.word	249
	.byte	1,0,2,35,2,27
	.byte	'DLC',0,1
	.word	249
	.byte	4,4,2,35,3,27
	.byte	'reserved_28',0,1
	.word	249
	.byte	4,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_FCR_Bits',0,7,213,2,3
	.word	7088
	.byte	11
	.byte	'_Ifx_CAN_MO_FGPR_Bits',0,7,216,2,16,4,27
	.byte	'BOT',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'TOP',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'CUR',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'SEL',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_FGPR_Bits',0,7,222,2,3
	.word	7486
	.byte	11
	.byte	'_Ifx_CAN_MO_IPR_Bits',0,7,225,2,16,4,27
	.byte	'RXINP',0,1
	.word	249
	.byte	4,4,2,35,0,27
	.byte	'TXINP',0,1
	.word	249
	.byte	4,0,2,35,0,27
	.byte	'MPN',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'CFCVAL',0,2
	.word	757
	.byte	16,0,2,35,2,0,26
	.byte	'Ifx_CAN_MO_IPR_Bits',0,7,231,2,3
	.word	7605
	.byte	11
	.byte	'_Ifx_CAN_MO_STAT_Bits',0,7,234,2,16,4,27
	.byte	'RXPND',0,1
	.word	249
	.byte	1,7,2,35,0,27
	.byte	'TXPND',0,1
	.word	249
	.byte	1,6,2,35,0,27
	.byte	'RXUPD',0,1
	.word	249
	.byte	1,5,2,35,0,27
	.byte	'NEWDAT',0,1
	.word	249
	.byte	1,4,2,35,0,27
	.byte	'MSGLST',0,1
	.word	249
	.byte	1,3,2,35,0,27
	.byte	'MSGVAL',0,1
	.word	249
	.byte	1,2,2,35,0,27
	.byte	'RTSEL',0,1
	.word	249
	.byte	1,1,2,35,0,27
	.byte	'RXEN',0,1
	.word	249
	.byte	1,0,2,35,0,27
	.byte	'TXRQ',0,1
	.word	249
	.byte	1,7,2,35,1,27
	.byte	'TXEN0',0,1
	.word	249
	.byte	1,6,2,35,1,27
	.byte	'TXEN1',0,1
	.word	249
	.byte	1,5,2,35,1,27
	.byte	'DIR',0,1
	.word	249
	.byte	1,4,2,35,1,27
	.byte	'LIST',0,1
	.word	249
	.byte	4,0,2,35,1,27
	.byte	'PPREV',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'PNEXT',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_MO_STAT_Bits',0,7,251,2,3
	.word	7729
	.byte	11
	.byte	'_Ifx_CAN_MSID_Bits',0,7,254,2,16,4,27
	.byte	'INDEX',0,1
	.word	249
	.byte	6,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	3707
	.byte	26,0,2,35,0,0,26
	.byte	'Ifx_CAN_MSID_Bits',0,7,130,3,3
	.word	8041
	.byte	11
	.byte	'_Ifx_CAN_MSIMASK_Bits',0,7,133,3,16,4,27
	.byte	'IM',0,4
	.word	3707
	.byte	32,0,2,35,0,0,26
	.byte	'Ifx_CAN_MSIMASK_Bits',0,7,136,3,3
	.word	8133
	.byte	11
	.byte	'_Ifx_CAN_MSPND_Bits',0,7,139,3,16,4,27
	.byte	'PND',0,4
	.word	3707
	.byte	32,0,2,35,0,0,26
	.byte	'Ifx_CAN_MSPND_Bits',0,7,142,3,3
	.word	8206
	.byte	11
	.byte	'_Ifx_CAN_N_BTEVR_Bits',0,7,145,3,16,4,27
	.byte	'BRP',0,1
	.word	249
	.byte	6,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	249
	.byte	2,0,2,35,0,27
	.byte	'SJW',0,1
	.word	249
	.byte	4,4,2,35,1,27
	.byte	'reserved_12',0,1
	.word	249
	.byte	3,1,2,35,1,27
	.byte	'DIV8',0,1
	.word	249
	.byte	1,0,2,35,1,27
	.byte	'TSEG2',0,1
	.word	249
	.byte	5,3,2,35,2,27
	.byte	'reserved_21',0,1
	.word	249
	.byte	1,2,2,35,2,27
	.byte	'TSEG1',0,2
	.word	757
	.byte	6,4,2,35,2,27
	.byte	'reserved_28',0,1
	.word	249
	.byte	4,0,2,35,3,0,26
	.byte	'Ifx_CAN_N_BTEVR_Bits',0,7,156,3,3
	.word	8276
	.byte	11
	.byte	'_Ifx_CAN_N_BTR_Bits',0,7,159,3,16,4,27
	.byte	'BRP',0,1
	.word	249
	.byte	6,2,2,35,0,27
	.byte	'SJW',0,1
	.word	249
	.byte	2,0,2,35,0,27
	.byte	'TSEG1',0,1
	.word	249
	.byte	4,4,2,35,1,27
	.byte	'TSEG2',0,1
	.word	249
	.byte	3,1,2,35,1,27
	.byte	'DIV8',0,1
	.word	249
	.byte	1,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	757
	.byte	16,0,2,35,2,0,26
	.byte	'Ifx_CAN_N_BTR_Bits',0,7,167,3,3
	.word	8506
	.byte	11
	.byte	'_Ifx_CAN_N_CR_Bits',0,7,170,3,16,4,27
	.byte	'INIT',0,1
	.word	249
	.byte	1,7,2,35,0,27
	.byte	'TRIE',0,1
	.word	249
	.byte	1,6,2,35,0,27
	.byte	'LECIE',0,1
	.word	249
	.byte	1,5,2,35,0,27
	.byte	'ALIE',0,1
	.word	249
	.byte	1,4,2,35,0,27
	.byte	'CANDIS',0,1
	.word	249
	.byte	1,3,2,35,0,27
	.byte	'TXDIS',0,1
	.word	249
	.byte	1,2,2,35,0,27
	.byte	'CCE',0,1
	.word	249
	.byte	1,1,2,35,0,27
	.byte	'CALM',0,1
	.word	249
	.byte	1,0,2,35,0,27
	.byte	'SUSEN',0,1
	.word	249
	.byte	1,7,2,35,1,27
	.byte	'FDEN',0,1
	.word	249
	.byte	1,6,2,35,1,27
	.byte	'reserved_10',0,4
	.word	3707
	.byte	22,0,2,35,0,0,26
	.byte	'Ifx_CAN_N_CR_Bits',0,7,183,3,3
	.word	8664
	.byte	11
	.byte	'_Ifx_CAN_N_ECNT_Bits',0,7,186,3,16,4,27
	.byte	'REC',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'TEC',0,1
	.word	249
	.byte	8,0,2,35,1,27
	.byte	'EWRNLVL',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'LETD',0,1
	.word	249
	.byte	1,7,2,35,3,27
	.byte	'LEINC',0,1
	.word	249
	.byte	1,6,2,35,3,27
	.byte	'reserved_26',0,1
	.word	249
	.byte	6,0,2,35,3,0,26
	.byte	'Ifx_CAN_N_ECNT_Bits',0,7,194,3,3
	.word	8904
	.byte	11
	.byte	'_Ifx_CAN_N_FBTR_Bits',0,7,197,3,16,4,27
	.byte	'FBRP',0,1
	.word	249
	.byte	6,2,2,35,0,27
	.byte	'FSJW',0,1
	.word	249
	.byte	2,0,2,35,0,27
	.byte	'FTSEG1',0,1
	.word	249
	.byte	4,4,2,35,1,27
	.byte	'FTSEG2',0,1
	.word	249
	.byte	3,1,2,35,1,27
	.byte	'reserved_15',0,4
	.word	3707
	.byte	17,0,2,35,0,0,26
	.byte	'Ifx_CAN_N_FBTR_Bits',0,7,204,3,3
	.word	9066
	.byte	11
	.byte	'_Ifx_CAN_N_FCR_Bits',0,7,207,3,16,4,27
	.byte	'CFC',0,2
	.word	757
	.byte	16,0,2,35,0,27
	.byte	'CFSEL',0,1
	.word	249
	.byte	3,5,2,35,2,27
	.byte	'CFMOD',0,1
	.word	249
	.byte	2,3,2,35,2,27
	.byte	'reserved_21',0,1
	.word	249
	.byte	1,2,2,35,2,27
	.byte	'CFCIE',0,1
	.word	249
	.byte	1,1,2,35,2,27
	.byte	'CFCOV',0,1
	.word	249
	.byte	1,0,2,35,2,27
	.byte	'reserved_24',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_N_FCR_Bits',0,7,216,3,3
	.word	9214
	.byte	11
	.byte	'_Ifx_CAN_N_IPR_Bits',0,7,219,3,16,4,27
	.byte	'ALINP',0,1
	.word	249
	.byte	4,4,2,35,0,27
	.byte	'LECINP',0,1
	.word	249
	.byte	4,0,2,35,0,27
	.byte	'TRINP',0,1
	.word	249
	.byte	4,4,2,35,1,27
	.byte	'CFCINP',0,1
	.word	249
	.byte	4,0,2,35,1,27
	.byte	'TEINP',0,1
	.word	249
	.byte	4,4,2,35,2,27
	.byte	'reserved_20',0,2
	.word	757
	.byte	12,0,2,35,2,0,26
	.byte	'Ifx_CAN_N_IPR_Bits',0,7,227,3,3
	.word	9398
	.byte	11
	.byte	'_Ifx_CAN_N_PCR_Bits',0,7,230,3,16,4,27
	.byte	'RXSEL',0,1
	.word	249
	.byte	3,5,2,35,0,27
	.byte	'reserved_3',0,1
	.word	249
	.byte	5,0,2,35,0,27
	.byte	'LBM',0,1
	.word	249
	.byte	1,7,2,35,1,27
	.byte	'reserved_9',0,4
	.word	3707
	.byte	23,0,2,35,0,0,26
	.byte	'Ifx_CAN_N_PCR_Bits',0,7,236,3,3
	.word	9563
	.byte	11
	.byte	'_Ifx_CAN_N_SR_Bits',0,7,239,3,16,4,27
	.byte	'LEC',0,1
	.word	249
	.byte	3,5,2,35,0,27
	.byte	'TXOK',0,1
	.word	249
	.byte	1,4,2,35,0,27
	.byte	'RXOK',0,1
	.word	249
	.byte	1,3,2,35,0,27
	.byte	'ALERT',0,1
	.word	249
	.byte	1,2,2,35,0,27
	.byte	'EWRN',0,1
	.word	249
	.byte	1,1,2,35,0,27
	.byte	'BOFF',0,1
	.word	249
	.byte	1,0,2,35,0,27
	.byte	'LLE',0,1
	.word	249
	.byte	1,7,2,35,1,27
	.byte	'LOE',0,1
	.word	249
	.byte	1,6,2,35,1,27
	.byte	'SUSACK',0,1
	.word	249
	.byte	1,5,2,35,1,27
	.byte	'RESI',0,1
	.word	249
	.byte	1,4,2,35,1,27
	.byte	'FLEC',0,1
	.word	249
	.byte	3,1,2,35,1,27
	.byte	'reserved_15',0,4
	.word	3707
	.byte	17,0,2,35,0,0,26
	.byte	'Ifx_CAN_N_SR_Bits',0,7,253,3,3
	.word	9694
	.byte	11
	.byte	'_Ifx_CAN_N_TCCR_Bits',0,7,128,4,16,4,27
	.byte	'reserved_0',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'TPSC',0,1
	.word	249
	.byte	4,4,2,35,1,27
	.byte	'reserved_12',0,4
	.word	3707
	.byte	6,14,2,35,0,27
	.byte	'TRIGSRC',0,1
	.word	249
	.byte	3,3,2,35,2,27
	.byte	'reserved_21',0,2
	.word	757
	.byte	11,0,2,35,2,0,26
	.byte	'Ifx_CAN_N_TCCR_Bits',0,7,135,4,3
	.word	9946
	.byte	11
	.byte	'_Ifx_CAN_N_TDCR_Bits',0,7,138,4,16,4,27
	.byte	'TDCV',0,1
	.word	249
	.byte	5,3,2,35,0,27
	.byte	'reserved_5',0,1
	.word	249
	.byte	3,0,2,35,0,27
	.byte	'TDCO',0,1
	.word	249
	.byte	4,4,2,35,1,27
	.byte	'reserved_12',0,1
	.word	249
	.byte	3,1,2,35,1,27
	.byte	'TDC',0,1
	.word	249
	.byte	1,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	757
	.byte	16,0,2,35,2,0,26
	.byte	'Ifx_CAN_N_TDCR_Bits',0,7,146,4,3
	.word	10106
	.byte	11
	.byte	'_Ifx_CAN_N_TRTR_Bits',0,7,149,4,16,4,27
	.byte	'RELOAD',0,2
	.word	757
	.byte	16,0,2,35,0,27
	.byte	'reserved_16',0,1
	.word	249
	.byte	6,2,2,35,2,27
	.byte	'TEIE',0,1
	.word	249
	.byte	1,1,2,35,2,27
	.byte	'TE',0,1
	.word	249
	.byte	1,0,2,35,2,27
	.byte	'reserved_24',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_N_TRTR_Bits',0,7,156,4,3
	.word	10278
	.byte	11
	.byte	'_Ifx_CAN_N_TTTR_Bits',0,7,159,4,16,4,27
	.byte	'RELOAD',0,2
	.word	757
	.byte	16,0,2,35,0,27
	.byte	'TXMO',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'STRT',0,1
	.word	249
	.byte	1,7,2,35,3,27
	.byte	'reserved_25',0,1
	.word	249
	.byte	7,0,2,35,3,0,26
	.byte	'Ifx_CAN_N_TTTR_Bits',0,7,165,4,3
	.word	10429
	.byte	11
	.byte	'_Ifx_CAN_OCS_Bits',0,7,168,4,16,4,27
	.byte	'TGS',0,1
	.word	249
	.byte	2,6,2,35,0,27
	.byte	'TGB',0,1
	.word	249
	.byte	1,5,2,35,0,27
	.byte	'TG_P',0,1
	.word	249
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,4
	.word	3707
	.byte	20,8,2,35,0,27
	.byte	'SUS',0,1
	.word	249
	.byte	4,4,2,35,3,27
	.byte	'SUS_P',0,1
	.word	249
	.byte	1,3,2,35,3,27
	.byte	'SUSSTA',0,1
	.word	249
	.byte	1,2,2,35,3,27
	.byte	'reserved_30',0,1
	.word	249
	.byte	2,0,2,35,3,0,26
	.byte	'Ifx_CAN_OCS_Bits',0,7,178,4,3
	.word	10559
	.byte	11
	.byte	'_Ifx_CAN_PANCTR_Bits',0,7,181,4,16,4,27
	.byte	'PANCMD',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'BUSY',0,1
	.word	249
	.byte	1,7,2,35,1,27
	.byte	'RBUSY',0,1
	.word	249
	.byte	1,6,2,35,1,27
	.byte	'reserved_10',0,1
	.word	249
	.byte	6,0,2,35,1,27
	.byte	'PANAR1',0,1
	.word	249
	.byte	8,0,2,35,2,27
	.byte	'PANAR2',0,1
	.word	249
	.byte	8,0,2,35,3,0,26
	.byte	'Ifx_CAN_PANCTR_Bits',0,7,189,4,3
	.word	10751
	.byte	4
	.byte	'int',0,4,5,28,7,197,4,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3150
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_ACCEN0',0,7,202,4,3
	.word	10925
	.byte	28,7,205,4,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3723
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_ACCEN1',0,7,210,4,3
	.word	10989
	.byte	28,7,213,4,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3800
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_CLC',0,7,218,4,3
	.word	11053
	.byte	28,7,221,4,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3941
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_FDR',0,7,226,4,3
	.word	11114
	.byte	28,7,229,4,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4066
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_ID',0,7,234,4,3
	.word	11175
	.byte	28,7,237,4,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4173
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_KRST0',0,7,242,4,3
	.word	11235
	.byte	28,7,245,4,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4282
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_KRST1',0,7,250,4,3
	.word	11298
	.byte	28,7,253,4,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4373
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_KRSTCLR',0,7,130,5,3
	.word	11361
	.byte	28,7,133,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4469
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_LIST',0,7,138,5,3
	.word	11426
	.byte	28,7,141,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4610
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MCR',0,7,146,5,3
	.word	11488
	.byte	28,7,149,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4741
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MECR',0,7,154,5,3
	.word	11549
	.byte	28,7,157,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4975
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MESTAT',0,7,162,5,3
	.word	11611
	.byte	28,7,165,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5105
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MITR',0,7,170,5,3
	.word	11675
	.byte	28,7,173,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5195
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_AMR',0,7,178,5,3
	.word	11737
	.byte	28,7,181,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5305
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_AR',0,7,186,5,3
	.word	11801
	.byte	28,7,189,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5404
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_CTR',0,7,194,5,3
	.word	11864
	.byte	28,7,197,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5985
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_DATAH',0,7,202,5,3
	.word	11928
	.byte	28,7,205,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6106
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_DATAL',0,7,210,5,3
	.word	11994
	.byte	28,7,213,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6227
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_EDATA0',0,7,218,5,3
	.word	12060
	.byte	28,7,221,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6350
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_EDATA1',0,7,226,5,3
	.word	12127
	.byte	28,7,229,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6473
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_EDATA2',0,7,234,5,3
	.word	12194
	.byte	28,7,237,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6596
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_EDATA3',0,7,242,5,3
	.word	12261
	.byte	28,7,245,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6719
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_EDATA4',0,7,250,5,3
	.word	12328
	.byte	28,7,253,5,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6842
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_EDATA5',0,7,130,6,3
	.word	12395
	.byte	28,7,133,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6965
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_EDATA6',0,7,138,6,3
	.word	12462
	.byte	28,7,141,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7088
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_FCR',0,7,146,6,3
	.word	12529
	.byte	28,7,149,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7486
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_FGPR',0,7,154,6,3
	.word	12593
	.byte	28,7,157,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7605
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_IPR',0,7,162,6,3
	.word	12658
	.byte	28,7,165,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7729
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MO_STAT',0,7,170,6,3
	.word	12722
	.byte	28,7,173,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8041
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MSID',0,7,178,6,3
	.word	12787
	.byte	28,7,181,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8133
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MSIMASK',0,7,186,6,3
	.word	12849
	.byte	28,7,189,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8206
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_MSPND',0,7,194,6,3
	.word	12914
	.byte	28,7,197,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8276
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_BTEVR',0,7,202,6,3
	.word	12977
	.byte	28,7,205,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8506
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_BTR',0,7,210,6,3
	.word	13042
	.byte	28,7,213,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8664
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_CR',0,7,218,6,3
	.word	13105
	.byte	28,7,221,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8904
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_ECNT',0,7,226,6,3
	.word	13167
	.byte	28,7,229,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9066
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_FBTR',0,7,234,6,3
	.word	13231
	.byte	28,7,237,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9214
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_FCR',0,7,242,6,3
	.word	13295
	.byte	28,7,245,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9398
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_IPR',0,7,250,6,3
	.word	13358
	.byte	28,7,253,6,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9563
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_PCR',0,7,130,7,3
	.word	13421
	.byte	28,7,133,7,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9694
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_SR',0,7,138,7,3
	.word	13484
	.byte	28,7,141,7,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9946
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_TCCR',0,7,146,7,3
	.word	13546
	.byte	28,7,149,7,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10106
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_TDCR',0,7,154,7,3
	.word	13610
	.byte	28,7,157,7,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10278
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_TRTR',0,7,162,7,3
	.word	13674
	.byte	28,7,165,7,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10429
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_N_TTTR',0,7,170,7,3
	.word	13738
	.byte	28,7,173,7,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10559
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_OCS',0,7,178,7,3
	.word	13802
	.byte	28,7,181,7,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10751
	.byte	4,2,35,0,0,26
	.byte	'Ifx_CAN_PANCTR',0,7,186,7,3
	.word	13863
	.byte	28,7,199,7,5,4,12
	.byte	'EDATA0',0
	.word	12060
	.byte	4,2,35,0,12
	.byte	'FCR',0
	.word	12529
	.byte	4,2,35,0,0,28,7,205,7,5,4,12
	.byte	'EDATA1',0
	.word	12127
	.byte	4,2,35,0,12
	.byte	'FGPR',0
	.word	12593
	.byte	4,2,35,0,0,28,7,211,7,5,4,12
	.byte	'EDATA2',0
	.word	12194
	.byte	4,2,35,0,12
	.byte	'IPR',0
	.word	12658
	.byte	4,2,35,0,0,28,7,217,7,5,4,12
	.byte	'AMR',0
	.word	11737
	.byte	4,2,35,0,12
	.byte	'EDATA3',0
	.word	12261
	.byte	4,2,35,0,0,28,7,223,7,5,4,12
	.byte	'DATAL',0
	.word	11994
	.byte	4,2,35,0,12
	.byte	'EDATA4',0
	.word	12328
	.byte	4,2,35,0,0,28,7,229,7,5,4,12
	.byte	'DATAH',0
	.word	11928
	.byte	4,2,35,0,12
	.byte	'EDATA5',0
	.word	12395
	.byte	4,2,35,0,0,28,7,235,7,5,4,12
	.byte	'AR',0
	.word	11801
	.byte	4,2,35,0,12
	.byte	'EDATA6',0
	.word	12462
	.byte	4,2,35,0,0,28,7,241,7,5,4,12
	.byte	'CTR',0
	.word	11864
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	12722
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CAN_MO',0,7,197,7,25,32,29
	.word	13927
	.byte	4,2,35,0,29
	.word	13963
	.byte	4,2,35,4,29
	.word	14000
	.byte	4,2,35,8,29
	.word	14036
	.byte	4,2,35,12,29
	.word	14072
	.byte	4,2,35,16,29
	.word	14110
	.byte	4,2,35,20,29
	.word	14148
	.byte	4,2,35,24,29
	.word	14183
	.byte	4,2,35,28,0,17
	.word	14217
	.byte	26
	.byte	'Ifx_CAN_MO',0,7,247,7,3
	.word	14308
	.byte	28,7,128,8,5,4,12
	.byte	'BTEVR',0
	.word	12977
	.byte	4,2,35,0,12
	.byte	'BTR',0
	.word	13042
	.byte	4,2,35,0,0,15,8
	.word	249
	.byte	16,7,0,15,192,1
	.word	249
	.byte	16,191,1,0,11
	.byte	'_Ifx_CAN_N',0,7,250,7,25,128,2,12
	.byte	'CR',0
	.word	13105
	.byte	4,2,35,0,12
	.byte	'SR',0
	.word	13484
	.byte	4,2,35,4,12
	.byte	'IPR',0
	.word	13358
	.byte	4,2,35,8,12
	.byte	'PCR',0
	.word	13421
	.byte	4,2,35,12,29
	.word	14333
	.byte	4,2,35,16,12
	.byte	'ECNT',0
	.word	13167
	.byte	4,2,35,20,12
	.byte	'FCR',0
	.word	13295
	.byte	4,2,35,24,12
	.byte	'TCCR',0
	.word	13546
	.byte	4,2,35,28,12
	.byte	'TRTR',0
	.word	13674
	.byte	4,2,35,32,12
	.byte	'TATTR',0
	.word	13738
	.byte	4,2,35,36,12
	.byte	'TBTTR',0
	.word	13738
	.byte	4,2,35,40,12
	.byte	'TCTTR',0
	.word	13738
	.byte	4,2,35,44,12
	.byte	'reserved_30',0
	.word	14368
	.byte	8,2,35,48,12
	.byte	'FBTR',0
	.word	13231
	.byte	4,2,35,56,12
	.byte	'TDCR',0
	.word	13610
	.byte	4,2,35,60,12
	.byte	'reserved_40',0
	.word	14377
	.byte	192,1,2,35,64,0,17
	.word	14388
	.byte	26
	.byte	'Ifx_CAN_N',0,7,145,8,3
	.word	14637
	.byte	15,4
	.word	249
	.byte	16,3,0,15,216,1
	.word	249
	.byte	16,215,1,0,15,64
	.word	11426
	.byte	16,15,0,15,32
	.word	12914
	.byte	16,7,0,15,32
	.word	249
	.byte	16,31,0,15,32
	.word	12787
	.byte	16,7,0,15,40
	.word	249
	.byte	16,39,0,15,128,8
	.word	14388
	.byte	16,3,0,17
	.word	14726
	.byte	15,128,20
	.word	249
	.byte	16,255,19,0,15,128,64
	.word	14217
	.byte	16,255,1,0,17
	.word	14752
	.byte	15,128,32
	.word	249
	.byte	16,255,31,0,11
	.byte	'_Ifx_CAN',0,7,158,8,25,128,128,1,12
	.byte	'CLC',0
	.word	11053
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	14661
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	11175
	.byte	4,2,35,8,12
	.byte	'FDR',0
	.word	11114
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	14670
	.byte	216,1,2,35,16,12
	.byte	'OCS',0
	.word	13802
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	11361
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	11298
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	11235
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	10989
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	10925
	.byte	4,3,35,252,1,12
	.byte	'LIST',0
	.word	14681
	.byte	64,3,35,128,2,12
	.byte	'MSPND',0
	.word	14690
	.byte	32,3,35,192,2,12
	.byte	'reserved_160',0
	.word	14699
	.byte	32,3,35,224,2,12
	.byte	'MSID',0
	.word	14708
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	14699
	.byte	32,3,35,160,3,12
	.byte	'MSIMASK',0
	.word	12849
	.byte	4,3,35,192,3,12
	.byte	'PANCTR',0
	.word	13863
	.byte	4,3,35,196,3,12
	.byte	'MCR',0
	.word	11488
	.byte	4,3,35,200,3,12
	.byte	'MITR',0
	.word	11675
	.byte	4,3,35,204,3,12
	.byte	'MECR',0
	.word	11549
	.byte	4,3,35,208,3,12
	.byte	'MESTAT',0
	.word	11611
	.byte	4,3,35,212,3,12
	.byte	'reserved_1D8',0
	.word	14717
	.byte	40,3,35,216,3,12
	.byte	'N',0
	.word	14736
	.byte	128,8,3,35,128,4,12
	.byte	'reserved_600',0
	.word	14741
	.byte	128,20,3,35,128,12,12
	.byte	'MO',0
	.word	14763
	.byte	128,64,3,35,128,32,12
	.byte	'reserved_3000',0
	.word	14768
	.byte	128,32,3,35,128,96,0,17
	.word	14779
	.byte	26
	.byte	'Ifx_CAN',0,7,187,8,3
	.word	15262
	.byte	11
	.byte	'_Ifx_SRC_SRCR_Bits',0,8,45,16,4,27
	.byte	'SRPN',0,1
	.word	249
	.byte	8,0,2,35,0,27
	.byte	'reserved_8',0,1
	.word	249
	.byte	2,6,2,35,1,27
	.byte	'SRE',0,1
	.word	249
	.byte	1,5,2,35,1,27
	.byte	'TOS',0,1
	.word	249
	.byte	2,3,2,35,1,27
	.byte	'reserved_13',0,1
	.word	249
	.byte	3,0,2,35,1,27
	.byte	'ECC',0,1
	.word	249
	.byte	6,2,2,35,2,27
	.byte	'reserved_22',0,1
	.word	249
	.byte	2,0,2,35,2,27
	.byte	'SRR',0,1
	.word	249
	.byte	1,7,2,35,3,27
	.byte	'CLRR',0,1
	.word	249
	.byte	1,6,2,35,3,27
	.byte	'SETR',0,1
	.word	249
	.byte	1,5,2,35,3,27
	.byte	'IOV',0,1
	.word	249
	.byte	1,4,2,35,3,27
	.byte	'IOVCLR',0,1
	.word	249
	.byte	1,3,2,35,3,27
	.byte	'SWS',0,1
	.word	249
	.byte	1,2,2,35,3,27
	.byte	'SWSCLR',0,1
	.word	249
	.byte	1,1,2,35,3,27
	.byte	'reserved_31',0,1
	.word	249
	.byte	1,0,2,35,3,0,26
	.byte	'Ifx_SRC_SRCR_Bits',0,8,62,3
	.word	15284
	.byte	28,8,70,9,4,12
	.byte	'U',0
	.word	3707
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	10918
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15284
	.byte	4,2,35,0,0,26
	.byte	'Ifx_SRC_SRCR',0,8,75,3
	.word	15600
	.byte	11
	.byte	'_Ifx_SRC_AGBT',0,8,86,25,4,12
	.byte	'SR',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	15660
	.byte	26
	.byte	'Ifx_SRC_AGBT',0,8,89,3
	.word	15692
	.byte	11
	.byte	'_Ifx_SRC_ASCLIN',0,8,92,25,12,12
	.byte	'TX',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	15600
	.byte	4,2,35,8,0,17
	.word	15718
	.byte	26
	.byte	'Ifx_SRC_ASCLIN',0,8,97,3
	.word	15777
	.byte	11
	.byte	'_Ifx_SRC_BCUSPB',0,8,100,25,4,12
	.byte	'SBSRC',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	15805
	.byte	26
	.byte	'Ifx_SRC_BCUSPB',0,8,103,3
	.word	15842
	.byte	15,64
	.word	15600
	.byte	16,15,0,11
	.byte	'_Ifx_SRC_CAN',0,8,106,25,64,12
	.byte	'INT',0
	.word	15870
	.byte	64,2,35,0,0,17
	.word	15879
	.byte	26
	.byte	'Ifx_SRC_CAN',0,8,109,3
	.word	15911
	.byte	11
	.byte	'_Ifx_SRC_CCU6',0,8,112,25,16,12
	.byte	'SR0',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	15600
	.byte	4,2,35,12,0,17
	.word	15936
	.byte	26
	.byte	'Ifx_SRC_CCU6',0,8,118,3
	.word	16008
	.byte	15,8
	.word	15600
	.byte	16,1,0,11
	.byte	'_Ifx_SRC_CERBERUS',0,8,121,25,8,12
	.byte	'SR',0
	.word	16034
	.byte	8,2,35,0,0,17
	.word	16043
	.byte	26
	.byte	'Ifx_SRC_CERBERUS',0,8,124,3
	.word	16079
	.byte	11
	.byte	'_Ifx_SRC_CIF',0,8,127,25,16,12
	.byte	'MI',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'MIEP',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'ISP',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'MJPEG',0
	.word	15600
	.byte	4,2,35,12,0,17
	.word	16109
	.byte	26
	.byte	'Ifx_SRC_CIF',0,8,133,1,3
	.word	16182
	.byte	11
	.byte	'_Ifx_SRC_CPU',0,8,136,1,25,4,12
	.byte	'SBSRC',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	16208
	.byte	26
	.byte	'Ifx_SRC_CPU',0,8,139,1,3
	.word	16243
	.byte	15,24
	.word	15600
	.byte	16,5,0,11
	.byte	'_Ifx_SRC_DAM',0,8,142,1,25,24,12
	.byte	'SR',0
	.word	16269
	.byte	24,2,35,0,0,17
	.word	16278
	.byte	26
	.byte	'Ifx_SRC_DAM',0,8,145,1,3
	.word	16310
	.byte	15,12
	.word	249
	.byte	16,11,0,15,128,2
	.word	15600
	.byte	16,63,0,11
	.byte	'_Ifx_SRC_DMA',0,8,148,1,25,144,2,12
	.byte	'ERR',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	16336
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	16345
	.byte	128,2,2,35,16,0,17
	.word	16355
	.byte	26
	.byte	'Ifx_SRC_DMA',0,8,153,1,3
	.word	16422
	.byte	11
	.byte	'_Ifx_SRC_DSADC',0,8,156,1,25,8,12
	.byte	'SRM',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'SRA',0
	.word	15600
	.byte	4,2,35,4,0,17
	.word	16448
	.byte	26
	.byte	'Ifx_SRC_DSADC',0,8,160,1,3
	.word	16496
	.byte	11
	.byte	'_Ifx_SRC_EMEM',0,8,163,1,25,4,12
	.byte	'SR',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	16524
	.byte	26
	.byte	'Ifx_SRC_EMEM',0,8,166,1,3
	.word	16557
	.byte	11
	.byte	'_Ifx_SRC_ERAY',0,8,169,1,25,80,12
	.byte	'INT',0
	.word	16034
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	16034
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	16034
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	16034
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	15600
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	15600
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	14717
	.byte	40,2,35,40,0,17
	.word	16584
	.byte	26
	.byte	'Ifx_SRC_ERAY',0,8,178,1,3
	.word	16711
	.byte	11
	.byte	'_Ifx_SRC_ETH',0,8,181,1,25,4,12
	.byte	'SR',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	16738
	.byte	26
	.byte	'Ifx_SRC_ETH',0,8,184,1,3
	.word	16770
	.byte	11
	.byte	'_Ifx_SRC_FCE',0,8,187,1,25,4,12
	.byte	'SR',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	16796
	.byte	26
	.byte	'Ifx_SRC_FCE',0,8,190,1,3
	.word	16828
	.byte	15,16
	.word	249
	.byte	16,15,0,11
	.byte	'_Ifx_SRC_GPSR',0,8,193,1,25,32,12
	.byte	'SR0',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	15600
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	16854
	.byte	16,2,35,16,0,17
	.word	16863
	.byte	26
	.byte	'Ifx_SRC_GPSR',0,8,200,1,3
	.word	16957
	.byte	15,24
	.word	249
	.byte	16,23,0,11
	.byte	'_Ifx_SRC_GPT12',0,8,203,1,25,48,12
	.byte	'CIRQ',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	15600
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	15600
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	15600
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	16984
	.byte	24,2,35,24,0,17
	.word	16993
	.byte	26
	.byte	'Ifx_SRC_GPT12',0,8,212,1,3
	.word	17110
	.byte	15,12
	.word	15600
	.byte	16,2,0,15,32
	.word	15600
	.byte	16,7,0,15,32
	.word	17147
	.byte	16,0,0,15,88
	.word	249
	.byte	16,87,0,15,108
	.word	15600
	.byte	16,26,0,15,96
	.word	249
	.byte	16,95,0,15,128,1
	.word	17147
	.byte	16,3,0,15,128,3
	.word	249
	.byte	16,255,2,0,15,96
	.word	17147
	.byte	16,2,0,15,160,3
	.word	249
	.byte	16,159,3,0,15,16
	.word	15600
	.byte	16,3,0,15,80
	.word	17233
	.byte	16,4,0,15,176,2
	.word	249
	.byte	16,175,2,0,15,48
	.word	249
	.byte	16,47,0,11
	.byte	'_Ifx_SRC_GTM',0,8,215,1,25,208,18,12
	.byte	'AEIIRQ',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'ARUIRQ',0
	.word	17138
	.byte	12,2,35,4,12
	.byte	'reserved_10',0
	.word	14661
	.byte	4,2,35,16,12
	.byte	'BRCIRQ',0
	.word	15600
	.byte	4,2,35,20,12
	.byte	'CMPIRQ',0
	.word	15600
	.byte	4,2,35,24,12
	.byte	'SPEIRQ',0
	.word	16034
	.byte	8,2,35,28,12
	.byte	'reserved_24',0
	.word	14368
	.byte	8,2,35,36,12
	.byte	'PSM',0
	.word	17156
	.byte	32,2,35,44,12
	.byte	'reserved_4C',0
	.word	17165
	.byte	88,2,35,76,12
	.byte	'DPLL',0
	.word	17174
	.byte	108,3,35,164,1,12
	.byte	'reserved_110',0
	.word	17183
	.byte	96,3,35,144,2,12
	.byte	'ERR',0
	.word	15600
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	16336
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	17192
	.byte	128,1,3,35,128,3,12
	.byte	'reserved_200',0
	.word	17202
	.byte	128,3,3,35,128,4,12
	.byte	'MCS',0
	.word	17192
	.byte	128,1,3,35,128,7,12
	.byte	'reserved_400',0
	.word	17202
	.byte	128,3,3,35,128,8,12
	.byte	'TOM',0
	.word	17213
	.byte	96,3,35,128,11,12
	.byte	'reserved_5E0',0
	.word	17222
	.byte	160,3,3,35,224,11,12
	.byte	'ATOM',0
	.word	17242
	.byte	80,3,35,128,15,12
	.byte	'reserved_7D0',0
	.word	17251
	.byte	176,2,3,35,208,15,12
	.byte	'MCSW0',0
	.word	17233
	.byte	16,3,35,128,18,12
	.byte	'reserved_910',0
	.word	17262
	.byte	48,3,35,144,18,12
	.byte	'MCSW1',0
	.word	17233
	.byte	16,3,35,192,18,0,17
	.word	17271
	.byte	26
	.byte	'Ifx_SRC_GTM',0,8,241,1,3
	.word	17733
	.byte	11
	.byte	'_Ifx_SRC_HSCT',0,8,244,1,25,4,12
	.byte	'SR',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	17759
	.byte	26
	.byte	'Ifx_SRC_HSCT',0,8,247,1,3
	.word	17792
	.byte	11
	.byte	'_Ifx_SRC_HSM',0,8,250,1,25,8,12
	.byte	'HSM',0
	.word	16034
	.byte	8,2,35,0,0,17
	.word	17819
	.byte	26
	.byte	'Ifx_SRC_HSM',0,8,253,1,3
	.word	17852
	.byte	11
	.byte	'_Ifx_SRC_HSSL',0,8,128,2,25,16,12
	.byte	'COK',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'RDI',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'TRG',0
	.word	15600
	.byte	4,2,35,12,0,17
	.word	17878
	.byte	26
	.byte	'Ifx_SRC_HSSL',0,8,134,2,3
	.word	17951
	.byte	15,56
	.word	249
	.byte	16,55,0,11
	.byte	'_Ifx_SRC_I2C',0,8,137,2,25,80,12
	.byte	'BREQ',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'LBREQ',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'SREQ',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'LSREQ',0
	.word	15600
	.byte	4,2,35,12,12
	.byte	'ERR',0
	.word	15600
	.byte	4,2,35,16,12
	.byte	'P',0
	.word	15600
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	17978
	.byte	56,2,35,24,0,17
	.word	17987
	.byte	26
	.byte	'Ifx_SRC_I2C',0,8,146,2,3
	.word	18110
	.byte	11
	.byte	'_Ifx_SRC_LMU',0,8,149,2,25,4,12
	.byte	'SR',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	18136
	.byte	26
	.byte	'Ifx_SRC_LMU',0,8,152,2,3
	.word	18168
	.byte	11
	.byte	'_Ifx_SRC_MSC',0,8,155,2,25,20,12
	.byte	'SR0',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	15600
	.byte	4,2,35,12,12
	.byte	'SR4',0
	.word	15600
	.byte	4,2,35,16,0,17
	.word	18194
	.byte	26
	.byte	'Ifx_SRC_MSC',0,8,162,2,3
	.word	18279
	.byte	11
	.byte	'_Ifx_SRC_PMU',0,8,165,2,25,4,12
	.byte	'SR',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	18305
	.byte	26
	.byte	'Ifx_SRC_PMU',0,8,168,2,3
	.word	18337
	.byte	11
	.byte	'_Ifx_SRC_PSI5',0,8,171,2,25,32,12
	.byte	'SR',0
	.word	17147
	.byte	32,2,35,0,0,17
	.word	18363
	.byte	26
	.byte	'Ifx_SRC_PSI5',0,8,174,2,3
	.word	18396
	.byte	11
	.byte	'_Ifx_SRC_PSI5S',0,8,177,2,25,32,12
	.byte	'SR',0
	.word	17147
	.byte	32,2,35,0,0,17
	.word	18423
	.byte	26
	.byte	'Ifx_SRC_PSI5S',0,8,180,2,3
	.word	18457
	.byte	11
	.byte	'_Ifx_SRC_QSPI',0,8,183,2,25,24,12
	.byte	'TX',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	15600
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	14661
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	15600
	.byte	4,2,35,20,0,17
	.word	18485
	.byte	26
	.byte	'Ifx_SRC_QSPI',0,8,191,2,3
	.word	18587
	.byte	11
	.byte	'_Ifx_SRC_SCU',0,8,194,2,25,20,12
	.byte	'DTS',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	17233
	.byte	16,2,35,4,0,17
	.word	18614
	.byte	26
	.byte	'Ifx_SRC_SCU',0,8,198,2,3
	.word	18660
	.byte	15,40
	.word	15600
	.byte	16,9,0,11
	.byte	'_Ifx_SRC_SENT',0,8,201,2,25,40,12
	.byte	'SR',0
	.word	18686
	.byte	40,2,35,0,0,17
	.word	18695
	.byte	26
	.byte	'Ifx_SRC_SENT',0,8,204,2,3
	.word	18728
	.byte	11
	.byte	'_Ifx_SRC_SMU',0,8,207,2,25,12,12
	.byte	'SR',0
	.word	17138
	.byte	12,2,35,0,0,17
	.word	18755
	.byte	26
	.byte	'Ifx_SRC_SMU',0,8,210,2,3
	.word	18787
	.byte	11
	.byte	'_Ifx_SRC_STM',0,8,213,2,25,8,12
	.byte	'SR0',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	15600
	.byte	4,2,35,4,0,17
	.word	18813
	.byte	26
	.byte	'Ifx_SRC_STM',0,8,217,2,3
	.word	18859
	.byte	11
	.byte	'_Ifx_SRC_VADCCG',0,8,220,2,25,16,12
	.byte	'SR0',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	15600
	.byte	4,2,35,12,0,17
	.word	18885
	.byte	26
	.byte	'Ifx_SRC_VADCCG',0,8,226,2,3
	.word	18960
	.byte	11
	.byte	'_Ifx_SRC_VADCG',0,8,229,2,25,16,12
	.byte	'SR0',0
	.word	15600
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	15600
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	15600
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	15600
	.byte	4,2,35,12,0,17
	.word	18989
	.byte	26
	.byte	'Ifx_SRC_VADCG',0,8,235,2,3
	.word	19063
	.byte	11
	.byte	'_Ifx_SRC_XBAR',0,8,238,2,25,4,12
	.byte	'SRC',0
	.word	15600
	.byte	4,2,35,0,0,17
	.word	19091
	.byte	26
	.byte	'Ifx_SRC_XBAR',0,8,241,2,3
	.word	19125
	.byte	15,4
	.word	15660
	.byte	16,0,0,17
	.word	19152
	.byte	11
	.byte	'_Ifx_SRC_GAGBT',0,8,254,2,25,4,12
	.byte	'AGBT',0
	.word	19161
	.byte	4,2,35,0,0,17
	.word	19166
	.byte	26
	.byte	'Ifx_SRC_GAGBT',0,8,129,3,3
	.word	19202
	.byte	15,48
	.word	15718
	.byte	16,3,0,17
	.word	19230
	.byte	11
	.byte	'_Ifx_SRC_GASCLIN',0,8,132,3,25,48,12
	.byte	'ASCLIN',0
	.word	19239
	.byte	48,2,35,0,0,17
	.word	19244
	.byte	26
	.byte	'Ifx_SRC_GASCLIN',0,8,135,3,3
	.word	19284
	.byte	17
	.word	15805
	.byte	11
	.byte	'_Ifx_SRC_GBCU',0,8,138,3,25,4,12
	.byte	'SPB',0
	.word	19314
	.byte	4,2,35,0,0,17
	.word	19319
	.byte	26
	.byte	'Ifx_SRC_GBCU',0,8,141,3,3
	.word	19353
	.byte	15,64
	.word	15879
	.byte	16,0,0,17
	.word	19380
	.byte	11
	.byte	'_Ifx_SRC_GCAN',0,8,144,3,25,64,12
	.byte	'CAN',0
	.word	19389
	.byte	64,2,35,0,0,17
	.word	19394
	.byte	26
	.byte	'Ifx_SRC_GCAN',0,8,147,3,3
	.word	19428
	.byte	15,32
	.word	15936
	.byte	16,1,0,17
	.word	19455
	.byte	11
	.byte	'_Ifx_SRC_GCCU6',0,8,150,3,25,32,12
	.byte	'CCU6',0
	.word	19464
	.byte	32,2,35,0,0,17
	.word	19469
	.byte	26
	.byte	'Ifx_SRC_GCCU6',0,8,153,3,3
	.word	19505
	.byte	17
	.word	16043
	.byte	11
	.byte	'_Ifx_SRC_GCERBERUS',0,8,156,3,25,8,12
	.byte	'CERBERUS',0
	.word	19533
	.byte	8,2,35,0,0,17
	.word	19538
	.byte	26
	.byte	'Ifx_SRC_GCERBERUS',0,8,159,3,3
	.word	19582
	.byte	15,16
	.word	16109
	.byte	16,0,0,17
	.word	19614
	.byte	11
	.byte	'_Ifx_SRC_GCIF',0,8,162,3,25,16,12
	.byte	'CIF',0
	.word	19623
	.byte	16,2,35,0,0,17
	.word	19628
	.byte	26
	.byte	'Ifx_SRC_GCIF',0,8,165,3,3
	.word	19662
	.byte	15,12
	.word	16208
	.byte	16,2,0,17
	.word	19689
	.byte	11
	.byte	'_Ifx_SRC_GCPU',0,8,168,3,25,12,12
	.byte	'CPU',0
	.word	19698
	.byte	12,2,35,0,0,17
	.word	19703
	.byte	26
	.byte	'Ifx_SRC_GCPU',0,8,171,3,3
	.word	19737
	.byte	15,24
	.word	16278
	.byte	16,0,0,17
	.word	19764
	.byte	11
	.byte	'_Ifx_SRC_GDAM',0,8,174,3,25,24,12
	.byte	'DAM',0
	.word	19773
	.byte	24,2,35,0,0,17
	.word	19778
	.byte	26
	.byte	'Ifx_SRC_GDAM',0,8,177,3,3
	.word	19812
	.byte	15,144,2
	.word	16355
	.byte	16,0,0,17
	.word	19839
	.byte	11
	.byte	'_Ifx_SRC_GDMA',0,8,180,3,25,144,2,12
	.byte	'DMA',0
	.word	19849
	.byte	144,2,2,35,0,0,17
	.word	19854
	.byte	26
	.byte	'Ifx_SRC_GDMA',0,8,183,3,3
	.word	19890
	.byte	15,48
	.word	16448
	.byte	16,5,0,17
	.word	19917
	.byte	11
	.byte	'_Ifx_SRC_GDSADC',0,8,186,3,25,48,12
	.byte	'DSADC',0
	.word	19926
	.byte	48,2,35,0,0,17
	.word	19931
	.byte	26
	.byte	'Ifx_SRC_GDSADC',0,8,189,3,3
	.word	19969
	.byte	15,4
	.word	16524
	.byte	16,0,0,17
	.word	19998
	.byte	11
	.byte	'_Ifx_SRC_GEMEM',0,8,192,3,25,4,12
	.byte	'EMEM',0
	.word	20007
	.byte	4,2,35,0,0,17
	.word	20012
	.byte	26
	.byte	'Ifx_SRC_GEMEM',0,8,195,3,3
	.word	20048
	.byte	15,80
	.word	16584
	.byte	16,0,0,17
	.word	20076
	.byte	11
	.byte	'_Ifx_SRC_GERAY',0,8,198,3,25,80,12
	.byte	'ERAY',0
	.word	20085
	.byte	80,2,35,0,0,17
	.word	20090
	.byte	26
	.byte	'Ifx_SRC_GERAY',0,8,201,3,3
	.word	20126
	.byte	15,4
	.word	16738
	.byte	16,0,0,17
	.word	20154
	.byte	11
	.byte	'_Ifx_SRC_GETH',0,8,204,3,25,4,12
	.byte	'ETH',0
	.word	20163
	.byte	4,2,35,0,0,17
	.word	20168
	.byte	26
	.byte	'Ifx_SRC_GETH',0,8,207,3,3
	.word	20202
	.byte	15,4
	.word	16796
	.byte	16,0,0,17
	.word	20229
	.byte	11
	.byte	'_Ifx_SRC_GFCE',0,8,210,3,25,4,12
	.byte	'FCE',0
	.word	20238
	.byte	4,2,35,0,0,17
	.word	20243
	.byte	26
	.byte	'Ifx_SRC_GFCE',0,8,213,3,3
	.word	20277
	.byte	15,96
	.word	16863
	.byte	16,2,0,17
	.word	20304
	.byte	11
	.byte	'_Ifx_SRC_GGPSR',0,8,216,3,25,96,12
	.byte	'GPSR',0
	.word	20313
	.byte	96,2,35,0,0,17
	.word	20318
	.byte	26
	.byte	'Ifx_SRC_GGPSR',0,8,219,3,3
	.word	20354
	.byte	15,48
	.word	16993
	.byte	16,0,0,17
	.word	20382
	.byte	11
	.byte	'_Ifx_SRC_GGPT12',0,8,222,3,25,48,12
	.byte	'GPT12',0
	.word	20391
	.byte	48,2,35,0,0,17
	.word	20396
	.byte	26
	.byte	'Ifx_SRC_GGPT12',0,8,225,3,3
	.word	20434
	.byte	15,208,18
	.word	17271
	.byte	16,0,0,17
	.word	20463
	.byte	11
	.byte	'_Ifx_SRC_GGTM',0,8,228,3,25,208,18,12
	.byte	'GTM',0
	.word	20473
	.byte	208,18,2,35,0,0,17
	.word	20478
	.byte	26
	.byte	'Ifx_SRC_GGTM',0,8,231,3,3
	.word	20514
	.byte	15,4
	.word	17759
	.byte	16,0,0,17
	.word	20541
	.byte	11
	.byte	'_Ifx_SRC_GHSCT',0,8,234,3,25,4,12
	.byte	'HSCT',0
	.word	20550
	.byte	4,2,35,0,0,17
	.word	20555
	.byte	26
	.byte	'Ifx_SRC_GHSCT',0,8,237,3,3
	.word	20591
	.byte	15,8
	.word	17819
	.byte	16,0,0,17
	.word	20619
	.byte	11
	.byte	'_Ifx_SRC_GHSM',0,8,240,3,25,8,12
	.byte	'HSM',0
	.word	20628
	.byte	8,2,35,0,0,17
	.word	20633
	.byte	26
	.byte	'Ifx_SRC_GHSM',0,8,243,3,3
	.word	20667
	.byte	15,64
	.word	17878
	.byte	16,3,0,17
	.word	20694
	.byte	11
	.byte	'_Ifx_SRC_GHSSL',0,8,246,3,25,68,12
	.byte	'HSSL',0
	.word	20703
	.byte	64,2,35,0,12
	.byte	'EXI',0
	.word	15600
	.byte	4,2,35,64,0,17
	.word	20708
	.byte	26
	.byte	'Ifx_SRC_GHSSL',0,8,250,3,3
	.word	20757
	.byte	15,80
	.word	17987
	.byte	16,0,0,17
	.word	20785
	.byte	11
	.byte	'_Ifx_SRC_GI2C',0,8,253,3,25,80,12
	.byte	'I2C',0
	.word	20794
	.byte	80,2,35,0,0,17
	.word	20799
	.byte	26
	.byte	'Ifx_SRC_GI2C',0,8,128,4,3
	.word	20833
	.byte	15,4
	.word	18136
	.byte	16,0,0,17
	.word	20860
	.byte	11
	.byte	'_Ifx_SRC_GLMU',0,8,131,4,25,4,12
	.byte	'LMU',0
	.word	20869
	.byte	4,2,35,0,0,17
	.word	20874
	.byte	26
	.byte	'Ifx_SRC_GLMU',0,8,134,4,3
	.word	20908
	.byte	15,40
	.word	18194
	.byte	16,1,0,17
	.word	20935
	.byte	11
	.byte	'_Ifx_SRC_GMSC',0,8,137,4,25,40,12
	.byte	'MSC',0
	.word	20944
	.byte	40,2,35,0,0,17
	.word	20949
	.byte	26
	.byte	'Ifx_SRC_GMSC',0,8,140,4,3
	.word	20983
	.byte	15,8
	.word	18305
	.byte	16,1,0,17
	.word	21010
	.byte	11
	.byte	'_Ifx_SRC_GPMU',0,8,143,4,25,8,12
	.byte	'PMU',0
	.word	21019
	.byte	8,2,35,0,0,17
	.word	21024
	.byte	26
	.byte	'Ifx_SRC_GPMU',0,8,146,4,3
	.word	21058
	.byte	15,32
	.word	18363
	.byte	16,0,0,17
	.word	21085
	.byte	11
	.byte	'_Ifx_SRC_GPSI5',0,8,149,4,25,32,12
	.byte	'PSI5',0
	.word	21094
	.byte	32,2,35,0,0,17
	.word	21099
	.byte	26
	.byte	'Ifx_SRC_GPSI5',0,8,152,4,3
	.word	21135
	.byte	15,32
	.word	18423
	.byte	16,0,0,17
	.word	21163
	.byte	11
	.byte	'_Ifx_SRC_GPSI5S',0,8,155,4,25,32,12
	.byte	'PSI5S',0
	.word	21172
	.byte	32,2,35,0,0,17
	.word	21177
	.byte	26
	.byte	'Ifx_SRC_GPSI5S',0,8,158,4,3
	.word	21215
	.byte	15,96
	.word	18485
	.byte	16,3,0,17
	.word	21244
	.byte	11
	.byte	'_Ifx_SRC_GQSPI',0,8,161,4,25,96,12
	.byte	'QSPI',0
	.word	21253
	.byte	96,2,35,0,0,17
	.word	21258
	.byte	26
	.byte	'Ifx_SRC_GQSPI',0,8,164,4,3
	.word	21294
	.byte	17
	.word	18614
	.byte	11
	.byte	'_Ifx_SRC_GSCU',0,8,167,4,25,20,12
	.byte	'SCU',0
	.word	21322
	.byte	20,2,35,0,0,17
	.word	21327
	.byte	26
	.byte	'Ifx_SRC_GSCU',0,8,170,4,3
	.word	21361
	.byte	15,40
	.word	18695
	.byte	16,0,0,17
	.word	21388
	.byte	11
	.byte	'_Ifx_SRC_GSENT',0,8,173,4,25,40,12
	.byte	'SENT',0
	.word	21397
	.byte	40,2,35,0,0,17
	.word	21402
	.byte	26
	.byte	'Ifx_SRC_GSENT',0,8,176,4,3
	.word	21438
	.byte	15,12
	.word	18755
	.byte	16,0,0,17
	.word	21466
	.byte	11
	.byte	'_Ifx_SRC_GSMU',0,8,179,4,25,12,12
	.byte	'SMU',0
	.word	21475
	.byte	12,2,35,0,0,17
	.word	21480
	.byte	26
	.byte	'Ifx_SRC_GSMU',0,8,182,4,3
	.word	21514
	.byte	15,24
	.word	18813
	.byte	16,2,0,17
	.word	21541
	.byte	11
	.byte	'_Ifx_SRC_GSTM',0,8,185,4,25,24,12
	.byte	'STM',0
	.word	21550
	.byte	24,2,35,0,0,17
	.word	21555
	.byte	26
	.byte	'Ifx_SRC_GSTM',0,8,188,4,3
	.word	21589
	.byte	15,128,1
	.word	18989
	.byte	16,7,0,17
	.word	21616
	.byte	15,160,1
	.word	249
	.byte	16,159,1,0,15,32
	.word	18885
	.byte	16,1,0,17
	.word	21642
	.byte	11
	.byte	'_Ifx_SRC_GVADC',0,8,191,4,25,192,2,12
	.byte	'G',0
	.word	21626
	.byte	128,1,2,35,0,12
	.byte	'reserved_80',0
	.word	21631
	.byte	160,1,3,35,128,1,12
	.byte	'CG',0
	.word	21651
	.byte	32,3,35,160,2,0,17
	.word	21656
	.byte	26
	.byte	'Ifx_SRC_GVADC',0,8,196,4,3
	.word	21727
	.byte	17
	.word	19091
	.byte	11
	.byte	'_Ifx_SRC_GXBAR',0,8,199,4,25,4,12
	.byte	'XBAR',0
	.word	21755
	.byte	4,2,35,0,0,17
	.word	21760
	.byte	26
	.byte	'Ifx_SRC_GXBAR',0,8,202,4,3
	.word	21796
	.byte	26
	.byte	'uint8',0,9,90,29
	.word	249
	.byte	26
	.byte	'uint16',0,9,92,29
	.word	757
	.byte	26
	.byte	'uint32',0,9,94,29
	.word	779
	.byte	26
	.byte	'Std_ReturnType',0,10,113,15
	.word	249
	.byte	26
	.byte	'PduIdType',0,11,72,22
	.word	249
	.byte	26
	.byte	'PduLengthType',0,11,76,22
	.word	757
	.byte	26
	.byte	'Can_IdType',0,2,45,16
	.word	779
	.byte	26
	.byte	'Can_PduType',0,2,56,3
	.word	805
	.byte	26
	.byte	'Can_HwHandleType',0,2,60,15
	.word	249
	.byte	26
	.byte	'Can_StateTransitionType',0,2,70,3
	.word	986
	.byte	26
	.byte	'Can_ReturnType',0,2,79,3
	.word	718
	.byte	26
	.byte	'Can_17_MCanP_DriverStateType',0,5,204,3,15
	.word	249
	.byte	26
	.byte	'Can_TxHwObjectConfigType',0,5,237,3,3
	.word	1846
	.byte	26
	.byte	'Can_ControllerMOMapConfigType',0,5,169,4,3
	.word	1514
	.byte	26
	.byte	'Can_NPCRValueType',0,5,176,4,3
	.word	1447
	.byte	26
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,5,183,4,3
	.word	1647
	.byte	26
	.byte	'Can_BaudrateConfigPtrType',0,5,189,4,3
	.word	1771
	.byte	26
	.byte	'Can_EventHandlingType',0,5,214,4,3
	.word	1586
	.byte	26
	.byte	'Can_17_MCanP_ConfigType',0,5,216,5,3
	.word	1949
	.byte	17
	.word	14779
	.byte	10
	.word	22338
	.byte	15,4
	.word	22343
	.byte	16,0,0,13
	.word	22348
	.byte	30
	.byte	'CAN_KER',0,6,56,23
	.word	22357
	.byte	1,1,26
	.byte	'CanIf_ControllerModeType',0,12,58,15
	.word	249
.L626:
	.byte	13
	.word	1940
	.byte	15,7
	.word	249
	.byte	16,6,0
.L627:
	.byte	15,7
	.word	22418
	.byte	16,0,0
.L629:
	.byte	15,4
	.word	249
	.byte	16,3,0,15,32
	.word	779
	.byte	16,7,0
.L630:
	.byte	15,128,1
	.word	22445
	.byte	16,3,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L133:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,6,11,1,0,0,7
	.byte	5,0,3,8,58,15,59,15,57,15,73,19,0,0,8,4,1,58,15,59,15,57,15,11,15,0,0,9,40,0,3,8,28,13,0,0,10,15,0,73
	.byte	19,0,0,11,19,1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56,9,0,0,13,38,0,73,19,0,0,14,46
	.byte	0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,53,0,73
	.byte	19,0,0,18,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,19,46,1,3,8,58,15,59,15,57,15,73,19,54
	.byte	15,39,12,63,12,60,12,0,0,20,46,1,49,19,0,0,21,5,0,49,19,0,0,22,29,1,49,19,0,0,23,11,1,49,19,0,0,24,11
	.byte	0,49,19,0,0,25,21,0,54,15,0,0,26,22,0,3,8,58,15,59,15,57,15,73,19,0,0,27,13,0,3,8,11,15,73,19,13,15,12
	.byte	15,56,9,0,0,28,23,1,58,15,59,15,57,15,11,15,0,0,29,13,0,73,19,11,15,56,9,0,0,30,52,0,3,8,58,15,59,15,57
	.byte	15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L134:
	.word	.L772-.L771
.L771:
	.half	3
	.word	.L774-.L773
.L773:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general\\inc',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc\\inc',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\inc',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\inc',0
	.byte	0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0
	.byte	'Can_GeneralTypes.h',0,1,0,0
	.byte	'SchM_Can_17_MCanP.h',0,1,0,0
	.byte	'Mcal_WdgLib.h',0,2,0,0
	.byte	'Can_17_MCanP.h',0,3,0,0
	.byte	'Can_17_MCanP_Platform.h',0,3,0,0
	.byte	'IfxCan_regdef.h',0,4,0,0
	.byte	'IfxSrc_regdef.h',0,4,0,0
	.byte	'Platform_Types.h',0,5,0,0
	.byte	'Std_Types.h',0,6,0,0
	.byte	'ComStack_Types.h',0,6,0,0
	.byte	'CanIf_Types.h',0,1,0,0,0
.L774:
.L772:
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_info'
.L135:
	.word	1758
	.half	3
	.word	.L136
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L138,.L137
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_Init',0,1,227,6,6,1,1,1
	.word	.L88,.L265,.L87
	.byte	4
	.byte	'Config',0,1,227,6,55
	.word	.L266,.L267
	.byte	5
	.word	.L88,.L265
	.byte	6
	.word	.L268,.L269,.L270
	.byte	7
	.word	.L271,.L272
	.byte	8
	.byte	'Index',0,1,135,19,10
	.word	.L277,.L278
	.byte	8
	.byte	'KerIdx',0,1,140,19,18
	.word	.L279,.L280
	.byte	8
	.byte	'MspndIndex',0,1,142,19,9
	.word	.L281,.L282
	.byte	0,0,6
	.word	.L283,.L270,.L284
	.byte	7
	.word	.L285,.L286
	.byte	8
	.byte	'ReadBack',0,1,231,19,19
	.word	.L289,.L290
	.byte	8
	.byte	'KerIdx',0,1,232,19,18
	.word	.L291,.L292
	.byte	8
	.byte	'LoopBreak',0,1,233,19,9
	.word	.L281,.L293
	.byte	8
	.byte	'DissChk',0,1,234,19,18
	.word	.L294,.L295
	.byte	8
	.byte	'RetVal',0,1,235,19,18
	.word	.L281,.L296
	.byte	7
	.word	.L297,.L298
	.byte	8
	.byte	'val',0,1,248,19,4
	.word	.L303,.L304
	.byte	0,9
	.word	.L305,.L11,.L306
	.byte	8
	.byte	'val',0,1,163,20,5
	.word	.L303,.L307
	.byte	0,0,0,6
	.word	.L308,.L284,.L287
	.byte	7
	.word	.L309,.L310
	.byte	8
	.byte	'TimeOutIndex',0,1,222,21,10
	.word	.L303,.L312
	.byte	8
	.byte	'RetVal',0,1,223,21,18
	.word	.L281,.L313
	.byte	8
	.byte	'KerIdx',0,1,224,21,18
	.word	.L314,.L315
	.byte	0,0,10
	.word	.L283,.L287,.L288
	.byte	10
	.word	.L308,.L288,.L311
	.byte	6
	.word	.L316,.L317,.L273
	.byte	7
	.word	.L318,.L319
	.byte	8
	.byte	'ControllerId',0,1,154,29,9
	.word	.L281,.L320
	.byte	6
	.word	.L321,.L322,.L23
	.byte	11
	.word	.L323,.L324
	.byte	11
	.word	.L325,.L326
	.byte	7
	.word	.L327,.L328
	.byte	8
	.byte	'KerIdx',0,1,167,22,9
	.word	.L281,.L330
	.byte	8
	.byte	'HwCtrlIDKer',0,1,168,22,9
	.word	.L281,.L331
	.byte	8
	.byte	'BOSrcNum',0,1,169,22,9
	.word	.L281,.L332
	.byte	8
	.byte	'RxSrcNum',0,1,170,22,9
	.word	.L281,.L333
	.byte	8
	.byte	'IntSrcOffset',0,1,171,22,9
	.word	.L281,.L334
	.byte	7
	.word	.L335,.L336
	.byte	8
	.byte	'val',0,1,223,22,3
	.word	.L303,.L340
	.byte	0,7
	.word	.L341,.L342
	.byte	8
	.byte	'val',0,1,188,22,3
	.word	.L303,.L351
	.byte	0,7
	.word	.L352,.L353
	.byte	8
	.byte	'val',0,1,218,22,3
	.word	.L303,.L357
	.byte	0,9
	.word	.L358,.L339,.L359
	.byte	8
	.byte	'val',0,1,228,22,3
	.word	.L303,.L360
	.byte	0,6
	.word	.L361,.L362,.L25
	.byte	11
	.word	.L363,.L364
	.byte	9
	.word	.L365,.L362,.L25
	.byte	9
	.word	.L366,.L362,.L367
	.byte	8
	.byte	'val',0,1,187,49,3
	.word	.L303,.L368
	.byte	0,9
	.word	.L369,.L367,.L25
	.byte	8
	.byte	'val',0,1,192,49,3
	.word	.L303,.L370
	.byte	0,0,0,6
	.word	.L361,.L371,.L26
	.byte	11
	.word	.L363,.L364
	.byte	9
	.word	.L365,.L371,.L26
	.byte	9
	.word	.L366,.L371,.L372
	.byte	8
	.byte	'val',0,1,187,49,3
	.word	.L303,.L373
	.byte	0,9
	.word	.L369,.L372,.L26
	.byte	8
	.byte	'val',0,1,192,49,3
	.word	.L303,.L374
	.byte	0,0,0,6
	.word	.L361,.L375,.L24
	.byte	11
	.word	.L363,.L364
	.byte	9
	.word	.L365,.L375,.L24
	.byte	9
	.word	.L366,.L375,.L376
	.byte	8
	.byte	'val',0,1,187,49,3
	.word	.L303,.L377
	.byte	0,9
	.word	.L369,.L376,.L24
	.byte	8
	.byte	'val',0,1,192,49,3
	.word	.L303,.L378
	.byte	0,0,0,0,0,6
	.word	.L321,.L329,.L24
	.byte	11
	.word	.L323,.L324
	.byte	11
	.word	.L325,.L326
	.byte	0,0,0,10
	.word	.L268,.L273,.L274
	.byte	10
	.word	.L316,.L274,.L22
	.byte	6
	.word	.L379,.L22,.L275
	.byte	7
	.word	.L380,.L381
	.byte	6
	.word	.L383,.L22,.L275
	.byte	7
	.word	.L384,.L385
	.byte	8
	.byte	'TxHwObjCfgPtr',0,1,216,23,35
	.word	.L387,.L388
	.byte	8
	.byte	'HwObjIndex',0,1,217,23,10
	.word	.L277,.L389
	.byte	8
	.byte	'HwObjectId',0,1,218,23,10
	.word	.L277,.L390
	.byte	8
	.byte	'HwControllerId',0,1,219,23,9
	.word	.L281,.L391
	.byte	8
	.byte	'KerIdx',0,1,221,23,9
	.word	.L281,.L392
	.byte	8
	.byte	'RetVal',0,1,222,23,18
	.word	.L281,.L393
	.byte	8
	.byte	'HwCtrlIDKer',0,1,224,23,9
	.word	.L281,.L394
	.byte	7
	.word	.L395,.L396
	.byte	8
	.byte	'val',0,1,198,24,11
	.word	.L303,.L403
	.byte	0,7
	.word	.L404,.L405
	.byte	8
	.byte	'val',0,1,208,24,11
	.word	.L303,.L410
	.byte	0,7
	.word	.L411,.L412
	.byte	8
	.byte	'val',0,1,221,24,13
	.word	.L303,.L414
	.byte	0,9
	.word	.L415,.L32,.L416
	.byte	8
	.byte	'val',0,1,228,24,13
	.word	.L303,.L417
	.byte	0,9
	.word	.L418,.L416,.L419
	.byte	8
	.byte	'val',0,1,235,24,11
	.word	.L303,.L420
	.byte	0,0,0,10
	.word	.L383,.L276,.L386
	.byte	0,0,10
	.word	.L268,.L275,.L276
	.byte	10
	.word	.L379,.L276,.L382
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_abbrev'
.L136:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,11,1,49,16,85,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,10,29,0,49,16,17,1,18,1,0,0,11,5,0,49,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_line'
.L137:
	.word	.L776-.L775
.L775:
	.half	3
	.word	.L778-.L777
.L777:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L778:
	.byte	5,6,7,0,5,2
	.word	.L88
	.byte	3,226,6,1,5,19,9
	.half	.L631-.L88
	.byte	3,211,0,1,5,14,9
	.half	.L269-.L631
	.byte	3,219,11,1,5,5,3,2,1,9
	.half	.L632-.L269
	.byte	3,1,1,9
	.half	.L779-.L632
	.byte	3,2,1,5,32,9
	.half	.L780-.L779
	.byte	3,123,1,5,68,1,5,75,9
	.half	.L3-.L780
	.byte	1,5,47,3,2,1,5,75,9
	.half	.L633-.L3
	.byte	3,126,1,5,40,3,3,1,9
	.half	.L634-.L633
	.byte	3,2,1,5,49,9
	.half	.L2-.L634
	.byte	3,123,1,5,68,9
	.half	.L781-.L2
	.byte	1,5,15,7,9
	.half	.L782-.L781
	.byte	3,16,1,5,6,9
	.half	.L783-.L782
	.byte	3,5,1,5,61,9
	.half	.L784-.L783
	.byte	3,123,1,5,15,9
	.half	.L5-.L784
	.byte	3,3,1,5,63,1,5,25,9
	.half	.L6-.L5
	.byte	3,2,1,5,24,9
	.half	.L785-.L6
	.byte	1,5,32,9
	.half	.L786-.L785
	.byte	1,5,70,9
	.half	.L787-.L786
	.byte	3,126,1,5,40,9
	.half	.L788-.L787
	.byte	3,2,1,5,63,3,126,1,7,9
	.half	.L789-.L788
	.byte	3,125,1,5,69,9
	.half	.L635-.L789
	.byte	1,5,27,9
	.half	.L4-.L635
	.byte	1,5,61,9
	.half	.L790-.L4
	.byte	1,5,14,7,9
	.half	.L791-.L790
	.byte	3,13,1,5,5,3,3,1,5,72,9
	.half	.L636-.L791
	.byte	3,125,1,5,7,9
	.half	.L792-.L636
	.byte	3,8,1,5,72,9
	.half	.L793-.L792
	.byte	3,120,1,5,7,9
	.half	.L794-.L793
	.byte	3,9,1,5,24,9
	.half	.L795-.L794
	.byte	3,119,1,5,63,1,5,24,9
	.half	.L7-.L795
	.byte	1,5,26,3,3,1,5,21,9
	.half	.L796-.L7
	.byte	3,6,1,5,78,3,125,1,5,20,9
	.half	.L797-.L796
	.byte	3,3,1,5,70,9
	.half	.L798-.L797
	.byte	3,119,1,5,64,9
	.half	.L799-.L798
	.byte	3,6,1,5,39,9
	.half	.L8-.L799
	.byte	3,2,1,9
	.half	.L800-.L8
	.byte	3,1,1,5,64,3,125,1,5,70,7,9
	.half	.L801-.L800
	.byte	3,122,1,5,63,1,5,12,7,9
	.half	.L270-.L801
	.byte	3,62,1,5,13,9
	.half	.L802-.L270
	.byte	3,1,1,5,15,3,3,1,5,4,9
	.half	.L299-.L802
	.byte	3,8,1,5,28,9
	.half	.L300-.L299
	.byte	3,121,1,5,4,9
	.half	.L10-.L300
	.byte	3,4,1,9
	.half	.L301-.L10
	.byte	3,3,1,5,15,9
	.half	.L302-.L301
	.byte	3,4,1,5,13,9
	.half	.L639-.L302
	.byte	1,5,4,9
	.half	.L803-.L639
	.byte	3,11,1,5,22,9
	.half	.L804-.L803
	.byte	3,6,1,5,76,9
	.half	.L805-.L804
	.byte	1,5,58,9
	.half	.L806-.L805
	.byte	3,1,1,5,12,3,127,1,5,20,9
	.half	.L807-.L806
	.byte	3,3,1,5,4,9
	.half	.L808-.L807
	.byte	1,5,12,7,9
	.half	.L809-.L808
	.byte	3,7,1,5,22,1,5,5,9
	.half	.L11-.L809
	.byte	3,12,1,9
	.half	.L306-.L11
	.byte	3,4,1,9
	.half	.L641-.L306
	.byte	3,4,1,9
	.half	.L810-.L641
	.byte	3,4,1,5,30,9
	.half	.L12-.L810
	.byte	3,66,1,5,36,9
	.half	.L811-.L12
	.byte	1,5,29,9
	.half	.L9-.L811
	.byte	3,127,1,5,28,9
	.half	.L812-.L9
	.byte	1,5,15,7,9
	.half	.L813-.L812
	.byte	3,1,1,5,3,7,9
	.half	.L13-.L813
	.byte	3,193,0,1,5,4,9
	.half	.L814-.L13
	.byte	3,144,115,1,5,10,7,9
	.half	.L284-.L814
	.byte	3,160,14,1,5,15,3,2,1,5,4,9
	.half	.L287-.L284
	.byte	3,148,126,1,5,61,9
	.half	.L288-.L287
	.byte	3,236,1,1,5,16,9
	.half	.L16-.L288
	.byte	3,126,1,5,80,3,18,1,5,19,9
	.half	.L18-.L16
	.byte	3,3,1,5,15,9
	.half	.L17-.L18
	.byte	3,123,1,5,12,9
	.half	.L815-.L17
	.byte	1,5,68,7,9
	.half	.L816-.L815
	.byte	3,2,1,5,14,7,9
	.half	.L19-.L816
	.byte	3,16,1,5,63,3,96,1,5,69,9
	.half	.L643-.L19
	.byte	1,5,27,9
	.half	.L15-.L643
	.byte	1,5,61,9
	.half	.L817-.L15
	.byte	1,5,5,7,9
	.half	.L311-.L817
	.byte	3,226,113,1,5,19,7,9
	.half	.L317-.L311
	.byte	3,216,21,1,9
	.half	.L818-.L317
	.byte	3,127,1,5,33,9
	.half	.L637-.L818
	.byte	3,1,1,5,52,9
	.half	.L642-.L637
	.byte	1,5,28,7,9
	.half	.L322-.L642
	.byte	3,127,1,5,15,3,149,121,1,5,3,9
	.half	.L337-.L322
	.byte	3,45,1,5,43,9
	.half	.L23-.L337
	.byte	3,196,6,1,5,24,9
	.half	.L273-.L23
	.byte	3,139,118,1,5,5,9
	.half	.L274-.L273
	.byte	3,244,9,1,5,12,7,9
	.half	.L329-.L274
	.byte	3,140,121,1,5,44,9
	.half	.L645-.L329
	.byte	3,4,1,5,26,9
	.half	.L819-.L645
	.byte	3,126,1,5,44,9
	.half	.L820-.L819
	.byte	3,2,1,5,3,9
	.half	.L343-.L820
	.byte	3,10,1,5,17,9
	.half	.L344-.L343
	.byte	3,115,1,5,3,9
	.half	.L345-.L344
	.byte	3,13,1,5,54,9
	.half	.L346-.L345
	.byte	3,118,1,5,3,9
	.half	.L347-.L346
	.byte	3,10,1,5,5,9
	.half	.L348-.L347
	.byte	3,121,1,5,19,9
	.half	.L821-.L348
	.byte	1,5,15,9
	.half	.L822-.L821
	.byte	3,127,1,5,3,3,8,1,5,6,9
	.half	.L648-.L822
	.byte	3,118,1,5,3,9
	.half	.L349-.L648
	.byte	3,10,1,5,56,9
	.half	.L350-.L349
	.byte	3,52,1,5,3,9
	.half	.L823-.L350
	.byte	3,102,1,5,5,9
	.half	.L824-.L823
	.byte	3,93,1,5,3,9
	.half	.L825-.L824
	.byte	3,35,1,5,36,9
	.half	.L826-.L825
	.byte	3,93,1,5,3,9
	.half	.L354-.L826
	.byte	3,39,1,5,15,9
	.half	.L355-.L354
	.byte	3,87,1,5,3,9
	.half	.L356-.L355
	.byte	3,41,1,9
	.half	.L338-.L356
	.byte	3,5,1,9
	.half	.L339-.L338
	.byte	3,5,1,5,16,9
	.half	.L359-.L339
	.byte	3,4,1,5,32,9
	.half	.L827-.L359
	.byte	3,7,1,9
	.half	.L653-.L827
	.byte	3,121,1,5,50,9
	.half	.L828-.L653
	.byte	3,6,1,5,32,9
	.half	.L829-.L828
	.byte	3,1,1,5,46,9
	.half	.L830-.L829
	.byte	1,5,56,9
	.half	.L831-.L830
	.byte	3,1,1,5,5,9
	.half	.L646-.L831
	.byte	3,8,1,5,19,9
	.half	.L832-.L646
	.byte	1,5,46,9
	.half	.L833-.L832
	.byte	1,5,62,9
	.half	.L834-.L833
	.byte	3,1,1,5,3,9
	.half	.L835-.L834
	.byte	3,126,1,5,54,7,9
	.half	.L836-.L835
	.byte	3,4,1,5,3,3,192,26,1,5,34,9
	.half	.L647-.L836
	.byte	3,192,101,1,5,3,9
	.half	.L362-.L647
	.byte	3,192,26,1,9
	.half	.L367-.L362
	.byte	3,5,1,5,19,9
	.half	.L25-.L367
	.byte	3,193,101,1,5,46,9
	.half	.L837-.L25
	.byte	1,5,60,9
	.half	.L838-.L837
	.byte	3,1,1,5,3,9
	.half	.L839-.L838
	.byte	3,126,1,7,9
	.half	.L371-.L839
	.byte	3,187,26,1,9
	.half	.L372-.L371
	.byte	3,5,1,5,19,9
	.half	.L26-.L372
	.byte	3,202,101,1,5,46,9
	.half	.L840-.L26
	.byte	1,5,61,9
	.half	.L841-.L840
	.byte	3,1,1,5,3,9
	.half	.L842-.L841
	.byte	3,126,1,7,9
	.half	.L375-.L842
	.byte	3,178,26,1,9
	.half	.L376-.L375
	.byte	3,5,1,5,5,9
	.half	.L24-.L376
	.byte	3,235,107,1,5,32,9
	.half	.L843-.L24
	.byte	1,5,17,9
	.half	.L844-.L843
	.byte	3,116,1,5,47,9
	.half	.L644-.L844
	.byte	3,12,1,5,17,9
	.half	.L845-.L644
	.byte	3,116,1,5,19,9
	.half	.L657-.L845
	.byte	3,127,1,5,33,9
	.half	.L846-.L657
	.byte	1,5,52,9
	.half	.L847-.L846
	.byte	1,5,10,7,9
	.half	.L22-.L847
	.byte	3,197,122,1,5,33,3,127,1,5,15,9
	.half	.L659-.L22
	.byte	3,5,1,5,13,3,246,0,1,5,14,9
	.half	.L660-.L659
	.byte	3,112,1,5,11,3,38,1,5,65,9
	.half	.L658-.L660
	.byte	3,245,126,1,5,35,9
	.half	.L29-.L658
	.byte	3,7,1,5,24,9
	.half	.L275-.L29
	.byte	3,191,123,1,5,47,9
	.half	.L276-.L275
	.byte	3,193,4,1,5,19,9
	.half	.L662-.L276
	.byte	3,5,1,5,14,9
	.half	.L663-.L662
	.byte	3,125,1,5,5,9
	.half	.L664-.L663
	.byte	3,8,1,5,45,7,9
	.half	.L848-.L664
	.byte	3,5,1,5,56,9
	.half	.L667-.L848
	.byte	3,18,1,5,9,9
	.half	.L666-.L667
	.byte	3,2,1,5,11,7,9
	.half	.L397-.L666
	.byte	3,52,1,5,39,9
	.half	.L849-.L397
	.byte	3,15,1,5,11,9
	.half	.L850-.L849
	.byte	3,113,1,5,25,9
	.half	.L398-.L850
	.byte	3,6,1,5,11,9
	.half	.L399-.L398
	.byte	3,122,1,9
	.half	.L400-.L399
	.byte	3,10,1,9
	.half	.L401-.L400
	.byte	3,118,1,5,24,9
	.half	.L402-.L401
	.byte	3,6,1,5,53,9
	.half	.L851-.L402
	.byte	1,5,40,9
	.half	.L672-.L851
	.byte	1,5,39,9
	.half	.L852-.L672
	.byte	3,1,1,5,40,9
	.half	.L673-.L852
	.byte	3,127,1,5,39,9
	.half	.L670-.L673
	.byte	3,1,1,5,24,9
	.half	.L674-.L670
	.byte	1,5,68,9
	.half	.L853-.L674
	.byte	3,127,1,5,11,9
	.half	.L406-.L853
	.byte	3,4,1,5,13,9
	.half	.L407-.L406
	.byte	3,13,1,5,11,9
	.half	.L408-.L407
	.byte	3,115,1,5,12,9
	.half	.L409-.L408
	.byte	3,9,1,5,39,9
	.half	.L854-.L409
	.byte	3,124,1,5,26,9
	.half	.L676-.L854
	.byte	3,4,1,5,53,9
	.half	.L855-.L676
	.byte	1,5,61,9
	.half	.L856-.L855
	.byte	3,1,1,5,11,9
	.half	.L857-.L856
	.byte	3,126,1,5,13,7,9
	.half	.L413-.L857
	.byte	3,5,1,9
	.half	.L32-.L413
	.byte	3,7,1,5,11,9
	.half	.L416-.L32
	.byte	3,7,1,9
	.half	.L419-.L416
	.byte	3,8,1,5,13,9
	.half	.L30-.L419
	.byte	3,246,126,1,5,19,9
	.half	.L28-.L30
	.byte	3,127,1,5,33,9
	.half	.L858-.L28
	.byte	1,5,5,9
	.half	.L859-.L858
	.byte	1,5,56,7,9
	.half	.L860-.L859
	.byte	1,5,3,7,9
	.half	.L34-.L860
	.byte	3,149,1,1,5,6,9
	.half	.L386-.L34
	.byte	3,209,110,1,5,34,7,9
	.half	.L382-.L386
	.byte	3,4,1,5,32,1,5,1,9
	.half	.L14-.L382
	.byte	3,5,1,7,9
	.half	.L139-.L14
	.byte	0,1,1
.L776:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_ranges'
.L138:
	.word	-1,.L88,0,.L139-.L88,0,0
.L272:
	.word	-1,.L88,.L269-.L88,.L270-.L88,.L273-.L88,.L274-.L88,.L275-.L88,.L276-.L88,0,0
.L286:
	.word	-1,.L88,.L270-.L88,.L284-.L88,.L287-.L88,.L288-.L88,0,0
.L298:
	.word	-1,.L88,.L299-.L88,.L300-.L88,.L301-.L88,.L302-.L88,.L287-.L88,.L288-.L88,0,0
.L310:
	.word	-1,.L88,.L284-.L88,.L287-.L88,.L288-.L88,.L311-.L88,0,0
.L319:
	.word	-1,.L88,.L317-.L88,.L273-.L88,.L274-.L88,.L22-.L88,0,0
.L328:
	.word	-1,.L88,.L322-.L88,.L23-.L88,.L329-.L88,.L24-.L88,0,0
.L336:
	.word	-1,.L88,.L337-.L88,.L23-.L88,.L338-.L88,.L339-.L88,0,0
.L342:
	.word	-1,.L88,.L343-.L88,.L344-.L88,.L345-.L88,.L346-.L88,.L347-.L88,.L348-.L88,.L349-.L88,.L350-.L88,0,0
.L353:
	.word	-1,.L88,.L354-.L88,.L355-.L88,.L356-.L88,.L338-.L88,0,0
.L381:
	.word	-1,.L88,.L22-.L88,.L275-.L88,.L276-.L88,.L382-.L88,0,0
.L385:
	.word	-1,.L88,.L22-.L88,.L275-.L88,.L276-.L88,.L386-.L88,0,0
.L396:
	.word	-1,.L88,.L397-.L88,.L398-.L88,.L399-.L88,.L400-.L88,.L401-.L88,.L402-.L88,0,0
.L405:
	.word	-1,.L88,.L400-.L88,.L401-.L88,.L406-.L88,.L407-.L88,.L408-.L88,.L409-.L88,0,0
.L412:
	.word	-1,.L88,.L407-.L88,.L408-.L88,.L413-.L88,.L32-.L88,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_info'
.L140:
	.word	601
	.half	3
	.word	.L141
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L143,.L142
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_SetControllerMode',0,1,208,10,16
	.word	.L421
	.byte	1,1,1
	.word	.L90,.L422,.L89
	.byte	4
	.byte	'Controller',0,1,208,10,53
	.word	.L281,.L423
	.byte	4
	.byte	'Transition',0,1,209,10,70
	.word	.L424,.L425
	.byte	5
	.word	.L90,.L422
	.byte	6
	.word	.L426,.L427,.L428
	.byte	7
	.word	.L429,.L430
	.byte	7
	.word	.L431,.L432
	.byte	7
	.word	.L433,.L434
	.byte	8
	.word	.L435,.L436
	.byte	9
	.byte	'HohIndex',0,1,134,31,9
	.word	.L281,.L439
	.byte	9
	.byte	'FirstTxMo',0,1,135,31,9
	.word	.L281,.L440
	.byte	9
	.byte	'NumTxMo',0,1,136,31,9
	.word	.L281,.L441
	.byte	9
	.byte	'KerIdx',0,1,138,31,9
	.word	.L281,.L442
	.byte	9
	.byte	'HwCtrlIDKer',0,1,139,31,9
	.word	.L281,.L443
	.byte	8
	.word	.L444,.L445
	.byte	9
	.byte	'val',0,1,191,31,7
	.word	.L303,.L447
	.byte	0,10
	.word	.L448,.L37,.L39
	.byte	9
	.byte	'val',0,1,207,31,7
	.word	.L303,.L449
	.byte	0,0,0,6
	.word	.L426,.L437,.L438
	.byte	7
	.word	.L429,.L430
	.byte	7
	.word	.L431,.L432
	.byte	7
	.word	.L433,.L434
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_abbrev'
.L141:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16
	.byte	2,6,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_line'
.L142:
	.word	.L862-.L861
.L861:
	.half	3
	.word	.L864-.L863
.L863:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L864:
	.byte	5,22,7,0,5,2
	.word	.L90
	.byte	3,248,10,1,5,58,9
	.half	.L865-.L90
	.byte	1,5,12,9
	.half	.L427-.L865
	.byte	3,149,20,1,5,17,9
	.half	.L681-.L427
	.byte	3,1,1,5,8,9
	.half	.L680-.L681
	.byte	3,4,1,7,9
	.half	.L866-.L680
	.byte	3,57,1,7,9
	.half	.L867-.L866
	.byte	3,122,1,7,9
	.half	.L868-.L867
	.byte	1,5,33,9
	.half	.L36-.L868
	.byte	3,83,1,5,36,9
	.half	.L869-.L36
	.byte	3,1,1,5,64,9
	.half	.L870-.L869
	.byte	1,9
	.half	.L678-.L870
	.byte	3,4,1,5,9,9
	.half	.L683-.L678
	.byte	3,4,1,5,67,9
	.half	.L871-.L683
	.byte	3,120,1,5,43,9
	.half	.L682-.L871
	.byte	3,6,1,7,9
	.half	.L872-.L682
	.byte	1,5,9,9
	.half	.L41-.L872
	.byte	3,2,1,5,18,9
	.half	.L873-.L41
	.byte	3,2,1,5,9,9
	.half	.L679-.L873
	.byte	3,126,1,5,18,9
	.half	.L874-.L679
	.byte	3,2,1,5,9,9
	.half	.L685-.L874
	.byte	3,126,1,5,43,3,126,1,5,7,7,9
	.half	.L42-.L685
	.byte	3,31,1,5,49,9
	.half	.L446-.L42
	.byte	3,4,1,5,3,3,2,1,5,49,9
	.half	.L38-.L446
	.byte	3,4,1,5,3,3,2,1,5,7,9
	.half	.L37-.L38
	.byte	3,4,1,5,49,9
	.half	.L39-.L37
	.byte	3,9,1,5,7,9
	.half	.L44-.L39
	.byte	1,5,34,9
	.half	.L875-.L44
	.byte	1,5,10,9
	.half	.L428-.L875
	.byte	3,183,107,1,5,47,9
	.half	.L437-.L428
	.byte	3,201,20,1,5,1,9
	.half	.L438-.L437
	.byte	3,184,107,1,7,9
	.half	.L144-.L438
	.byte	0,1,1
.L862:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_ranges'
.L143:
	.word	-1,.L90,0,.L144-.L90,0,0
.L436:
	.word	-1,.L90,.L427-.L90,.L428-.L90,.L437-.L90,.L438-.L90,-1,.L94,0,.L239-.L94,0,0
.L445:
	.word	-1,.L90,.L42-.L90,.L446-.L90,-1,.L92,0,.L244-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_info'
.L145:
	.word	659
	.half	3
	.word	.L146
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L148,.L147
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_DisableControllerInterrupts',0,1,169,11,6,1,1,1
	.word	.L96,.L450,.L95
	.byte	4
	.byte	'Controller',0,1,169,11,54
	.word	.L281,.L451
	.byte	5
	.word	.L96,.L450
	.byte	6
	.word	.L452,.L453,.L450
	.byte	7
	.word	.L454,.L455
	.byte	8
	.word	.L456,.L457
	.byte	9
	.byte	'RegAddress',0,1,244,33,21
	.word	.L458,.L459
	.byte	9
	.byte	'HwControllerId',0,1,245,33,9
	.word	.L281,.L460
	.byte	9
	.byte	'BOSrcNum',0,1,246,33,9
	.word	.L281,.L461
	.byte	9
	.byte	'RxSrcNum',0,1,247,33,9
	.word	.L281,.L462
	.byte	9
	.byte	'TxSreVal',0,1,248,33,10
	.word	.L303,.L463
	.byte	9
	.byte	'RxSreVal',0,1,249,33,10
	.word	.L303,.L464
	.byte	9
	.byte	'KerIdx',0,1,250,33,9
	.word	.L281,.L465
	.byte	9
	.byte	'HwCtrlIDKer',0,1,251,33,9
	.word	.L281,.L466
	.byte	9
	.byte	'IntSrcOffset',0,1,252,33,9
	.word	.L281,.L467
	.byte	10
	.word	.L468,.L469,.L470
	.byte	9
	.byte	'val',0,1,169,34,5
	.word	.L303,.L471
	.byte	0,10
	.word	.L472,.L470,.L473
	.byte	9
	.byte	'val',0,1,175,34,5
	.word	.L303,.L474
	.byte	0,10
	.word	.L475,.L473,.L46
	.byte	9
	.byte	'val',0,1,181,34,5
	.word	.L303,.L476
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_abbrev'
.L146:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0
	.byte	10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_line'
.L147:
	.word	.L877-.L876
.L876:
	.half	3
	.word	.L879-.L878
.L878:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L879:
	.byte	5,6,7,0,5,2
	.word	.L96
	.byte	3,168,11,1,5,36,3,215,22,1,5,7,9
	.half	.L453-.L96
	.byte	3,2,1,5,41,9
	.half	.L880-.L453
	.byte	1,5,3,9
	.half	.L881-.L880
	.byte	1,5,22,7,9
	.half	.L882-.L881
	.byte	3,2,1,5,26,9
	.half	.L689-.L882
	.byte	3,13,1,5,55,9
	.half	.L696-.L689
	.byte	3,4,1,5,5,3,9,1,5,26,9
	.half	.L883-.L696
	.byte	3,115,1,5,17,9
	.half	.L884-.L883
	.byte	3,123,1,5,32,3,18,1,5,26,9
	.half	.L697-.L884
	.byte	3,115,1,5,17,9
	.half	.L885-.L697
	.byte	3,4,1,5,26,9
	.half	.L698-.L885
	.byte	3,124,1,9
	.half	.L886-.L698
	.byte	3,8,1,5,27,9
	.half	.L887-.L886
	.byte	3,6,1,5,43,9
	.half	.L888-.L887
	.byte	3,115,1,5,26,3,7,1,5,22,9
	.half	.L699-.L888
	.byte	3,1,1,5,17,9
	.half	.L700-.L699
	.byte	3,121,1,5,60,9
	.half	.L702-.L700
	.byte	3,7,1,5,65,9
	.half	.L889-.L702
	.byte	3,4,1,5,27,3,1,1,5,57,9
	.half	.L701-.L889
	.byte	3,1,1,5,43,9
	.half	.L890-.L701
	.byte	1,5,76,9
	.half	.L891-.L890
	.byte	3,126,1,5,45,1,5,5,9
	.half	.L469-.L891
	.byte	3,11,1,9
	.half	.L470-.L469
	.byte	3,6,1,9
	.half	.L473-.L470
	.byte	3,6,1,5,49,9
	.half	.L46-.L473
	.byte	3,6,1,5,35,9
	.half	.L892-.L46
	.byte	3,3,1,5,1,7,9
	.half	.L149-.L892
	.byte	3,130,105,0,1,1
.L877:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_ranges'
.L148:
	.word	-1,.L96,0,.L149-.L96,0,0
.L457:
	.word	-1,.L96,.L453-.L96,.L450-.L96,-1,.L98,0,.L229-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_info'
.L150:
	.word	634
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L153,.L152
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_EnableControllerInterrupts',0,1,217,11,6,1,1,1
	.word	.L100,.L477,.L99
	.byte	4
	.byte	'Controller',0,1,217,11,53
	.word	.L281,.L478
	.byte	5
	.word	.L100,.L477
	.byte	6
	.word	.L479,.L480,.L477
	.byte	7
	.word	.L481,.L482
	.byte	8
	.word	.L483,.L480,.L477
	.byte	9
	.byte	'RegAddress',0,1,218,34,21
	.word	.L458,.L484
	.byte	9
	.byte	'RegSetMask',0,1,219,34,10
	.word	.L303,.L485
	.byte	9
	.byte	'HwControllerId',0,1,220,34,9
	.word	.L281,.L486
	.byte	9
	.byte	'BOSrcNum',0,1,221,34,9
	.word	.L281,.L487
	.byte	9
	.byte	'RxSrcNum',0,1,222,34,9
	.word	.L281,.L488
	.byte	9
	.byte	'KerIdx',0,1,223,34,9
	.word	.L281,.L489
	.byte	9
	.byte	'HwCtrlIDKer',0,1,224,34,9
	.word	.L281,.L490
	.byte	9
	.byte	'IntSrcOffset',0,1,225,34,9
	.word	.L281,.L491
	.byte	10
	.word	.L492,.L493
	.byte	9
	.byte	'val',0,1,135,35,7
	.word	.L303,.L500
	.byte	0,10
	.word	.L501,.L502
	.byte	9
	.byte	'val',0,1,143,35,7
	.word	.L303,.L509
	.byte	0,8
	.word	.L510,.L508,.L47
	.byte	9
	.byte	'val',0,1,152,35,7
	.word	.L303,.L511
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,10,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_line'
.L152:
	.word	.L894-.L893
.L893:
	.half	3
	.word	.L896-.L895
.L895:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L896:
	.byte	5,6,7,0,5,2
	.word	.L100
	.byte	3,216,11,1,5,35,3,139,23,1,5,7,9
	.half	.L480-.L100
	.byte	3,4,1,5,41,9
	.half	.L897-.L480
	.byte	1,5,3,9
	.half	.L898-.L897
	.byte	1,5,51,7,9
	.half	.L899-.L898
	.byte	3,4,1,5,5,9
	.half	.L900-.L899
	.byte	3,2,1,5,24,7,9
	.half	.L901-.L900
	.byte	3,2,1,5,19,9
	.half	.L706-.L901
	.byte	3,10,1,5,9,3,10,1,9
	.half	.L708-.L706
	.byte	3,122,1,5,31,3,7,1,5,9,9
	.half	.L902-.L708
	.byte	3,127,1,5,58,9
	.half	.L903-.L902
	.byte	3,1,1,5,23,9
	.half	.L904-.L903
	.byte	3,121,1,5,29,9
	.half	.L905-.L904
	.byte	3,6,1,5,58,3,1,1,5,16,9
	.half	.L707-.L905
	.byte	3,127,1,5,27,9
	.half	.L709-.L707
	.byte	3,2,1,5,7,9
	.half	.L494-.L709
	.byte	3,1,1,5,19,9
	.half	.L495-.L494
	.byte	3,118,1,5,7,9
	.half	.L496-.L495
	.byte	3,10,1,5,37,9
	.half	.L497-.L496
	.byte	3,127,1,5,7,9
	.half	.L498-.L497
	.byte	3,1,1,5,55,9
	.half	.L499-.L498
	.byte	3,5,1,5,27,9
	.half	.L906-.L499
	.byte	3,2,1,5,55,3,7,1,5,7,9
	.half	.L503-.L906
	.byte	3,122,1,5,69,9
	.half	.L504-.L503
	.byte	3,7,1,5,7,9
	.half	.L505-.L504
	.byte	3,121,1,5,37,9
	.half	.L506-.L505
	.byte	3,127,1,5,52,9
	.half	.L710-.L506
	.byte	3,9,1,5,7,9
	.half	.L507-.L710
	.byte	3,120,1,9
	.half	.L508-.L507
	.byte	3,9,1,5,34,9
	.half	.L47-.L508
	.byte	3,5,1,5,1,7,9
	.half	.L154-.L47
	.byte	3,211,104,0,1,1
.L894:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_ranges'
.L153:
	.word	-1,.L100,0,.L154-.L100,0,0
.L493:
	.word	-1,.L100,.L494-.L100,.L495-.L100,.L496-.L100,.L497-.L100,.L498-.L100,.L499-.L100,0,0
.L502:
	.word	-1,.L100,.L503-.L100,.L504-.L100,.L505-.L100,.L506-.L100,.L507-.L100,.L508-.L100,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_info'
.L155:
	.word	822
	.half	3
	.word	.L156
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L158,.L157
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_Write',0,1,147,12,16
	.word	.L421
	.byte	1,1,1
	.word	.L102,.L512,.L101
	.byte	4
	.byte	'Hth',0,1,147,12,53
	.word	.L281,.L513
	.byte	4
	.byte	'PduInfo',0,1,148,12,55
	.word	.L514,.L515
	.byte	5
	.word	.L102,.L512
	.byte	6
	.byte	'HwObjectId',0,1,151,12,10
	.word	.L277,.L516
	.byte	7
	.word	.L517,.L518,.L519
	.byte	8
	.word	.L520,.L521
	.byte	8
	.word	.L522,.L523
	.byte	8
	.word	.L524,.L525
	.byte	9
	.word	.L526,.L527
	.byte	6
	.byte	'MoData0_3',0,1,222,36,20
	.word	.L458,.L531
	.byte	6
	.byte	'MoData4_7',0,1,223,36,20
	.word	.L458,.L532
	.byte	6
	.byte	'Index',0,1,231,36,9
	.word	.L281,.L533
	.byte	6
	.byte	'Index1',0,1,232,36,9
	.word	.L281,.L534
	.byte	6
	.byte	'TxMOIdx',0,1,233,36,9
	.word	.L281,.L535
	.byte	6
	.byte	'HthIdx',0,1,234,36,9
	.word	.L281,.L536
	.byte	6
	.byte	'RetVal',0,1,243,36,18
	.word	.L421,.L537
	.byte	6
	.byte	'KerIdx',0,1,244,36,9
	.word	.L281,.L538
	.byte	6
	.byte	'MsgDLC',0,1,245,36,9
	.word	.L281,.L539
	.byte	6
	.byte	'CanCtrStat',0,1,246,36,18
	.word	.L540,.L541
	.byte	6
	.byte	'Loc_Sdu',0,1,247,36,9
	.word	.L281,.L542
	.byte	10
	.word	.L543,.L544,.L545
	.byte	6
	.byte	'val',0,1,231,37,8
	.word	.L303,.L546
	.byte	0,10
	.word	.L547,.L548,.L549
	.byte	6
	.byte	'val',0,1,135,38,7
	.word	.L303,.L550
	.byte	0,9
	.word	.L551,.L552
	.byte	6
	.byte	'val',0,1,187,38,11
	.word	.L303,.L560
	.byte	0,9
	.word	.L561,.L562
	.byte	6
	.byte	'val',0,1,202,38,11
	.word	.L303,.L570
	.byte	0,0,0,7
	.word	.L517,.L528,.L529
	.byte	8
	.word	.L520,.L521
	.byte	8
	.word	.L522,.L523
	.byte	8
	.word	.L524,.L525
	.byte	0,7
	.word	.L517,.L530,.L512
	.byte	8
	.word	.L520,.L521
	.byte	8
	.word	.L522,.L523
	.byte	8
	.word	.L524,.L525
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_abbrev'
.L156:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_line'
.L157:
	.word	.L908-.L907
.L907:
	.half	3
	.word	.L910-.L909
.L909:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L910:
	.byte	5,18,7,0,5,2
	.word	.L102
	.byte	3,190,12,1,5,10,9
	.half	.L518-.L102
	.byte	3,186,24,1,5,16,3,154,103,1,5,10,9
	.half	.L713-.L518
	.byte	3,231,24,1,5,16,3,153,103,1,5,32,9
	.half	.L519-.L713
	.byte	3,44,1,5,56,9
	.half	.L911-.L519
	.byte	1,5,5,9
	.half	.L528-.L911
	.byte	3,193,24,1,5,66,9
	.half	.L529-.L528
	.byte	3,191,103,1,5,5,9
	.half	.L530-.L529
	.byte	3,193,24,1,5,34,3,11,1,5,13,9
	.half	.L714-.L530
	.byte	3,41,1,5,54,9
	.half	.L912-.L714
	.byte	3,1,1,5,14,3,126,1,5,7,9
	.half	.L913-.L912
	.byte	3,6,1,5,3,9
	.half	.L914-.L913
	.byte	1,5,5,7,9
	.half	.L915-.L914
	.byte	3,3,1,5,35,9
	.half	.L916-.L915
	.byte	3,4,1,5,10,9
	.half	.L917-.L916
	.byte	3,7,1,5,5,9
	.half	.L918-.L917
	.byte	1,5,8,7,9
	.half	.L919-.L918
	.byte	3,30,1,9
	.half	.L544-.L919
	.byte	3,2,1,5,23,9
	.half	.L545-.L544
	.byte	3,17,1,5,7,9
	.half	.L548-.L545
	.byte	3,15,1,5,44,9
	.half	.L549-.L548
	.byte	3,10,1,5,11,9
	.half	.L553-.L549
	.byte	3,42,1,5,68,3,86,1,5,11,9
	.half	.L722-.L553
	.byte	3,42,1,5,68,3,90,1,5,11,9
	.half	.L554-.L722
	.byte	3,53,1,5,16,9
	.half	.L563-.L554
	.byte	3,100,1,5,50,1,5,9,9
	.half	.L52-.L563
	.byte	3,2,1,5,27,7,9
	.half	.L920-.L52
	.byte	3,6,1,5,11,9
	.half	.L555-.L920
	.byte	3,5,1,5,32,9
	.half	.L556-.L555
	.byte	3,123,1,5,11,9
	.half	.L557-.L556
	.byte	3,5,1,5,32,9
	.half	.L558-.L557
	.byte	3,123,1,5,11,9
	.half	.L559-.L558
	.byte	3,5,1,5,48,9
	.half	.L53-.L559
	.byte	3,5,1,5,46,9
	.half	.L921-.L53
	.byte	1,5,27,7,9
	.half	.L922-.L921
	.byte	3,5,1,5,11,9
	.half	.L564-.L922
	.byte	3,5,1,5,32,9
	.half	.L565-.L564
	.byte	3,123,1,5,11,9
	.half	.L566-.L565
	.byte	3,5,1,5,32,9
	.half	.L567-.L566
	.byte	3,123,1,5,11,9
	.half	.L568-.L567
	.byte	3,5,1,5,17,9
	.half	.L569-.L568
	.byte	3,3,1,5,57,9
	.half	.L54-.L569
	.byte	3,97,1,5,42,9
	.half	.L51-.L54
	.byte	1,5,50,9
	.half	.L923-.L51
	.byte	1,5,36,7,9
	.half	.L924-.L923
	.byte	3,200,0,1,5,41,9
	.half	.L723-.L924
	.byte	3,1,1,5,68,9
	.half	.L727-.L723
	.byte	3,127,1,5,34,9
	.half	.L925-.L727
	.byte	1,5,16,9
	.half	.L720-.L925
	.byte	1,5,41,3,1,1,5,7,9
	.half	.L719-.L720
	.byte	3,2,1,5,25,9
	.half	.L926-.L719
	.byte	3,4,1,5,7,1,5,25,9
	.half	.L927-.L926
	.byte	1,5,33,9
	.half	.L928-.L927
	.byte	1,5,52,9
	.half	.L929-.L928
	.byte	1,5,43,9
	.half	.L930-.L929
	.byte	1,5,10,9
	.half	.L931-.L930
	.byte	3,202,126,1,5,78,9
	.half	.L932-.L931
	.byte	3,175,1,1,5,14,9
	.half	.L50-.L932
	.byte	3,12,1,5,5,9
	.half	.L55-.L50
	.byte	3,4,1,5,79,9
	.half	.L933-.L55
	.byte	3,1,1,5,35,9
	.half	.L49-.L933
	.byte	3,7,1,5,12,9
	.half	.L934-.L49
	.byte	3,2,1,5,3,9
	.half	.L56-.L934
	.byte	3,2,1,5,1,3,187,101,1,7,9
	.half	.L159-.L56
	.byte	0,1,1
.L908:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_ranges'
.L158:
	.word	-1,.L102,0,.L159-.L102,0,0
.L527:
	.word	-1,.L102,.L518-.L102,.L519-.L102,.L528-.L102,.L529-.L102,.L530-.L102,.L512-.L102,-1,.L104,0,.L234-.L104
	.word	0,0
.L552:
	.word	-1,.L102,.L553-.L102,.L554-.L102,.L555-.L102,.L556-.L102,.L557-.L102,.L558-.L102,.L559-.L102,.L53-.L102
	.word	0,0
.L562:
	.word	-1,.L102,.L554-.L102,.L563-.L102,.L564-.L102,.L565-.L102,.L566-.L102,.L567-.L102,.L568-.L102,.L569-.L102
	.word	0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_info'
.L160:
	.word	312
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L163,.L162
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_Write',0,1,234,12,6,1,1,1
	.word	.L106,.L571,.L105
	.byte	4
	.word	.L106,.L571
	.byte	5
	.byte	'CtrlIndex',0,1,237,12,9
	.word	.L281,.L572
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_line'
.L162:
	.word	.L936-.L935
.L935:
	.half	3
	.word	.L938-.L937
.L937:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L938:
	.byte	5,23,7,0,5,2
	.word	.L106
	.byte	3,247,12,1,5,3,9
	.half	.L939-.L106
	.byte	1,5,18,7,9
	.half	.L940-.L939
	.byte	3,7,1,5,68,1,5,9,9
	.half	.L59-.L940
	.byte	3,5,1,5,23,9
	.half	.L941-.L59
	.byte	1,5,50,9
	.half	.L942-.L941
	.byte	1,5,63,9
	.half	.L943-.L942
	.byte	3,1,1,5,7,9
	.half	.L944-.L943
	.byte	3,126,1,5,48,7,9
	.half	.L945-.L944
	.byte	3,5,1,5,78,9
	.half	.L60-.L945
	.byte	3,119,1,5,68,1,5,1,7,9
	.half	.L58-.L60
	.byte	3,15,1,7,9
	.half	.L164-.L58
	.byte	0,1,1
.L936:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_ranges'
.L163:
	.word	-1,.L106,0,.L164-.L106,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_info'
.L165:
	.word	287
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L168,.L167
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_Read',0,1,170,13,6,1,1,1
	.word	.L108,.L573,.L107
	.byte	4
	.word	.L108,.L573
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_line'
.L167:
	.word	.L947-.L946
.L946:
	.half	3
	.word	.L949-.L948
.L948:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L949:
	.byte	5,1,7,0,5,2
	.word	.L108
	.byte	3,211,13,1,7,9
	.half	.L169-.L108
	.byte	0,1,1
.L947:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L108,0,.L169-.L108,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_info'
.L170:
	.word	313
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L173,.L172
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_BusOff',0,1,239,13,6,1,1,1
	.word	.L110,.L574,.L109
	.byte	4
	.word	.L110,.L574
	.byte	5
	.byte	'CtrlIndex',0,1,241,13,9
	.word	.L281,.L575
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_line'
.L172:
	.word	.L951-.L950
.L950:
	.half	3
	.word	.L953-.L952
.L952:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L953:
	.byte	5,23,7,0,5,2
	.word	.L110
	.byte	3,250,13,1,5,3,9
	.half	.L954-.L110
	.byte	1,5,18,7,9
	.half	.L955-.L954
	.byte	3,5,1,5,68,1,5,9,9
	.half	.L62-.L955
	.byte	3,5,1,5,23,9
	.half	.L956-.L62
	.byte	1,5,50,9
	.half	.L957-.L956
	.byte	1,5,61,9
	.half	.L958-.L957
	.byte	3,1,1,5,7,9
	.half	.L959-.L958
	.byte	3,126,1,5,48,7,9
	.half	.L960-.L959
	.byte	3,5,1,5,78,9
	.half	.L63-.L960
	.byte	3,119,1,5,68,1,5,1,7,9
	.half	.L61-.L63
	.byte	3,13,1,7,9
	.half	.L174-.L61
	.byte	0,1,1
.L951:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L110,0,.L174-.L110,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_info'
.L175:
	.word	289
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L178,.L177
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_Wakeup',0,1,168,14,6,1,1,1
	.word	.L112,.L576,.L111
	.byte	4
	.word	.L112,.L576
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_line'
.L177:
	.word	.L962-.L961
.L961:
	.half	3
	.word	.L964-.L963
.L963:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L964:
	.byte	5,1,7,0,5,2
	.word	.L112
	.byte	3,213,14,1,7,9
	.half	.L179-.L112
	.byte	0,1,1
.L962:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L112,0,.L179-.L112,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_info'
.L180:
	.word	287
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L183,.L182
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_Mode',0,1,241,14,6,1,1,1
	.word	.L114,.L577,.L113
	.byte	4
	.word	.L114,.L577
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_line'
.L182:
	.word	.L966-.L965
.L965:
	.half	3
	.word	.L968-.L967
.L967:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L968:
	.byte	5,1,7,0,5,2
	.word	.L114
	.byte	3,246,14,1,7,9
	.half	.L184-.L114
	.byte	0,1,1
.L966:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L114,0,.L184-.L114,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_info'
.L185:
	.word	309
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L188,.L187
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_CheckWakeup',0,1,148,15,16
	.word	.L421
	.byte	1,1,1
	.word	.L116,.L578,.L115
	.byte	4
	.byte	'Controller',0,1,148,15,47
	.word	.L281,.L579
	.byte	5
	.word	.L116,.L578
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_line'
.L187:
	.word	.L970-.L969
.L969:
	.half	3
	.word	.L972-.L971
.L971:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L972:
	.byte	5,12,7,0,5,2
	.word	.L116
	.byte	3,184,15,1,5,1,3,1,1,7,9
	.half	.L189-.L116
	.byte	0,1,1
.L970:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L116,0,.L189-.L116,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_info'
.L190:
	.word	406
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L193,.L192
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_IsrBusOffHandler',0,1,216,17,6,1,1,1
	.word	.L124,.L580,.L123
	.byte	4
	.byte	'HwControllerId',0,1,216,17,42
	.word	.L281,.L581
	.byte	5
	.word	.L582
	.byte	6
	.byte	'BoffStatus',0,1,218,17,9
	.word	.L281,.L583
	.byte	6
	.byte	'ControllerId',0,1,219,17,9
	.word	.L281,.L584
	.byte	6
	.byte	'KerIdx',0,1,220,17,9
	.word	.L281,.L585
	.byte	6
	.byte	'HwCtrlIDKer',0,1,221,17,9
	.word	.L281,.L586
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_line'
.L192:
	.word	.L974-.L973
.L973:
	.half	3
	.word	.L976-.L975
.L975:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L976:
	.byte	5,12,7,0,5,2
	.word	.L124
	.byte	3,223,17,1,5,1,9
	.half	.L760-.L124
	.byte	3,52,1,7,9
	.half	.L194-.L760
	.byte	0,1,1
.L974:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L124,0,.L194-.L124,0,0
.L582:
	.word	-1,.L124,0,.L580-.L124,-1,.L126,0,.L224-.L126,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_info'
.L195:
	.word	410
	.half	3
	.word	.L196
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L198,.L197
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_IsrBusOffRuntime',0,1,176,18,6,1,1,1
	.word	.L128,.L587,.L127
	.byte	4
	.byte	'HwControllerId',0,1,176,18,42
	.word	.L281,.L588
	.byte	5
	.word	.L128,.L587
	.byte	6
	.byte	'BoffStatus',0,1,178,18,9
	.word	.L281,.L589
	.byte	6
	.byte	'ControllerId',0,1,179,18,9
	.word	.L281,.L590
	.byte	6
	.byte	'KerIdx',0,1,180,18,9
	.word	.L281,.L591
	.byte	6
	.byte	'HwCtrlIDKer',0,1,181,18,9
	.word	.L281,.L592
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_abbrev'
.L196:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_line'
.L197:
	.word	.L978-.L977
.L977:
	.half	3
	.word	.L980-.L979
.L979:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L980:
	.byte	5,12,7,0,5,2
	.word	.L128
	.byte	3,183,18,1,5,1,9
	.half	.L762-.L128
	.byte	3,53,1,7,9
	.half	.L199-.L762
	.byte	0,1,1
.L978:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_ranges'
.L198:
	.word	-1,.L128,0,.L199-.L128,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_info'
.L200:
	.word	315
	.half	3
	.word	.L201
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L203,.L202
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_IsrReceiveHandler',0,1,224,15,6,1,1,1
	.word	.L118,.L593,.L117
	.byte	4
	.byte	'HwControllerId',0,1,224,15,43
	.word	.L281,.L594
	.byte	5
	.word	.L118,.L593
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_abbrev'
.L201:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_line'
.L202:
	.word	.L982-.L981
.L981:
	.half	3
	.word	.L984-.L983
.L983:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L984:
	.byte	5,1,7,0,5,2
	.word	.L118
	.byte	3,247,15,1,7,9
	.half	.L204-.L118
	.byte	0,1,1
.L982:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_ranges'
.L203:
	.word	-1,.L118,0,.L204-.L118,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_info'
.L205:
	.word	459
	.half	3
	.word	.L206
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L208,.L207
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_IsrTransmitHandler',0,1,148,16,6,1,1,1
	.word	.L120,.L595,.L119
	.byte	4
	.byte	'HwControllerId',0,1,148,16,44
	.word	.L281,.L596
	.byte	5
	.word	.L120,.L595
	.byte	6
	.byte	'MsiMaskCopy',0,1,151,16,17
	.word	.L597,.L598
	.byte	6
	.byte	'HwObjectId',0,1,152,16,10
	.word	.L277,.L599
	.byte	6
	.byte	'PndBitPosition',0,1,153,16,9
	.word	.L281,.L600
	.byte	6
	.byte	'MsgIndex',0,1,154,16,9
	.word	.L281,.L601
	.byte	6
	.byte	'LoopBreak',0,1,155,16,9
	.word	.L281,.L602
	.byte	6
	.byte	'KerIdx',0,1,156,16,9
	.word	.L281,.L603
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_abbrev'
.L206:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_line'
.L207:
	.word	.L986-.L985
.L985:
	.half	3
	.word	.L988-.L987
.L987:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L988:
	.byte	5,6,7,0,5,2
	.word	.L120
	.byte	3,147,16,1,5,1,9
	.half	.L729-.L120
	.byte	3,14,1,5,12,7,9
	.half	.L989-.L729
	.byte	3,5,1,5,17,3,4,1,5,24,9
	.half	.L731-.L989
	.byte	1,5,48,9
	.half	.L990-.L731
	.byte	3,9,1,5,34,1,5,24,9
	.half	.L730-.L990
	.byte	3,119,1,5,13,9
	.half	.L991-.L730
	.byte	3,1,1,5,34,3,8,1,5,47,9
	.half	.L732-.L991
	.byte	1,5,41,9
	.half	.L992-.L732
	.byte	3,119,1,5,19,9
	.half	.L993-.L992
	.byte	3,4,1,5,15,9
	.half	.L994-.L993
	.byte	3,124,1,5,31,9
	.half	.L995-.L994
	.byte	3,5,1,5,33,9
	.half	.L996-.L995
	.byte	3,127,1,5,50,9
	.half	.L733-.L996
	.byte	3,1,1,5,63,7,9
	.half	.L67-.L733
	.byte	3,4,1,5,12,9
	.half	.L997-.L67
	.byte	1,5,25,9
	.half	.L998-.L997
	.byte	3,29,1,5,63,3,99,1,5,9,9
	.half	.L999-.L998
	.byte	3,29,1,5,32,9
	.half	.L1000-.L999
	.byte	3,99,1,5,21,9
	.half	.L1001-.L1000
	.byte	3,7,1,5,79,1,5,39,9
	.half	.L69-.L1001
	.byte	3,7,1,5,44,9
	.half	.L1002-.L69
	.byte	3,4,1,5,16,9
	.half	.L1003-.L1002
	.byte	3,3,1,5,49,9
	.half	.L735-.L1003
	.byte	3,122,1,5,16,9
	.half	.L1004-.L735
	.byte	3,123,1,5,59,9
	.half	.L1005-.L1004
	.byte	3,5,1,5,36,9
	.half	.L1006-.L1005
	.byte	3,6,1,5,63,9
	.half	.L1007-.L1006
	.byte	3,122,1,5,45,9
	.half	.L737-.L1007
	.byte	3,2,1,5,68,9
	.half	.L738-.L737
	.byte	3,4,1,5,34,9
	.half	.L1008-.L738
	.byte	1,5,16,9
	.half	.L1009-.L1008
	.byte	1,5,14,9
	.half	.L736-.L1009
	.byte	3,3,1,5,27,9
	.half	.L1010-.L736
	.byte	1,5,38,9
	.half	.L739-.L1010
	.byte	1,5,31,9
	.half	.L1011-.L739
	.byte	3,1,1,5,45,9
	.half	.L1012-.L1011
	.byte	3,127,1,5,33,9
	.half	.L1013-.L1012
	.byte	3,5,1,5,14,9
	.half	.L1014-.L1013
	.byte	3,127,1,5,9,9
	.half	.L1015-.L1014
	.byte	3,1,1,5,29,9
	.half	.L1016-.L1015
	.byte	3,127,1,5,42,9
	.half	.L1017-.L1016
	.byte	1,5,21,9
	.half	.L68-.L1017
	.byte	3,106,1,5,35,9
	.half	.L1018-.L68
	.byte	1,5,45,9
	.half	.L1019-.L1018
	.byte	1,5,48,9
	.half	.L1020-.L1019
	.byte	1,5,11,9
	.half	.L1021-.L1020
	.byte	1,5,62,7,9
	.half	.L1022-.L1021
	.byte	3,1,1,5,13,7,9
	.half	.L70-.L1022
	.byte	3,118,1,5,17,3,127,1,5,13,9
	.half	.L734-.L70
	.byte	3,1,1,5,31,9
	.half	.L740-.L734
	.byte	3,127,1,5,50,9
	.half	.L1023-.L740
	.byte	1,5,10,7,9
	.half	.L66-.L1023
	.byte	3,41,1,5,33,9
	.half	.L1024-.L66
	.byte	1,5,31,9
	.half	.L1025-.L1024
	.byte	1,5,1,9
	.half	.L65-.L1025
	.byte	3,5,1,7,9
	.half	.L209-.L65
	.byte	0,1,1
.L986:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_ranges'
.L208:
	.word	-1,.L120,0,.L209-.L120,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_info'
.L210:
	.word	464
	.half	3
	.word	.L211
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L213,.L212
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_IsrTransmitRuntime',0,1,250,16,6,1,1,1
	.word	.L122,.L604,.L121
	.byte	4
	.byte	'HwControllerId',0,1,250,16,44
	.word	.L281,.L605
	.byte	5
	.word	.L122,.L604
	.byte	6
	.byte	'HwObjectId',0,1,253,16,9
	.word	.L277,.L606
	.byte	6
	.byte	'KerIdx',0,1,254,16,10
	.word	.L281,.L607
	.byte	6
	.byte	'TxObjectStart',0,1,129,17,10
	.word	.L281,.L608
	.byte	6
	.byte	'TxObjectcount',0,1,130,17,10
	.word	.L281,.L609
	.byte	6
	.byte	'ControllerId',0,1,131,17,10
	.word	.L281,.L610
	.byte	6
	.byte	'LoopIndex',0,1,132,17,10
	.word	.L281,.L611
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_abbrev'
.L211:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_line'
.L212:
	.word	.L1027-.L1026
.L1026:
	.half	3
	.word	.L1029-.L1028
.L1028:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1029:
	.byte	5,2,7,0,5,2
	.word	.L122
	.byte	3,136,17,1,5,19,7,9
	.half	.L1030-.L122
	.byte	3,8,1,5,32,9
	.half	.L1031-.L1030
	.byte	1,5,13,9
	.half	.L1032-.L1031
	.byte	3,125,1,5,32,9
	.half	.L741-.L1032
	.byte	3,3,1,5,20,9
	.half	.L742-.L741
	.byte	3,4,1,5,18,9
	.half	.L1033-.L742
	.byte	3,20,1,5,34,9
	.half	.L744-.L1033
	.byte	3,108,1,5,36,9
	.half	.L1034-.L744
	.byte	3,1,1,5,66,9
	.half	.L1035-.L1034
	.byte	3,5,1,9
	.half	.L743-.L1035
	.byte	3,123,1,5,12,9
	.half	.L746-.L743
	.byte	3,23,1,5,42,9
	.half	.L1036-.L746
	.byte	3,124,1,7,9
	.half	.L1037-.L1036
	.byte	1,5,8,9
	.half	.L747-.L1037
	.byte	3,14,1,5,42,9
	.half	.L1038-.L747
	.byte	3,114,1,5,12,9
	.half	.L73-.L1038
	.byte	3,4,1,5,51,9
	.half	.L1039-.L73
	.byte	3,127,1,5,12,9
	.half	.L748-.L1039
	.byte	3,1,1,5,7,9
	.half	.L1040-.L748
	.byte	1,5,38,7,9
	.half	.L1041-.L1040
	.byte	3,4,1,5,18,9
	.half	.L1042-.L1041
	.byte	1,5,70,9
	.half	.L750-.L1042
	.byte	1,5,36,9
	.half	.L1043-.L750
	.byte	1,5,18,9
	.half	.L749-.L1043
	.byte	1,5,8,9
	.half	.L751-.L749
	.byte	3,6,1,5,66,9
	.half	.L74-.L751
	.byte	3,114,1,5,42,9
	.half	.L745-.L74
	.byte	1,5,1,7,9
	.half	.L71-.L745
	.byte	3,22,1,7,9
	.half	.L214-.L71
	.byte	0,1,1
.L1027:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_ranges'
.L213:
	.word	-1,.L122,0,.L214-.L122,0,0
	.sdecl	'.debug_info',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_info'
.L215:
	.word	505
	.half	3
	.word	.L216
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L218,.L217
	.byte	2
	.word	.L131
	.byte	3
	.byte	'Can_lAllocateHwObject',0,1,158,52,23
	.word	.L281
	.byte	1,1
	.word	.L130,.L612,.L129
	.byte	4
	.byte	'HwControllerId',0,1,158,52,51
	.word	.L281,.L613
	.byte	4
	.byte	'HwObjectId',0,1,159,52,52
	.word	.L277,.L614
	.byte	5
	.word	.L130,.L612
	.byte	6
	.byte	'TimeOutIndex',0,1,161,52,10
	.word	.L303,.L615
	.byte	6
	.byte	'RetVal',0,1,162,52,18
	.word	.L281,.L616
	.byte	6
	.byte	'TempPanar2',0,1,163,52,9
	.word	.L281,.L617
	.byte	6
	.byte	'KerIdx',0,1,164,52,9
	.word	.L281,.L618
	.byte	5
	.word	.L619,.L620
	.byte	6
	.byte	'val',0,1,173,52,3
	.word	.L303,.L621
	.byte	0,5
	.word	.L620,.L622
	.byte	6
	.byte	'val',0,1,175,52,3
	.word	.L303,.L623
	.byte	0,5
	.word	.L622,.L624
	.byte	6
	.byte	'val',0,1,177,52,3
	.word	.L303,.L625
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_abbrev'
.L216:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_line'
.L217:
	.word	.L1045-.L1044
.L1044:
	.half	3
	.word	.L1047-.L1046
.L1046:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1047:
	.byte	5,10,7,0,5,2
	.word	.L130
	.byte	3,165,52,1,5,12,9
	.half	.L766-.L130
	.byte	3,2,1,5,17,9
	.half	.L764-.L766
	.byte	3,4,1,5,52,9
	.half	.L767-.L764
	.byte	1,5,3,3,1,1,9
	.half	.L620-.L767
	.byte	3,2,1,9
	.half	.L622-.L620
	.byte	3,2,1,5,16,9
	.half	.L624-.L622
	.byte	3,4,1,5,79,3,9,1,5,17,9
	.half	.L83-.L624
	.byte	3,3,1,5,13,9
	.half	.L82-.L83
	.byte	3,123,1,5,10,9
	.half	.L1048-.L82
	.byte	1,5,67,7,9
	.half	.L1049-.L1048
	.byte	3,2,1,5,12,7,9
	.half	.L84-.L1049
	.byte	3,16,1,5,1,3,3,1,7,9
	.half	.L219-.L84
	.byte	0,1,1
.L1045:
	.sdecl	'.debug_ranges',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_ranges'
.L218:
	.word	-1,.L130,0,.L219-.L130,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L220:
	.word	255
	.half	3
	.word	.L221
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L223,.L222
	.byte	2
	.word	.L131
	.byte	3
	.byte	'.cocofun_9',0,1,216,17,6,1
	.word	.L126,.L224,.L125
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L221:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L222:
	.word	.L1051-.L1050
.L1050:
	.half	3
	.word	.L1053-.L1052
.L1052:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1053:
	.byte	5,12,7,0,5,2
	.word	.L126
	.byte	3,223,17,1,5,25,3,29,1,5,32,9
	.half	.L752-.L126
	.byte	1,5,17,9
	.half	.L1054-.L752
	.byte	3,100,1,5,32,9
	.half	.L754-.L1054
	.byte	3,28,1,5,44,9
	.half	.L1055-.L754
	.byte	1,5,43,9
	.half	.L753-.L1055
	.byte	1,5,59,9
	.half	.L1056-.L753
	.byte	1,5,62,9
	.half	.L756-.L1056
	.byte	1,5,44,9
	.half	.L1057-.L756
	.byte	3,2,1,5,7,9
	.half	.L755-.L1057
	.byte	1,5,60,7,9
	.half	.L1058-.L755
	.byte	3,1,1,5,34,7,9
	.half	.L761-.L1058
	.byte	3,4,1,5,42,3,127,1,5,20,9
	.half	.L757-.L761
	.byte	3,3,1,5,33,9
	.half	.L1059-.L757
	.byte	1,5,28,9
	.half	.L758-.L1059
	.byte	3,4,1,5,55,9
	.half	.L1060-.L758
	.byte	1,5,5,9
	.half	.L759-.L1060
	.byte	1,5,51,7,9
	.half	.L1061-.L759
	.byte	3,3,1,5,49,1,5,71,9
	.half	.L76-.L1061
	.byte	3,115,1,7,9
	.half	.L224-.L76
	.byte	0,1,1,5,12,0,5,2
	.word	.L126
	.byte	3,183,18,1,5,24,3,29,1,5,17,9
	.half	.L1054-.L126
	.byte	3,100,1,5,24,9
	.half	.L754-.L1054
	.byte	3,28,1,5,65,9
	.half	.L756-.L754
	.byte	3,1,1,5,9,9
	.half	.L1057-.L756
	.byte	3,2,1,5,7,9
	.half	.L755-.L1057
	.byte	1,5,68,7,9
	.half	.L1058-.L755
	.byte	3,1,1,5,5,7,9
	.half	.L761-.L1058
	.byte	3,3,1,5,20,9
	.half	.L757-.L761
	.byte	3,3,1,5,33,9
	.half	.L1059-.L757
	.byte	1,5,28,9
	.half	.L758-.L1059
	.byte	3,4,1,5,55,9
	.half	.L1060-.L758
	.byte	1,5,5,9
	.half	.L759-.L1060
	.byte	1,5,51,7,9
	.half	.L1061-.L759
	.byte	3,3,1,5,49,1,5,71,9
	.half	.L76-.L1061
	.byte	3,154,127,1,7,9
	.half	.L224-.L76
	.byte	0,1,1
.L1051:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L223:
	.word	-1,.L126,0,.L224-.L126,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_10')
	.sect	'.debug_info'
.L225:
	.word	256
	.half	3
	.word	.L226
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L228,.L227
	.byte	2
	.word	.L131
	.byte	3
	.byte	'.cocofun_10',0,1,169,11,6,1
	.word	.L98,.L229,.L97
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_10')
	.sect	'.debug_abbrev'
.L226:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_10')
	.sect	'.debug_line'
.L227:
	.word	.L1063-.L1062
.L1062:
	.half	3
	.word	.L1065-.L1064
.L1064:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1065:
	.byte	5,22,7,0,5,2
	.word	.L98
	.byte	3,131,34,1,5,58,9
	.half	.L1066-.L98
	.byte	1,5,17,9
	.half	.L690-.L1066
	.byte	3,9,1,5,14,9
	.half	.L1067-.L690
	.byte	3,121,1,5,46,9
	.half	.L692-.L1067
	.byte	3,7,1,5,28,9
	.half	.L1068-.L692
	.byte	3,123,1,5,46,9
	.half	.L1069-.L1068
	.byte	3,5,1,5,28,9
	.half	.L693-.L1069
	.byte	3,123,1,5,56,9
	.half	.L694-.L693
	.byte	3,5,1,5,8,9
	.half	.L1070-.L694
	.byte	1,5,19,9
	.half	.L695-.L1070
	.byte	3,122,1,5,7,9
	.half	.L691-.L695
	.byte	3,7,1,5,38,9
	.half	.L1071-.L691
	.byte	1,9
	.half	.L229-.L1071
	.byte	0,1,1,5,24,0,5,2
	.word	.L98
	.byte	3,239,34,1,5,60,9
	.half	.L1066-.L98
	.byte	1,5,19,9
	.half	.L690-.L1066
	.byte	3,11,1,5,16,9
	.half	.L1067-.L690
	.byte	3,120,1,5,48,9
	.half	.L692-.L1067
	.byte	3,8,1,5,30,9
	.half	.L1068-.L692
	.byte	3,122,1,5,48,9
	.half	.L1069-.L1068
	.byte	3,6,1,5,30,9
	.half	.L693-.L1069
	.byte	3,122,1,5,58,9
	.half	.L694-.L693
	.byte	3,6,1,5,10,9
	.half	.L1070-.L694
	.byte	1,5,21,9
	.half	.L695-.L1070
	.byte	3,121,1,5,9,9
	.half	.L691-.L695
	.byte	3,8,1,5,40,9
	.half	.L1071-.L691
	.byte	1,5,38,3,146,127,1,7,9
	.half	.L229-.L1071
	.byte	0,1,1
.L1063:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_10')
	.sect	'.debug_ranges'
.L228:
	.word	-1,.L98,0,.L229-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_11')
	.sect	'.debug_info'
.L230:
	.word	256
	.half	3
	.word	.L231
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L233,.L232
	.byte	2
	.word	.L131
	.byte	3
	.byte	'.cocofun_11',0,1,147,12,16,1
	.word	.L104,.L234,.L103
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_11')
	.sect	'.debug_abbrev'
.L231:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_11')
	.sect	'.debug_line'
.L232:
	.word	.L1073-.L1072
.L1072:
	.half	3
	.word	.L1075-.L1074
.L1074:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1075:
	.byte	5,13,7,0,5,2
	.word	.L104
	.byte	3,179,37,1,9
	.half	.L234-.L104
	.byte	0,1,1,5,10,0,5,2
	.word	.L104
	.byte	3,198,37,1,5,13,9
	.half	.L1076-.L104
	.byte	3,109,1,7,9
	.half	.L234-.L1076
	.byte	0,1,1,5,8,0,5,2
	.word	.L104
	.byte	3,230,37,1,5,13,9
	.half	.L1076-.L104
	.byte	3,77,1,7,9
	.half	.L234-.L1076
	.byte	0,1,1,5,44,0,5,2
	.word	.L104
	.byte	3,144,38,1,5,56,9
	.half	.L1077-.L104
	.byte	1,5,13,9
	.half	.L1076-.L1077
	.byte	3,163,127,1,7,9
	.half	.L234-.L1076
	.byte	0,1,1,5,7,0,5,2
	.word	.L104
	.byte	3,248,38,1,5,13,9
	.half	.L1076-.L104
	.byte	3,187,126,1,7,9
	.half	.L234-.L1076
	.byte	0,1,1,5,10,0,5,2
	.word	.L104
	.byte	3,198,37,1,5,13,9
	.half	.L1076-.L104
	.byte	3,109,1,7,9
	.half	.L234-.L1076
	.byte	0,1,1
.L1073:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_11')
	.sect	'.debug_ranges'
.L233:
	.word	-1,.L104,0,.L234-.L104,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_12')
	.sect	'.debug_info'
.L235:
	.word	256
	.half	3
	.word	.L236
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L238,.L237
	.byte	2
	.word	.L131
	.byte	3
	.byte	'.cocofun_12',0,1,208,10,16,1
	.word	.L94,.L239,.L93
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_12')
	.sect	'.debug_abbrev'
.L236:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_12')
	.sect	'.debug_line'
.L237:
	.word	.L1079-.L1078
.L1078:
	.half	3
	.word	.L1081-.L1080
.L1080:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1081:
	.byte	5,9,7,0,5,2
	.word	.L94
	.byte	3,161,31,1,9
	.half	.L239-.L94
	.byte	0,1,1,5,7,0,5,2
	.word	.L94
	.byte	3,206,31,1,5,9,9
	.half	.L1082-.L94
	.byte	3,83,1,7,9
	.half	.L239-.L1082
	.byte	0,1,1,5,3,0,5,2
	.word	.L94
	.byte	3,172,52,1,5,9,9
	.half	.L1082-.L94
	.byte	3,245,106,1,7,9
	.half	.L239-.L1082
	.byte	0,1,1
.L1079:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_12')
	.sect	'.debug_ranges'
.L238:
	.word	-1,.L94,0,.L239-.L94,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_13')
	.sect	'.debug_info'
.L240:
	.word	256
	.half	3
	.word	.L241
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L243,.L242
	.byte	2
	.word	.L131
	.byte	3
	.byte	'.cocofun_13',0,1,208,10,16,1
	.word	.L92,.L244,.L91
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_13')
	.sect	'.debug_abbrev'
.L241:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_13')
	.sect	'.debug_line'
.L242:
	.word	.L1084-.L1083
.L1083:
	.half	3
	.word	.L1086-.L1085
.L1085:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1086:
	.byte	5,7,7,0,5,2
	.word	.L92
	.byte	3,190,31,1,9
	.half	.L244-.L92
	.byte	0,1,1,5,7,0,5,2
	.word	.L92
	.byte	3,206,31,1,9
	.half	.L688-.L92
	.byte	3,112,1,7,9
	.half	.L244-.L688
	.byte	0,1,1
.L1084:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_13')
	.sect	'.debug_ranges'
.L243:
	.word	-1,.L92,0,.L244-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_NUM_CONTROLLERS_IN_KERNEL')
	.sect	'.debug_info'
.L245:
	.word	263
	.half	3
	.word	.L246
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'CAN_NUM_CONTROLLERS_IN_KERNEL',0,1,160,5,20
	.word	.L626
	.byte	5,3
	.word	CAN_NUM_CONTROLLERS_IN_KERNEL
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_NUM_CONTROLLERS_IN_KERNEL')
	.sect	'.debug_abbrev'
.L246:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_SwObjectHandle')
	.sect	'.debug_info'
.L247:
	.word	252
	.half	3
	.word	.L248
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_SwObjectHandle',0,1,200,5,3
	.word	.L627
	.byte	5,3
	.word	Can_SwObjectHandle
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_SwObjectHandle')
	.sect	'.debug_abbrev'
.L248:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_InterruptDisableCount')
	.sect	'.debug_info'
.L249:
	.word	268
	.half	3
	.word	.L250
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_InterruptDisableCount',0,1,222,5,14
	.word	.L628
	.byte	5,3
	.word	Can_17_MCanP_InterruptDisableCount
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_InterruptDisableCount')
	.sect	'.debug_abbrev'
.L250:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_InterruptsEnabledStatus')
	.sect	'.debug_info'
.L251:
	.word	261
	.half	3
	.word	.L252
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_InterruptsEnabledStatus',0,1,226,5,14
	.word	.L628
	.byte	5,3
	.word	Can_InterruptsEnabledStatus
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_InterruptsEnabledStatus')
	.sect	'.debug_abbrev'
.L252:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_NodeIdMap')
	.sect	'.debug_info'
.L253:
	.word	247
	.half	3
	.word	.L254
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_NodeIdMap',0,1,230,5,14
	.word	.L628
	.byte	5,3
	.word	Can_NodeIdMap
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_NodeIdMap')
	.sect	'.debug_abbrev'
.L254:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_DriverState')
	.sect	'.debug_info'
.L255:
	.word	258
	.half	3
	.word	.L256
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_DriverState',0,1,251,5,37
	.word	.L281
	.byte	5,3
	.word	Can_17_MCanP_DriverState
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_DriverState')
	.sect	'.debug_abbrev'
.L256:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_kConfigPtr')
	.sect	'.debug_info'
.L257:
	.word	249
	.half	3
	.word	.L258
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_kConfigPtr',0,1,154,6,32
	.word	.L266
	.byte	1,5,3
	.word	Can_kConfigPtr
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_kConfigPtr')
	.sect	'.debug_abbrev'
.L258:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_ControllerMode')
	.sect	'.debug_info'
.L259:
	.word	261
	.half	3
	.word	.L260
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_17_MCanP_ControllerMode',0,1,165,6,3
	.word	.L629
	.byte	5,3
	.word	Can_17_MCanP_ControllerMode
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_ControllerMode')
	.sect	'.debug_abbrev'
.L260:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_RxMsiMask')
	.sect	'.debug_info'
.L261:
	.word	247
	.half	3
	.word	.L262
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_RxMsiMask',0,1,172,6,15
	.word	.L630
	.byte	5,3
	.word	Can_RxMsiMask
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_RxMsiMask')
	.sect	'.debug_abbrev'
.L262:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_TxMsiMask')
	.sect	'.debug_info'
.L263:
	.word	247
	.half	3
	.word	.L264
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L131
	.byte	3
	.byte	'Can_TxMsiMask',0,1,177,6,15
	.word	.L630
	.byte	5,3
	.word	Can_TxMsiMask
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_TxMsiMask')
	.sect	'.debug_abbrev'
.L264:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_10')
	.sect	'.debug_loc'
.L97:
	.word	-1,.L98,0,.L229-.L98
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_11')
	.sect	'.debug_loc'
.L103:
	.word	-1,.L104,0,.L234-.L104
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_12')
	.sect	'.debug_loc'
.L93:
	.word	-1,.L94,0,.L239-.L94
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_13')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L92,0,.L244-.L92
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L125:
	.word	-1,.L126,0,.L224-.L126
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_loc'
.L115:
	.word	-1,.L116,0,.L578-.L116
	.half	2
	.byte	138,0
	.word	0,0
.L579:
	.word	-1,.L116,0,.L578-.L116
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_loc'
.L461:
	.word	-1,.L96,.L697-.L96,.L46-.L96
	.half	1
	.byte	82
	.word	0,0
.L95:
	.word	-1,.L96,0,.L450-.L96
	.half	2
	.byte	138,0
	.word	0,0
.L451:
	.word	-1,.L96,0,.L453-.L96
	.half	1
	.byte	84
	.word	.L453-.L96,.L689-.L96
	.half	1
	.byte	88
	.word	.L98-.L96,.L229-.L96
	.half	1
	.byte	88
	.word	.L696-.L96,.L450-.L96
	.half	1
	.byte	88
	.word	0,0
.L455:
	.word	0,0
.L460:
	.word	-1,.L96,.L690-.L96,.L691-.L96
	.half	1
	.byte	95
	.word	0,0
.L466:
	.word	-1,.L96,.L695-.L96,.L229-.L96
	.half	1
	.byte	95
	.word	0,0
.L467:
	.word	-1,.L96,.L694-.L96,.L229-.L96
	.half	1
	.byte	81
	.word	0,0
.L465:
	.word	-1,.L96,.L692-.L96,.L693-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L459:
	.word	0,0
.L462:
	.word	-1,.L96,.L698-.L96,.L699-.L96
	.half	1
	.byte	95
	.word	0,0
.L464:
	.word	-1,.L96,.L702-.L96,.L701-.L96
	.half	1
	.byte	95
	.word	0,0
.L463:
	.word	-1,.L96,.L700-.L96,.L701-.L96
	.half	1
	.byte	81
	.word	0,0
.L471:
	.word	-1,.L96,.L703-.L96,.L704-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L474:
	.word	-1,.L96,.L704-.L96,.L705-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L476:
	.word	-1,.L96,.L705-.L96,.L46-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_loc'
.L487:
	.word	-1,.L100,.L708-.L100,.L47-.L100
	.half	1
	.byte	83
	.word	0,0
.L99:
	.word	-1,.L100,0,.L477-.L100
	.half	2
	.byte	138,0
	.word	0,0
.L478:
	.word	-1,.L100,0,.L480-.L100
	.half	1
	.byte	84
	.word	.L98-.L100,.L229-.L100
	.half	1
	.byte	88
	.word	.L480-.L100,.L477-.L100
	.half	1
	.byte	88
	.word	0,0
.L482:
	.word	0,0
.L486:
	.word	-1,.L100,.L690-.L100,.L691-.L100
	.half	1
	.byte	95
	.word	0,0
.L490:
	.word	-1,.L100,.L695-.L100,.L229-.L100
	.half	1
	.byte	95
	.word	.L706-.L100,.L707-.L100
	.half	1
	.byte	95
	.word	0,0
.L491:
	.word	-1,.L100,.L694-.L100,.L229-.L100
	.half	1
	.byte	81
	.word	.L706-.L100,.L707-.L100
	.half	1
	.byte	81
	.word	0,0
.L489:
	.word	-1,.L100,.L692-.L100,.L693-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L484:
	.word	-1,.L100,.L709-.L100,.L504-.L100
	.half	1
	.byte	98
	.word	.L503-.L100,.L47-.L100
	.half	1
	.byte	111
	.word	.L507-.L100,.L508-.L100
	.half	1
	.byte	98
	.word	0,0
.L485:
	.word	-1,.L100,.L498-.L100,.L499-.L100
	.half	1
	.byte	81
	.word	.L710-.L100,.L507-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L507-.L100,.L47-.L100
	.half	1
	.byte	95
	.word	0,0
.L488:
	.word	-1,.L100,.L496-.L100,.L503-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L500:
	.word	-1,.L100,.L498-.L100,.L504-.L100
	.half	1
	.byte	81
	.word	0,0
.L509:
	.word	-1,.L100,.L507-.L100,.L711-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L511:
	.word	-1,.L100,.L712-.L100,.L47-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_loc'
.L332:
	.word	-1,.L88,.L356-.L88,.L24-.L88
	.half	1
	.byte	93
	.word	0,0
.L87:
	.word	-1,.L88,0,.L631-.L88
	.half	2
	.byte	138,0
	.word	.L631-.L88,.L265-.L88
	.half	2
	.byte	138,16
	.word	.L265-.L88,.L265-.L88
	.half	2
	.byte	138,0
	.word	0,0
.L267:
	.word	-1,.L88,0,.L5-.L88
	.half	1
	.byte	100
	.word	0,0
.L324:
	.word	0,0
.L320:
	.word	-1,.L88,.L637-.L88,.L644-.L88
	.half	1
	.byte	89
	.word	.L657-.L88,.L658-.L88
	.half	1
	.byte	89
	.word	0,0
.L295:
	.word	-1,.L88,0,.L265-.L88
	.half	2
	.byte	145,117
	.word	0,0
.L326:
	.word	0,0
.L391:
	.word	-1,.L88,.L662-.L88,.L28-.L88
	.half	1
	.byte	92
	.word	0,0
.L331:
	.word	-1,.L88,.L345-.L88,.L647-.L88
	.half	1
	.byte	91
	.word	0,0
.L394:
	.word	-1,.L88,.L663-.L88,.L401-.L88
	.half	1
	.byte	94
	.word	0,0
.L389:
	.word	-1,.L88,.L660-.L88,.L661-.L88
	.half	1
	.byte	88
	.word	.L28-.L88,.L14-.L88
	.half	1
	.byte	88
	.word	0,0
.L390:
	.word	-1,.L88,.L665-.L88,.L666-.L88
	.half	1
	.byte	85
	.word	.L667-.L88,.L30-.L88
	.half	2
	.byte	145,120
	.word	.L668-.L88,.L399-.L88
	.half	1
	.byte	95
	.word	.L671-.L88,.L672-.L88
	.half	1
	.byte	95
	.word	.L673-.L88,.L674-.L88
	.half	1
	.byte	95
	.word	0,0
.L278:
	.word	-1,.L88,.L632-.L88,.L633-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	.L634-.L88,.L5-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	.L6-.L88,.L635-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	.L636-.L88,.L10-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L334:
	.word	-1,.L88,.L343-.L88,.L24-.L88
	.half	1
	.byte	92
	.word	0,0
.L280:
	.word	-1,.L88,0,.L265-.L88
	.half	2
	.byte	145,112
	.word	0,0
.L292:
	.word	-1,.L88,0,.L265-.L88
	.half	2
	.byte	145,116
	.word	0,0
.L315:
	.word	-1,.L88,0,.L265-.L88
	.half	2
	.byte	145,112
	.word	0,0
.L330:
	.word	-1,.L88,.L645-.L88,.L646-.L88
	.half	1
	.byte	82
	.word	0,0
.L392:
	.word	-1,.L88,.L664-.L88,.L28-.L88
	.half	1
	.byte	93
	.word	0,0
.L293:
	.word	-1,.L88,.L299-.L88,.L637-.L88
	.half	1
	.byte	89
	.word	0,0
.L282:
	.word	0,0
.L290:
	.word	-1,.L88,0,.L265-.L88
	.half	2
	.byte	145,112
	.word	0,0
.L296:
	.word	0,0
.L313:
	.word	-1,.L88,.L287-.L88,.L642-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L393:
	.word	-1,.L88,.L659-.L88,.L14-.L88
	.half	1
	.byte	82
	.word	0,0
.L333:
	.word	-1,.L88,.L648-.L88,.L24-.L88
	.half	1
	.byte	94
	.word	0,0
.L364:
	.word	0,0
.L312:
	.word	-1,.L88,.L18-.L88,.L643-.L88
	.half	1
	.byte	95
	.word	0,0
.L388:
	.word	-1,.L88,.L659-.L88,.L14-.L88
	.half	1
	.byte	110
	.word	0,0
.L304:
	.word	-1,.L88,.L638-.L88,.L639-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L307:
	.word	-1,.L88,.L640-.L88,.L641-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L351:
	.word	-1,.L88,.L350-.L88,.L649-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L357:
	.word	-1,.L88,.L650-.L88,.L651-.L88
	.half	1
	.byte	95
	.word	0,0
.L340:
	.word	-1,.L88,.L651-.L88,.L652-.L88
	.half	1
	.byte	95
	.word	0,0
.L360:
	.word	-1,.L88,.L359-.L88,.L653-.L88
	.half	1
	.byte	95
	.word	0,0
.L403:
	.word	-1,.L88,.L669-.L88,.L670-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L410:
	.word	-1,.L88,.L675-.L88,.L676-.L88
	.half	1
	.byte	95
	.word	0,0
.L414:
	.word	0,0
.L417:
	.word	-1,.L88,.L677-.L88,.L416-.L88
	.half	1
	.byte	95
	.word	0,0
.L420:
	.word	-1,.L88,.L419-.L88,.L30-.L88
	.half	1
	.byte	95
	.word	0,0
.L373:
	.word	-1,.L88,.L372-.L88,.L655-.L88
	.half	1
	.byte	95
	.word	0,0
.L368:
	.word	-1,.L88,.L367-.L88,.L654-.L88
	.half	1
	.byte	95
	.word	0,0
.L377:
	.word	-1,.L88,.L376-.L88,.L656-.L88
	.half	1
	.byte	95
	.word	0,0
.L374:
	.word	0,0
.L370:
	.word	0,0
.L378:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_loc'
.L583:
	.word	-1,.L124,.L756-.L124,.L757-.L124
	.half	1
	.byte	95
	.word	0,0
.L123:
	.word	-1,.L124,0,.L580-.L124
	.half	2
	.byte	138,0
	.word	0,0
.L584:
	.word	-1,.L124,.L758-.L124,.L759-.L124
	.half	1
	.byte	95
	.word	0,0
.L581:
	.word	-1,.L124,.L126-.L124,.L76-.L124
	.half	1
	.byte	84
	.word	.L760-.L124,.L580-.L124
	.half	1
	.byte	84
	.word	0,0
.L586:
	.word	-1,.L124,.L754-.L124,.L755-.L124
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L585:
	.word	-1,.L124,.L752-.L124,.L753-.L124
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_loc'
.L589:
	.word	-1,.L128,.L756-.L128,.L761-.L128
	.half	1
	.byte	95
	.word	0,0
.L127:
	.word	-1,.L128,0,.L587-.L128
	.half	2
	.byte	138,0
	.word	0,0
.L590:
	.word	-1,.L128,.L758-.L128,.L759-.L128
	.half	1
	.byte	95
	.word	0,0
.L588:
	.word	-1,.L128,.L126-.L128,.L224-.L128
	.half	1
	.byte	84
	.word	.L762-.L128,.L587-.L128
	.half	1
	.byte	84
	.word	0,0
.L592:
	.word	-1,.L128,.L754-.L128,.L755-.L128
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L591:
	.word	-1,.L128,.L126-.L128,.L753-.L128
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_loc'
.L117:
	.word	-1,.L118,0,.L593-.L118
	.half	2
	.byte	138,0
	.word	0,0
.L594:
	.word	-1,.L118,0,.L593-.L118
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_loc'
.L119:
	.word	-1,.L120,0,.L729-.L120
	.half	2
	.byte	138,0
	.word	.L729-.L120,.L595-.L120
	.half	2
	.byte	138,8
	.word	.L595-.L120,.L595-.L120
	.half	2
	.byte	138,0
	.word	0,0
.L596:
	.word	-1,.L120,0,.L730-.L120
	.half	1
	.byte	84
	.word	0,0
.L599:
	.word	-1,.L120,.L738-.L120,.L739-.L120
	.half	1
	.byte	95
	.word	0,0
.L603:
	.word	-1,.L120,.L731-.L120,.L65-.L120
	.half	1
	.byte	89
	.word	.L735-.L120,.L736-.L120
	.half	1
	.byte	84
	.word	0,0
.L602:
	.word	-1,.L120,.L732-.L120,.L65-.L120
	.half	1
	.byte	88
	.word	0,0
.L601:
	.word	-1,.L120,.L733-.L120,.L734-.L120
	.half	1
	.byte	90
	.word	.L740-.L120,.L65-.L120
	.half	1
	.byte	90
	.word	0,0
.L598:
	.word	-1,.L120,0,.L595-.L120
	.half	2
	.byte	145,120
	.word	0,0
.L600:
	.word	-1,.L120,.L737-.L120,.L68-.L120
	.half	1
	.byte	94
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_loc'
.L121:
	.word	-1,.L122,0,.L604-.L122
	.half	2
	.byte	138,0
	.word	0,0
.L610:
	.word	-1,.L122,.L742-.L122,.L743-.L122
	.half	1
	.byte	95
	.word	0,0
.L605:
	.word	-1,.L122,0,.L73-.L122
	.half	1
	.byte	84
	.word	0,0
.L606:
	.word	-1,.L122,.L748-.L122,.L749-.L122
	.half	1
	.byte	95
	.word	0,0
.L607:
	.word	-1,.L122,.L741-.L122,.L71-.L122
	.half	1
	.byte	90
	.word	.L750-.L122,.L751-.L122
	.half	1
	.byte	84
	.word	0,0
.L611:
	.word	-1,.L122,.L744-.L122,.L745-.L122
	.half	1
	.byte	91
	.word	0,0
.L608:
	.word	-1,.L122,.L746-.L122,.L71-.L122
	.half	1
	.byte	89
	.word	0,0
.L609:
	.word	-1,.L122,.L743-.L122,.L73-.L122
	.half	1
	.byte	95
	.word	.L747-.L122,.L71-.L122
	.half	1
	.byte	109
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_loc'
.L109:
	.word	-1,.L110,0,.L574-.L110
	.half	2
	.byte	138,0
	.word	0,0
.L575:
	.word	-1,.L110,.L62-.L110,.L61-.L110
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_loc'
.L113:
	.word	-1,.L114,0,.L577-.L114
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_loc'
.L107:
	.word	-1,.L108,0,.L573-.L108
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_loc'
.L111:
	.word	-1,.L112,0,.L576-.L112
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_loc'
.L105:
	.word	-1,.L106,0,.L571-.L106
	.half	2
	.byte	138,0
	.word	0,0
.L572:
	.word	-1,.L106,.L59-.L106,.L58-.L106
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_loc'
.L89:
	.word	-1,.L90,0,.L422-.L90
	.half	2
	.byte	138,0
	.word	0,0
.L423:
	.word	-1,.L90,.L94-.L90,.L239-.L90
	.half	1
	.byte	84
	.word	0,.L42-.L90
	.half	1
	.byte	84
	.word	.L92-.L90,.L244-.L90
	.half	1
	.byte	84
	.word	.L686-.L90,.L37-.L90
	.half	1
	.byte	84
	.word	.L687-.L90,.L422-.L90
	.half	1
	.byte	84
	.word	0,0
.L430:
	.word	0,0
.L440:
	.word	-1,.L90,.L94-.L90,.L239-.L90
	.half	1
	.byte	82
	.word	.L678-.L90,.L679-.L90
	.half	1
	.byte	82
	.word	.L685-.L90,.L42-.L90
	.half	1
	.byte	82
	.word	.L92-.L90,.L244-.L90
	.half	1
	.byte	82
	.word	.L686-.L90,.L38-.L90
	.half	1
	.byte	82
	.word	0,0
.L439:
	.word	0,0
.L432:
	.word	0,0
.L443:
	.word	-1,.L90,.L94-.L90,.L239-.L90
	.half	1
	.byte	81
	.word	.L680-.L90,.L42-.L90
	.half	1
	.byte	81
	.word	.L92-.L90,.L244-.L90
	.half	1
	.byte	81
	.word	.L686-.L90,.L37-.L90
	.half	1
	.byte	81
	.word	.L687-.L90,.L422-.L90
	.half	1
	.byte	81
	.word	0,0
.L442:
	.word	-1,.L90,.L94-.L90,.L239-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	.L681-.L90,.L682-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	.L38-.L90,.L37-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	.L92-.L90,.L244-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	.L687-.L90,.L44-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L441:
	.word	-1,.L90,.L94-.L90,.L239-.L90
	.half	1
	.byte	95
	.word	.L683-.L90,.L41-.L90
	.half	1
	.byte	95
	.word	.L684-.L90,.L42-.L90
	.half	1
	.byte	98
	.word	0,0
.L425:
	.word	-1,.L90,.L94-.L90,.L239-.L90
	.half	1
	.byte	85
	.word	0,.L42-.L90
	.half	1
	.byte	85
	.word	.L92-.L90,.L244-.L90
	.half	1
	.byte	85
	.word	.L686-.L90,.L37-.L90
	.half	1
	.byte	85
	.word	.L687-.L90,.L422-.L90
	.half	1
	.byte	85
	.word	0,0
.L434:
	.word	0,0
.L447:
	.word	-1,.L90,.L446-.L90,.L38-.L90
	.half	1
	.byte	95
	.word	0,0
.L449:
	.word	-1,.L90,.L688-.L90,.L244-.L90
	.half	1
	.byte	95
	.word	.L687-.L90,.L39-.L90
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_loc'
.L541:
	.word	-1,.L102,.L104-.L102,.L234-.L102
	.half	2
	.byte	145,120
	.word	0,.L544-.L102
	.half	2
	.byte	145,120
	.word	.L715-.L102,.L549-.L102
	.half	2
	.byte	145,120
	.word	.L553-.L102,.L719-.L102
	.half	2
	.byte	145,120
	.word	.L728-.L102,.L512-.L102
	.half	2
	.byte	145,120
	.word	0,0
.L101:
	.word	-1,.L102,0,.L713-.L102
	.half	2
	.byte	138,0
	.word	.L713-.L102,.L512-.L102
	.half	2
	.byte	138,8
	.word	.L512-.L102,.L512-.L102
	.half	2
	.byte	138,0
	.word	0,0
.L513:
	.word	-1,.L102,0,.L714-.L102
	.half	1
	.byte	84
	.word	0,0
.L536:
	.word	0,0
.L521:
	.word	0,0
.L516:
	.word	-1,.L102,.L104-.L102,.L234-.L102
	.half	1
	.byte	89
	.word	.L530-.L102,.L544-.L102
	.half	1
	.byte	89
	.word	.L715-.L102,.L549-.L102
	.half	1
	.byte	89
	.word	.L553-.L102,.L720-.L102
	.half	1
	.byte	89
	.word	.L50-.L102,.L55-.L102
	.half	1
	.byte	89
	.word	.L49-.L102,.L56-.L102
	.half	1
	.byte	89
	.word	0,0
.L523:
	.word	0,0
.L533:
	.word	-1,.L102,.L52-.L102,.L724-.L102
	.half	1
	.byte	84
	.word	.L51-.L102,.L727-.L102
	.half	1
	.byte	84
	.word	0,0
.L534:
	.word	-1,.L102,.L104-.L102,.L234-.L102
	.half	1
	.byte	91
	.word	.L519-.L102,.L544-.L102
	.half	1
	.byte	91
	.word	.L715-.L102,.L549-.L102
	.half	1
	.byte	91
	.word	.L553-.L102,.L721-.L102
	.half	1
	.byte	91
	.word	.L54-.L102,.L719-.L102
	.half	1
	.byte	91
	.word	.L728-.L102,.L512-.L102
	.half	1
	.byte	91
	.word	0,0
.L538:
	.word	-1,.L102,.L104-.L102,.L234-.L102
	.half	1
	.byte	88
	.word	.L714-.L102,.L544-.L102
	.half	1
	.byte	88
	.word	.L715-.L102,.L549-.L102
	.half	1
	.byte	88
	.word	.L553-.L102,.L719-.L102
	.half	1
	.byte	88
	.word	.L727-.L102,.L719-.L102
	.half	1
	.byte	84
	.word	.L728-.L102,.L512-.L102
	.half	1
	.byte	88
	.word	0,0
.L542:
	.word	-1,.L102,.L559-.L102,.L725-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L568-.L102,.L726-.L102
	.half	1
	.byte	82
	.word	0,0
.L531:
	.word	-1,.L102,.L722-.L102,.L719-.L102
	.half	1
	.byte	98
	.word	0,0
.L532:
	.word	-1,.L102,.L554-.L102,.L723-.L102
	.half	1
	.byte	111
	.word	0,0
.L539:
	.word	-1,.L102,.L548-.L102,.L717-.L102
	.half	1
	.byte	95
	.word	0,0
.L515:
	.word	-1,.L102,0,.L714-.L102
	.half	1
	.byte	100
	.word	.L104-.L102,.L234-.L102
	.half	1
	.byte	108
	.word	.L519-.L102,.L544-.L102
	.half	1
	.byte	108
	.word	.L715-.L102,.L549-.L102
	.half	1
	.byte	108
	.word	.L553-.L102,.L719-.L102
	.half	1
	.byte	108
	.word	.L728-.L102,.L512-.L102
	.half	1
	.byte	108
	.word	0,0
.L525:
	.word	0,0
.L537:
	.word	-1,.L102,.L104-.L102,.L234-.L102
	.half	1
	.byte	90
	.word	.L713-.L102,.L544-.L102
	.half	1
	.byte	90
	.word	.L715-.L102,.L549-.L102
	.half	1
	.byte	90
	.word	.L553-.L102,.L719-.L102
	.half	1
	.byte	90
	.word	.L728-.L102,.L512-.L102
	.half	1
	.byte	90
	.word	0,0
.L535:
	.word	-1,.L102,.L720-.L102,.L719-.L102
	.half	1
	.byte	82
	.word	.L104-.L102,.L234-.L102
	.half	1
	.byte	82
	.word	.L728-.L102,.L50-.L102
	.half	1
	.byte	82
	.word	0,0
.L546:
	.word	-1,.L102,.L716-.L102,.L548-.L102
	.half	1
	.byte	95
	.word	0,0
.L550:
	.word	-1,.L102,.L718-.L102,.L549-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L104-.L102,.L234-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L553-.L102,.L52-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L560:
	.word	-1,.L102,.L725-.L102,.L53-.L102
	.half	1
	.byte	81
	.word	0,0
.L570:
	.word	-1,.L102,.L726-.L102,.L54-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_loc'
.L129:
	.word	-1,.L130,0,.L612-.L130
	.half	2
	.byte	138,0
	.word	0,0
.L613:
	.word	-1,.L130,.L763-.L130,.L239-.L130
	.half	1
	.byte	84
	.word	0,.L612-.L130
	.half	1
	.byte	84
	.word	0,0
.L614:
	.word	-1,.L130,.L763-.L130,.L239-.L130
	.half	1
	.byte	85
	.word	0,.L612-.L130
	.half	1
	.byte	85
	.word	0,0
.L618:
	.word	-1,.L130,.L763-.L130,.L239-.L130
	.half	5
	.byte	144,32,157,32,0
	.word	.L764-.L130,.L765-.L130
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L616:
	.word	-1,.L130,.L763-.L130,.L239-.L130
	.half	1
	.byte	82
	.word	.L766-.L130,.L612-.L130
	.half	1
	.byte	82
	.word	0,0
.L617:
	.word	-1,.L130,.L763-.L130,.L239-.L130
	.half	1
	.byte	95
	.word	.L767-.L130,.L768-.L130
	.half	1
	.byte	95
	.word	0,0
.L615:
	.word	-1,.L130,.L83-.L130,.L612-.L130
	.half	1
	.byte	95
	.word	0,0
.L621:
	.word	-1,.L130,.L768-.L130,.L769-.L130
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L623:
	.word	-1,.L130,.L769-.L130,.L770-.L130
	.half	1
	.byte	95
	.word	0,0
.L625:
	.word	-1,.L130,.L624-.L130,.L83-.L130
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1087:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_frame'
	.word	36
	.word	.L1087,.L88,.L265-.L88
	.byte	4
	.word	(.L631-.L88)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L265-.L631)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_frame'
	.word	20
	.word	.L1087,.L90,.L422-.L90
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_frame'
	.word	12
	.word	.L1087,.L96,.L450-.L96
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_frame'
	.word	12
	.word	.L1087,.L100,.L477-.L100
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_frame'
	.word	36
	.word	.L1087,.L102,.L512-.L102
	.byte	4
	.word	(.L713-.L102)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L512-.L713)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_frame'
	.word	12
	.word	.L1087,.L106,.L571-.L106
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_frame'
	.word	24
	.word	.L1087,.L108,.L573-.L108
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1087,.L110,.L574-.L110
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_frame'
	.word	24
	.word	.L1087,.L112,.L576-.L112
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_frame'
	.word	24
	.word	.L1087,.L114,.L577-.L114
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_frame'
	.word	24
	.word	.L1087,.L116,.L578-.L116
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_frame'
	.word	24
	.word	.L1087,.L118,.L593-.L118
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_frame'
	.word	36
	.word	.L1087,.L120,.L595-.L120
	.byte	4
	.word	(.L729-.L120)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L595-.L729)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_frame'
	.word	12
	.word	.L1087,.L122,.L604-.L122
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_frame'
	.word	24
	.word	.L1087,.L124,.L580-.L124
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_frame'
	.word	24
	.word	.L1087,.L128,.L587-.L128
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_frame'
	.word	24
	.word	.L1087,.L130,.L612-.L130
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1088:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_13')
	.sect	'.debug_frame'
	.word	24
	.word	.L1088,.L92,.L244-.L92
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_12')
	.sect	'.debug_frame'
	.word	24
	.word	.L1088,.L94,.L239-.L94
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_10')
	.sect	'.debug_frame'
	.word	24
	.word	.L1088,.L98,.L229-.L98
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_11')
	.sect	'.debug_frame'
	.word	24
	.word	.L1088,.L104,.L234-.L104
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L1088,.L126,.L224-.L126
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6738  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6739  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6740  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6741  ** TRACEABILITY: [cover parentID=DS_AS_CAN089]                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6742  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6743  ** Syntax       : static Std_ReturnType Can_lReportDetUninit(uint8 ServiceId) **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6744  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6745  **                    [/cover]                                                **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6746  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6747  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6748  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6749  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6750  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6751  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6752  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6753  ** Parameters (in)  : ServiceId - Service Id of the calling API               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6754  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6755  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6756  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6757  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6758  **                    - E_OK: CAN Driver is initialized                       **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6759  **                    - E_NOT_OK: CAN Driver is not initialized               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6760  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6761  ** Description      : Checks the status of CAN driver initialization          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6762  **                    If CAN driver is not initialized, reports to DET        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6763  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6764  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6765  static Std_ReturnType Can_lReportDetUninit(uint8 ServiceId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6766  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6767    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6768    RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6769  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6770    /* Check if CAN driver is un-initialized */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6771    if(CAN_DS_UNINIT == Can_17_MCanP_DriverState)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6772    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6773      /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6774      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6775        ServiceId, CAN_E_UNINIT);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6776      RetVal = E_NOT_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6777    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6778  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6779    return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6780  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6781  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6782  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6783  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6784  /*******************************************************************************
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6785  ** Syntax           : static Std_ReturnType Can_lReportDetParamController     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6786  **                                                      (                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6787  **                                                        uint8 ControllerId, **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6788  **                                                        uint8 ServiceId     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6789  **                                                      )                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6790  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6791  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6792  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6793  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6794  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6795  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6796  ** Reentrancy       : Reentrant                                               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6797  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6798  ** Parameters (in)  : ControllerId - Associated CAN Controller Id             **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6799  **                    ServiceId - Service Id of the calling API               **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6800  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6801  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6802  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6803  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6804  **                    - E_OK: ControllerId is valid                           **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6805  **                    - E_NOT_OK: ControllerId is invalid                     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6806  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6807  ** Description      : Checks if ControllerId is a valid CAN Controller Id     **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6808  **                    If ControllerId is not valid, then report to DET        **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6809  **                                                                            **
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6810  *******************************************************************************/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6811  static Std_ReturnType Can_lReportDetParamController(uint8 ControllerId,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6812                                                      uint8 ServiceId)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6813  {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6814    Std_ReturnType RetVal;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6815  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6816    /* 'ControllerId' is out of range */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6817    if(ControllerId >= Can_kConfigPtr->CanNumController)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6818    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6819      RetVal = E_NOT_OK ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6820    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6821    /* Check if corresponding CAN controller is not activated */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6822    else if(CAN_INVALID_HW_CONTROLLER_ID ==
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6823      Can_kConfigPtr->CanHwControllerIdMap[ControllerId])
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6824    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6825      RetVal = E_NOT_OK ;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6826    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6827    else
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6828    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6829      RetVal = E_OK;
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6830    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6831  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6832    if(E_NOT_OK == RetVal)
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6833    {
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6834      /* Report to DET */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6835      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6836        ServiceId, CAN_E_PARAM_CONTROLLER);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6837    }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6838  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6839    return(RetVal);
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6840  }
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6841  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6842  
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6843  #define CAN_17_MCANP_STOP_SEC_CODE
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6844  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6845   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\can_17_mcanp_infineon_tricore\ssc\src\Can_17_MCanP.c	  6846  #include "MemMap.h"

	; Module end
