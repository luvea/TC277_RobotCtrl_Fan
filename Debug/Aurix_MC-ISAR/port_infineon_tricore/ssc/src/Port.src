	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 06692445"
	.compiler_invocation	"ctc -f cc20872a --dep-file=Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\.Port.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --fp-model=+float -D_TASKING_C_TRICORE_ -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\.settings -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Asw -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\dio_infineon_tricore\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\compiler -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC\\SupportDocuments -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\integration_general\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\lib -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\obj -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Asw -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\adc_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\can_17_mcanp_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\dio_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\dio_infineon_tricore\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\ecum_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\icu_17_gtmccu6_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\integration_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\integration_general\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\irq_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\mcu_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\pwm_17_gtm_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\tricore_general\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Aurix_MC-ISAR\\uart_infineon_tricore\\ssc\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Hal_Sensor -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output\\generated -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\output\\generated\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\PWM3Ph -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\Qspi -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Adc_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Adc3ph_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TestCode\\Can_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\TLE_9180_Drive -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\UART_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Hal_Sensor -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\Demo_Aurix -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\inc -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\mak -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\output\\generated\\src -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\PWM3Ph -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Qspi -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Adc_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Adc3ph_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TestCode\\Can_Test -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\TLE_9180_Drive -IW:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\UART_Test -g2 --make-target=Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.src ..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c"
	.compiler_name		"ctc"
	;source	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c'

	
$TC16X
	.sdecl	'.zrodata.Port..1.cnt',data,rom
	.sect	'.zrodata.Port..1.cnt'
	.align	2
.1.cnt:	.type	object
	.size	.1.cnt,4
	.word	15793159
	.sdecl	'.zrodata.Port..2.cnt',data,rom
	.sect	'.zrodata.Port..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	-268197888
	.sdecl	'.zrodata.Port..3.cnt',data,rom
	.sect	'.zrodata.Port..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	6299648
	.sdecl	'.zrodata.Port..4.cnt',data,rom
	.sect	'.zrodata.Port..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	150000
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Port_Init')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Port_Init

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     1  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     2  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     3  ** Copyright (C) Infineon Technologies (2014)                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     4  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     5  ** All rights reserved.                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     6  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     7  ** This document contains proprietary information belonging to Infineon       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     8  ** Technologies. Passing on and copying of this document, and communication   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	     9  ** of its contents is not permitted without prior written authorization.      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    10  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    11  ********************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    12  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    13  **  $FILENAME   : Port.c $                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    14  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    15  **  $CC VERSION : \main\75 $                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    16  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    17  **  $DATE       : 2016-07-18 $                                               **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    18  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    19  **  AUTHOR       : DL-AUTOSAR-Engineering                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    20  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    21  **  VENDOR       : Infineon Technologies                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    22  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    23  **  DESCRIPTION  : This file contains                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    24  **                 - functionality of Port driver.                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    25  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    26  **  MAY BE CHANGED BY USER [Yes/No]: No                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    27  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    28  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    29  /*  TRACEABILITY : [cover parentID=DS_AS_PORT107_PORT146_4,DS_NAS_PORT_PR127,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    30                      SAS_NAS_PORT_PR913,DS_AS40X_PORT114,DS_NAS_PORT_PR131,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    31                      DS_NAS_PORT_PR228,DS_AS_PORT107_PORT146,SAS_NAS_ALL_PR1652,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    32                      SAS_AS_PORT080_PORT108_PORT130_PORT131_PORT133_PORT208,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    33                      SAS_NAS_PORT_PR734,SAS_NAS_ALL_PR749,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    34                      SAS_NAS_ALL_PR630_PR631,SAS_NAS_ALL_PR70]
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    35  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    36                     [/cover]                                                   */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    37  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    38  **                      Includes                                              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    39  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    40  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    41  /* Inclusion of Tasking sfr file */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    42  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    43  #include "IfxPort_reg.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    44  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    45  /* Global functions like Set/Reset END INIT protection bit,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    46    Enable/Disable interrupts, Automic write function */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    47  #include "Mcal.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    48  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    49  /* Own header file, this includes own configuration file also */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    50  /* PORT080: Inclusion structure */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    51  #include "Port.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    52  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    53  /*AS and SW version Specific include file */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    54  #include "Port_Ver.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    55  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    56  /* Inclusion from Safety Error */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    57  #if (PORT_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    58  #include "SafetyReport.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    59  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    60  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    61  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    62  **                      Private Macro Definitions                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    63  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    64  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    65  /*
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    66    Offset definitions for data in Port configuration
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    67  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    68  /* Initial Control data offset */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    69  #define PORT_DATA_OFS_CTL      (0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    70  /* Initial level data offset */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    71  #define PORT_DATA_OFS_LEVEL    (4U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    72  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    73  /* If pin mode changeable is enabled */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    74  #if (PORT_SET_PIN_MODE_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    75  /* Pin mode changeable or not offset */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    76  #define PORT_DATA_OFS_MODE     (7U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    77  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    78  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    79  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    80  #endif /* (PORT_SET_PIN_MODE_API) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    81  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    82  /* If Direction changeable is enabled */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    83  #if (PORT_SET_PIN_DIRECTION_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    84  /* If pin mode changeable is enabled */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    85  #if (PORT_SET_PIN_MODE_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    86  /* Pin direction data offset */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    87  #define PORT_DATA_OFS_DIR      (8U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    88  /* Control data 2 offset */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    89  #define PORT_DATA_OFS_CTL2     (9U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    90  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    91  #else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    92  /* Pin direction data offset */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    93  #define PORT_DATA_OFS_DIR      (7U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    94  /* Control data 2 offset */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    95  #define PORT_DATA_OFS_CTL2     (8U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    96  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    97  #endif /* (PORT_SET_PIN_MODE_API) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    98  #endif /* (PORT_SET_PIN_DIRECTION_API) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	    99  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   100  #if((PORT_SET_PIN_DIRECTION_API == STD_ON) || (PORT_SET_PIN_MODE_API == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   101  /* Mask to get direction info from Pin control value */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   102  #define PORT_DIR_MSK           (0x80U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   103  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   104  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   105  /* IOCR0 register offset in Ifx_P */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   106  #define PORT_IOCR0_REG_OFFSET  (4U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   107  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   108  /* TBD */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   109  /* LPCR register offset in Ifx_P */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   110  #define PORT_LPCR_REG_OFFSET   (0x28U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   111  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   112  /* PCSR register offset in Ifx_P */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   113  #define PORT_PCSR_REG_OFFSET   (0x19U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   114  #define PORT_PCSR_REG_LCK_MASK (0x7FFFFFFFU)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   115  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   116  #if(PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   117  /* Status to indicate that PORT is initialized */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   118  #define PORT_INITIALIZED  ((uint8)1)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   119  #endif  /*(PORT_DEV_ERROR_DETECT == STD_ON)*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   120  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   121  /* Before Setting the Iocr register, To Check the Port number below
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   122     macro's are used */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   123  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   124  #define PORT_PIN_0_3           (0x000F)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   125  #define PORT_PIN_4_7           (0x00F0)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   126  #define PORT_PIN_8_11          (0x0F00)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   127  #define PORT_PIN_12_15         (0xF000)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   128  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   129  /* 8-bit mask value from 8th to 15th bit */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   130  #define PORT_PDR1_MASK         (0xFF00U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   131  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   132  #if((PORT_SET_PIN_DIRECTION_API == STD_ON) || (PORT_SET_PIN_MODE_API == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   133  /* offset value where the port number is present */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   134  #define PORT_NUMBER_OFFSET     (4U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   135  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   136  /* lower 8-bit mask value in hex to get the port number */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   137  #define PORT_NUM_LOW8_MASK     (0x000000FFU)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   138  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   139  /* lower 4-bit mask value in hex to get the pin number of a port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   140  #define PORT_PIN_LOW4_MASK     (0x0FU)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   141  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   142  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   143  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   144  /* lower 16-bit mask value in Hex */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   145  #define PORT_LOWER_16BIT_MASK  (0x0000FFFFU)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   146  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   147  /* 16-bit shift value */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   148  #define PORT_16BIT_SHIFTVALUE  (16U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   149  #define PORT_NUM_EIGHT         (8U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   150  #define PORT_NUM_FOUR          (4U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   151  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   152  /* general constants */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   153  #define PORT_CONSTANT_16       (16U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   154  #define PORT_CONSTANT_10       (10U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   155  #define PORT_NUMBER_32         (32U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   156  #define PORT_NUMBER_31         (31U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   157  #define PORT_CONSTANT_0x01     (0x01U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   158  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   159  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   160  #if (PORT_SET_PIN_MODE_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   161  #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   162  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   163  /* Available Inverted Port Mask */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   164  #define AVAILABLE_MODE_MASK    ((Port_PinModeType)(0xC7U))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   165  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   166  #endif /*(PORT_SET_PIN_MODE_API==STD_ON) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   167  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   168  /* ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   169  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   170  /* Maximum port pin number */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   171  #define PORT_PIN_MAX_NUMBER    (15U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   172  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   173  /* Mcal Safety ENDINIT Timeout value */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   174  #define PORT_ENDINIT_TIMEOUT   (150000U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   175  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   176  /* Mask for valid bits */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   177  #define PORT_IOCR0_PIN_SHIFT_MASK             (0x000000F8U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   178  #if (PORT_SET_PIN_MODE_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   179  #define PORT_IOCR0_MODE_SHIFT_MASK            (0x00000038U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   180  #endif /* (PORT_SET_PIN_MODE_API == STD_ON)*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   181  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   182  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   183    calls definition, it is declared as a function like macro*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   184  #define PORT_IOCR0_BIT_SHIFT_COUNT(Pin)       (PORT_NUM_EIGHT * \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   185                                                ((Pin) % (PORT_NUM_FOUR)))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   186  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   187  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   188    calls definition, it is declared as a function like macro*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   189  #define PORT_PIN_IOCR0_SETMASK(Pin)      ((uint32)PORT_IOCR0_PIN_SHIFT_MASK << \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   190                                                 PORT_IOCR0_BIT_SHIFT_COUNT(Pin))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   191  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   192  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   193    calls definition, it is declared as a function like macro*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   194  #define PORT_PIN_IOCR0_CLEARMASK(Pin)         (~PORT_PIN_IOCR0_SETMASK(Pin))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   195  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   196  #if (PORT_SET_PIN_MODE_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   197  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   198    calls definition, it is declared as a function like macro*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   199  #define PORT_IOCR0_MODE_SETMASK(Pin)   ((uint32)PORT_IOCR0_MODE_SHIFT_MASK << \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   200                                                 PORT_IOCR0_BIT_SHIFT_COUNT(Pin))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   201  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   202    calls definition, it is declared as a function like macro*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   203  #define PORT_IOCR0_MODE_CLEARMASK(Pin)        (~PORT_IOCR0_MODE_SETMASK(Pin))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   204  #endif /* (PORT_SET_PIN_MODE_API == STD_ON)*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   205  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   206  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   207  **                   Function like macro definitions                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   208  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   209  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   210  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   211  **                      Private Type Definitions                              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   212  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   213  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   214  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   215  **                      Private Function Declarations                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   216  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   217  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   218  #define PORT_START_SEC_CODE
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   219  /*mapping of code and data to specific memory sections via memory mapping file*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   220  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   221  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   222  /*INLINE function to initialize Port module*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   223  IFX_LOCAL_INLINE void Port_lIOInit(void);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   224  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   225  /*INLINE function to initialize Port module*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   226  IFX_LOCAL_INLINE void Port_lPDRInit(void);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   227  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   228  /*INLINE function to extract the Address of Px_OUT register */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   229  IFX_LOCAL_INLINE Ifx_P *Port_lAdr(uint32 PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   230  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   231  /*INLINE function to to check if the port
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   232    is available or not for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   233  IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable31(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   234  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   235  /*INLINE function to check if the port
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   236    is available or not for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   237  IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable40(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   238  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   239  /*INLINE function to check if the port is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   240    available or not for the microcontroller    */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   241  IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   242  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   243  /*INLINE function to check if the port is read only or it is writable */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   244  IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly31(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   245  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   246  /*INLINE function to check if the port is read only or it is writable */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   247  IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly40(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   248  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   249  /*INLINE function to check if the port is read only or it is writable*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   250  IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   251  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   252  /*INLINE function to check if the port pin is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   253    available or not for the microcontroller      */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   254  IFX_LOCAL_INLINE uint16 Port_lIsPinAvailable(uint32 Port,uint32 Pin);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   255  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   256  /*INLINE function to check if any of the
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   257    portpin 8-15 is available or not for the micro*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   258  IFX_LOCAL_INLINE uint16 Port_lIsPortPdr1Available(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   259  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   260  /*INLINE function to check if the IOCRx register for the port
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   261     is available or not for the micro */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   262  IFX_LOCAL_INLINE uint16 Port_lIsPortIocrAvailable(uint32 Port,uint16 Pin);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   263  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   264  #if (PORT_SET_PIN_MODE_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   265  #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   266  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   267  /*INLINE function to check the error
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   268    in the Port_SetPinMode Api  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   269  IFX_LOCAL_INLINE uint32 Port_lModeErrChk
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   270  (
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   271    uint8 Dir, Port_PinModeType Mode, uint32 ConfigIndex, uint32 PinNumber
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   272  );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   273  IFX_LOCAL_INLINE uint8 Port_lChkPin
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   274  (
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   275    Port_PinType Pin,uint32 PortNo,uint32 PinNo
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   276  );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   277  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   278  /*(PORT_SET_PIN_MODE_API==STD_ON) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   279  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   280  /* ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   281  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   282  /*INLINE function for OMR register value
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   283    to set the configured initial level      */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   284  IFX_LOCAL_INLINE uint32 Port_lPinLevel(uint32 Level);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   285  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   286  #if((PORT_SET_PIN_DIRECTION_API == STD_ON) || (PORT_SET_PIN_MODE_API == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   287  /*INLINE function to extract port number Port_PinType data */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   288  IFX_LOCAL_INLINE uint32 Port_lNumber(Port_PinType Pin);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   289  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   290  /*INLINE function to extract pin number from Port_PinType data*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   291  IFX_LOCAL_INLINE uint32 Port_lPinNumber(Port_PinType Pin);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   292  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   293  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   294  /*INLINE function to to check if the port supports LVDS
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   295     for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   296  IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable31(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   297  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   298  /*INLINE function to to check if the port supports LVDS
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   299     for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   300  IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable40(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   301  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   302  /*INLINE function to to check if the port supports LVDS
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   303     for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   304  IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   305  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   306  /*INLINE function to to check if the port supports PCSR
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   307     for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   308  IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable31(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   309  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   310  /*INLINE function to to check if the port supports PCSR
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   311     for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   312  IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable40(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   313  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   314  /*INLINE function to to check if the port supports PCSR
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   315     for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   316  IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable(uint32 Port);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   317  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   318  /*INLINE function to to check if the port supports PCSR
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   319     for the microcontroller */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   320  IFX_LOCAL_INLINE uint32 Port_lIsPortPinPairAvailable(uint32 PortLPCRvalue);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   321  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   322  #if (PORT_INIT_CHECK_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   323  IFX_LOCAL_INLINE uint8 Port_lChkIocr(uint32 PortNo,const uint32 *DataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   324  IFX_LOCAL_INLINE uint8 Port_lChkLVDS(uint32 PortNo,const uint32 *LVDSDataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   325  IFX_LOCAL_INLINE uint8 Port_lChkPDR(uint32 PortNo,uint32 Data_PDR0,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   326                                     uint32 Data_PDR1);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   327  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   328  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   329  #define PORT_STOP_SEC_CODE
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   330  /*mapping of code and data to specific memory sections via memory mapping file*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   331  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   332   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   333  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   334  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   335  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   336  **                      Global Constant Definitions                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   337  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   338  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   339  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   340  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   341  **                      Global Variable Definitions                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   342  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   343  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   344  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   345  **                      Private Constant Definitions                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   346  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   347  /* Mapping of 16 bit constant */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   348  #define PORT_START_SEC_CONST_16BIT
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   349  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   350   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   351  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   352  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   353  /* Total pin count for each port, This constant is used during DET check */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   354  static const uint16 Port_kAvailablePins[] =
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   355  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   356    PORT_AVAILABLE_PINS_PORT0,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   357    PORT_AVAILABLE_PINS_PORT1,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   358    PORT_AVAILABLE_PINS_PORT2,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   359    PORT_AVAILABLE_PINS_PORT3,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   360    PORT_AVAILABLE_PINS_PORT4,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   361    PORT_AVAILABLE_PINS_PORT5,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   362    PORT_AVAILABLE_PINS_PORT6,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   363    PORT_AVAILABLE_PINS_PORT7,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   364    PORT_AVAILABLE_PINS_PORT8,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   365    PORT_AVAILABLE_PINS_PORT9,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   366    PORT_AVAILABLE_PINS_PORT10,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   367    PORT_AVAILABLE_PINS_PORT11,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   368    PORT_AVAILABLE_PINS_PORT12,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   369    PORT_AVAILABLE_PINS_PORT13,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   370    PORT_AVAILABLE_PINS_PORT14,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   371    PORT_AVAILABLE_PINS_PORT15,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   372    PORT_AVAILABLE_PINS_PORT16,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   373    PORT_AVAILABLE_PINS_PORT17,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   374    PORT_AVAILABLE_PINS_PORT18,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   375    PORT_AVAILABLE_PINS_PORT19,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   376    PORT_AVAILABLE_PINS_PORT20,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   377    PORT_AVAILABLE_PINS_PORT21,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   378    PORT_AVAILABLE_PINS_PORT22,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   379    PORT_AVAILABLE_PINS_PORT23,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   380    PORT_AVAILABLE_PINS_PORT24,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   381    PORT_AVAILABLE_PINS_PORT25,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   382    PORT_AVAILABLE_PINS_PORT26,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   383    PORT_AVAILABLE_PINS_PORT27,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   384    PORT_AVAILABLE_PINS_PORT28,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   385    PORT_AVAILABLE_PINS_PORT29,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   386    PORT_AVAILABLE_PINS_PORT30,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   387    PORT_AVAILABLE_PINS_PORT31,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   388    PORT_AVAILABLE_PINS_PORT32,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   389    PORT_AVAILABLE_PINS_PORT33,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   390    PORT_AVAILABLE_PINS_PORT34,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   391    PORT_AVAILABLE_PINS_PORT35,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   392    PORT_AVAILABLE_PINS_PORT36,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   393    PORT_AVAILABLE_PINS_PORT37,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   394    PORT_AVAILABLE_PINS_PORT38,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   395    PORT_AVAILABLE_PINS_PORT39,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   396    PORT_AVAILABLE_PINS_PORT40
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   397  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   398  };
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   399  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   400  #define PORT_STOP_SEC_CONST_16BIT
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   401  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   402   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   403  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   404  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   405  **                      Private Variable Definitions                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   406  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   407  #if(PORT_PB_FIXEDADDR == STD_OFF)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   408  #define PORT_START_SEC_VAR_32BIT
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   409  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   410   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   411  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   412  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   413  /* To store the Port driver configuration pointer */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   414  static  const Port_ConfigType  *Port_kConfigPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   415  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   416  #define PORT_STOP_SEC_VAR_32BIT
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   417  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   418   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   419  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   420  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   421  #endif /*(PORT_PB_FIXEDADDR == STD_OFF) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   422  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   423  #if(PORT_PB_FIXEDADDR == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   424  #define PORT_START_SEC_CONST_32BIT
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   425  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   426   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   427  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   428  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   429  /* To store the Port driver configuration pointer */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   430  static  const Port_ConfigType * const Port_kConfigPtr = &Port_ConfigRoot[0];
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   431  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   432  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   433  #define PORT_STOP_SEC_CONST_32BIT
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   434  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   435   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   436  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   437  #endif /*(PORT_PB_FIXEDADDR == STD_ON) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   438  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   439  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   440  #if(PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   441  /* Start 8 bit variable section */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   442  #define PORT_START_SEC_VAR_8BIT
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   443  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   444   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   445  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   446  /* Init Status Variable. It has to be initialized to "0U" after every reset as 0
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   447     represents the deinitialized state */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   448  static uint8 Port_InitStatus;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   449  /* Stop 8 bit variable section */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   450  #define PORT_STOP_SEC_VAR_8BIT
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   451  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   452   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   453  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   454  #endif  /*(PORT_DEV_ERROR_DETECT == STD_ON)*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   455  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   456  **                      Private Function Definitions                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   457  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   458  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   459  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   460  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   461  **                      Global Function Definitions                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   462  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   463  /* Mapping the code */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   464  #define PORT_START_SEC_CODE
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   465  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   466   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   467  #include "MemMap.h"
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   468  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   469  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   470  ** Traceability     : [cover parentID=DS_AS_PORT140,DS_AS_PORT003,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   471                         DS_AS_PORT101_PORT211_1,DS_AS_PORT107_PORT146_1,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   472                         DS_AS_PORT107_PORT146_4,DS_AS4XX_PORT087_1,DS_AS_PORT105,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   473                         DS_AS_PORT148,DS_AS_PORT005,DS_AS_PORT078,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   474                         DS_AS3XX_PORT087_1,DS_AS_PORT077,DS_AS_PORT082,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   475                         SAS_MCAL_PORT_0402,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   476                         SAS_MCAL_PORT_0407,SAS_MCAL_PORT_0415,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   477                         DS_MCAL_PORT_0415,DS_MCAL_PORT_0417,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   478                         DS_MCAL_PORT_0402,DS_AS_PORT107_PORT146_4]            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   479  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   480  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   481  ** Syntax           : void Port_Init                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   482  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   483  **                      const Port_ConfigType * ConfigPtr                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   484  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   485  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   486  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   487  ** Service ID       : 0x00                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   488  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   489  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   490  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   491  ** Reentrancy       : non - reentrant                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   492  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   493  ** Parameters(in)   : const Port_ConfigType * ConfigPtr - Pointer to          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   494  **                    PORT configuration                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   495  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   496  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   497  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   498  ** Return value     : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   499  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   500  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   501  **   - PORT041: PORT042: Initializes all the ports as per configuration       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   502  **   - PORT001: This API initializes the whole port structure of MCU          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   503  **   - PORT003: This API can be used to initialize and reinitialize the       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   504  **     port with different configuration                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   505  **   - PORT078: This function should be called first in order to initialize   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   506  **     the port for use                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   507  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   508  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   509  void Port_Init ( const Port_ConfigType * ConfigPtr )
; Function Port_Init
.L43:
Port_Init:	.type	func

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   510  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   511    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   512    uint8 ErrStatus;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   513    ErrStatus = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   514  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   515    #if(PORT_PB_FIXEDADDR == STD_OFF)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   516  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   517    if (ConfigPtr == NULL_PTR)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   518    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   519  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   520      /* Report PORT_E_PARAM_CONFIG DET */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   521      #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   522      Det_ReportError((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   523          PORT_SID_INIT,PORT_E_PARAM_CONFIG);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   524      #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   525      /* PORT087: Skip the API functionality and return from the API */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   526  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   527      /* Report a safety error */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   528      #if (PORT_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   529      SafeMcal_ReportError ((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   530                       PORT_SID_INIT,PORT_E_PARAM_CONFIG);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   531      #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   532  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   533      ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   534    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   535    #else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   536    if (ConfigPtr != Port_kConfigPtr)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   537    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   538  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   539      /* Report PORT_E_PARAM_CONFIG DET */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   540      #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   541      Det_ReportError((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   542        PORT_SID_INIT,PORT_E_PARAM_CONFIG);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   543      #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   544      /* PORT087: Skip the API functionality and return from the API */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   545  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   546      /* Report a safety error */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   547      #if (PORT_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   548      SafeMcal_ReportError ((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   549                       PORT_SID_INIT,PORT_E_PARAM_CONFIG);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   550      #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   551  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   552      ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   553    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   554    #endif /*(PORT_PB_FIXEDADDR == STD_ON)*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   555  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   556    #if (PORT_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   557    if ((ErrStatus != 1U) &&
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   558        (ConfigPtr->PortMarker != ((uint32)PORT_MODULE_ID << 16U)))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   559    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   560      /* report to upper layer */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   561      SafeMcal_ReportError ((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   562                       PORT_SID_INIT,PORT_E_PARAM_CONFIG);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   563      ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   564  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   565    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   566    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   567    /*End Of PORT_SAFETY_ENABLE*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   568    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   569    /*(PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON)*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   570  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   571  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   572    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   573    if (ErrStatus == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   574    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   575    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   576      /* PORT002: The function Port_Init() shall also initialize all variables
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   577         used by the PORT driver module to an initial state.
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   578         There are no such variables in the port module
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   579      */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   580      #if(PORT_PB_FIXEDADDR == STD_OFF)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   581        Port_kConfigPtr = ConfigPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   582      #else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   583        /* To remove GNU warning of unused parameter ConfigPtr */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   584        UNUSED_PARAMETER(ConfigPtr)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   585      #endif  /*(PORT_PB_FIXEDADDR == STD_OFF)*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   586  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   587      /* Initialise General Purpose I/O Ports and Peripheral I/O Lines */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   588      Port_lIOInit();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   589  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   590      #if(PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   591      /* Set Status to indicate that initialization is done */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   592      Port_InitStatus = PORT_INITIALIZED;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   593      #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   594    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   595  }/* Port_Init */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   596  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   597  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   598  #if (PORT_INIT_CHECK_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   599  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   600  ** Traceability     : [cover parentID=SAS_MCAL_PORT_0402,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   601                        SAS_MCAL_PORT_0405,SAS_MCAL_PORT_0406,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   602                        SAS_MCAL_PORT_0407,SAS_MCAL_PORT_0431,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   603                        DS_MCAL_PORT_0403,DS_MCAL_PORT_0403_1,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   604                        DS_MCAL_PORT_0404,DS_MCAL_PORT_0405,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   605                        DS_MCAL_PORT_0406,DS_MCAL_PORT_0417,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   606                        DS_NAS_PORT_PR123]                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   607  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   608  ** Syntax           : Std_ReturnType Port_InitCheck                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   609  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   610  **                      const Port_ConfigType * ConfigPtr                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   611  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   612  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   613  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   614  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   615  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   616  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   617  ** Reentrancy       : non - reentrant                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   618  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   619  ** Parameters(in)   : const Port_ConfigType * ConfigPtr - Pointer to          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   620  **                    PORT configuration                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   621  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   622  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   623  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   624  ** Return value     : Std_ReturnType                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   625  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   626  ** Description      : This function checks Port SFR's and Global              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   627  **                      variables initialized by Port_Init Api                **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   628  **                    This API is available only if PortInitCheckApi is TRUE  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   629  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   630  Std_ReturnType Port_InitCheck ( const Port_ConfigType * ConfigPtr )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   631  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   632  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   633    uint8 ErrStatus;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   634    uint8 ErrPdr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   635    uint32 PortNumber;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   636    /* Index to identify the port configuration information
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   637    from the configuration array  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   638    uint8 ConfigIndex;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   639    Ifx_P  *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   640  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   641    const uint32 *DataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   642    const Port_n_ConfigType *ConfigDataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   643  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   644    const uint32  *LVDSDataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   645    const uint32  *PCSRDataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   646    volatile uint32  *PCSRRegPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   647  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   648    uint8 LevelFlag;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   649    uint8 IocrFlag;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   650  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   651    uint8 LVDSFlag;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   652    uint8 PCSRFlag;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   653  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   654    ErrStatus = E_OK;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   655    ConfigIndex = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   656    LevelFlag = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   657    LVDSFlag = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   658    PCSRFlag = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   659  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   660  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   661    if (Port_kConfigPtr != ConfigPtr)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   662    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   663  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   664       ErrStatus = E_NOT_OK;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   665    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   666    else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   667    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   668  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   669      LVDSDataPtr = (const uint32*)(const void*)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   670                                 (Port_kConfigPtr->Port_LVDSConfigTypePtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   671  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   672      PCSRDataPtr = (const uint32*)(const void*)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   673                                 (Port_kConfigPtr->Port_PCSRConfigTypePtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   674  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   675      for (PortNumber = 0U; PortNumber <= PORT_MAX_NUMBER ; PortNumber++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   676      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   677  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   678        /* Parameter Port is checked for validity */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   679        if(Port_lIsPortAvailable(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   680        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   681  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   682          /* Check PDR Registers Initialization */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   683  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   684          /* Port driver strength is configured in Port PDR0 register */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   685  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   686          PortAddressPtr = Port_lAdr(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   687  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   688          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   689          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   690          /*IFX_MISRA_RULE_17_04_STATUS= Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   691          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   692          ErrPdr = Port_lChkPDR(PortNumber,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   693          Port_kConfigPtr->PortConfigSetPtr[ConfigIndex].DriverStrength0,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   694          Port_kConfigPtr->PortConfigSetPtr[ConfigIndex].DriverStrength1);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   695  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   696          if (ErrPdr == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   697          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   698            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   699          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   700            ConfigDataPtr = (Port_kConfigPtr->PortConfigSetPtr) + ConfigIndex ;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   701  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   702            /* Address of each port configuration */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   703            DataPtr = (const uint32 *)(const void*)(ConfigDataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   704  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   705  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   706            /* Check Port Level Registers Initialization */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   707  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   708            if(Port_lIsPortReadOnly(PortNumber) == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   709            {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   710              /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   711                to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   712              if(PORT_SFR_INIT_USER_MODE_READ32(PortAddressPtr->OUT.U) == \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   713                                               (*(DataPtr + PORT_DATA_OFS_LEVEL)))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   714              {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   715                LevelFlag = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   716              }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   717            }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   718            else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   719            {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   720               LevelFlag = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   721            }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   722  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   723            if (LevelFlag == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   724            {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   725  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   726               /* Check IOCR0,4,8,12 Registers Initialization */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   727  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   728               IocrFlag = Port_lChkIocr(PortNumber,DataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   729  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   730               if (IocrFlag == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   731               {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   732                 /* Check Port LVDS and PCSR Registers Initialization */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   733                 if(Port_lIsPortLVDSAvailable(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   734                 {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   735                   LVDSFlag = Port_lChkLVDS(PortNumber,LVDSDataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   736                   /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   737          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   738                   LVDSDataPtr += PORT_MAX_LPCR_REG;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   739                 }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   740  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   741                 if(LVDSFlag == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   742                 {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   743                   if(Port_lIsPortPCSRAvailable(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   744                   {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   745                     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   746            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   747                     PCSRRegPtr = ((volatile uint32*)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   748                                   (volatile void*)PortAddressPtr +
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   749                                    PORT_PCSR_REG_OFFSET);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   750                     if ((PORT_SFR_INIT_USER_MODE_READ32(*PCSRRegPtr) & \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   751                                         PORT_PCSR_REG_LCK_MASK) == *PCSRDataPtr)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   752                     {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   753                       PCSRFlag = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   754                     }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   755                     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   756            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   757                     PCSRDataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   758                   }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   759                   /* PCSR is not available then make PCSRFlag as FALSE */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   760                   else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   761                   {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   762                      PCSRFlag = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   763                   }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   764                 }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   765               }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   766            }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   767          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   768          /* If LVDSFlag or PCSRFlag as True, then return as error */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   769          if((LVDSFlag != 0U) || (PCSRFlag != 0U))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   770          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   771             ErrStatus = E_NOT_OK;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   772             break;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   773          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   774       ConfigIndex++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   775       }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   776  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   777       LevelFlag = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   778       PCSRFlag = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   779  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   780       if(PortNumber == PORT_MAX_NUMBER)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   781       {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   782           /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   783             to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   784         if (PORT_SFR_INIT_USER_MODE_READ32(P40_PDISC.U) != \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   785                                                   Port_kConfigPtr->PDiscSet[0U])
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   786         {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   787           ErrStatus = E_NOT_OK;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   788         }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   789       }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   790      } /* For loop */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   791    } /* Else */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   792    return(ErrStatus);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   793  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   794  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   795  ** Syntax           : IFX_LOCAL_INLINE uint8 Port_lChkPDR                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   796  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   797  **                      uint32 PortNo,uint32 Data_PDR0, uint32 Data_PDR1      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   798  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   799  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   800  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   801  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   802  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   803  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   804  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   805  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   806  ** Parameters (in)  : uint32 PortNo - Port number whose  PDR to be checked    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   807  **                    uint32 Data_PDR0 - Data of DriverStrength0              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   808  **                    uint32 Data_PDR1 - Data of DriverStrength1              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   809  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   810  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   811  ** Return value     : uint8                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   812  **                    0- No error if PDR value is correct                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   813  **                    1- Error if PDR value is not correct                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   814  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   815  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   816  ** - The function like macro is to check if configured  Port PDR value is     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   817  **    same as read PDR value                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   818  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   819  IFX_LOCAL_INLINE uint8 Port_lChkPDR(uint32 PortNo,uint32 Data_PDR0,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   820                                     uint32 Data_PDR1)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   821  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   822    uint8 ErrPdr = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   823    Ifx_P  *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   824  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   825    PortAddressPtr = Port_lAdr(PortNo);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   826  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   827    if(PortNo < PORT_MAX_NUMBER)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   828    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   829      if(PORT_SFR_INIT_USER_MODE_READ32(PortAddressPtr->PDR0.U) != Data_PDR0)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   830      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   831        ErrPdr = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   832      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   833  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   834      if(Port_lIsPortPdr1Available(PortNo) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   835      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   836  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   837        if(PORT_SFR_INIT_USER_MODE_READ32(PortAddressPtr->PDR1.U) != Data_PDR1)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   838        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   839          ErrPdr = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   840        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   841      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   842    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   843    return(ErrPdr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   844  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   845  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   846  ** Syntax           : IFX_LOCAL_INLINE uint8 Port_lChkIocr                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   847  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   848  **                      uint32 PortNo,const uint32 *DataPtr                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   849  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   850  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   851  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   852  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   853  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   854  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   855  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   856  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   857  ** Parameters (in)  : uint32 PortNo - Port number whose Iocr to be checked    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   858  **                    const uint32 *DataPtr - Data read from Iocr register    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   859  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   860  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   861  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   862  ** Return value     : uint8                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   863  **                    0 -No error if Iocr register value is correct           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   864  **                    1 -Error if Iocr register  value is not correct         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   865  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   866  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   867  ** - The function like macro is to check if configured  Port Iocr value is    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   868  **    same as read Iocr value                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   869  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   870  IFX_LOCAL_INLINE uint8 Port_lChkIocr(uint32 PortNo,const uint32 *DataPtr)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   871  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   872    uint8 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   873    Ifx_P  *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   874    uint32 Index;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   875    uint16 PinAvailable;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   876    uint32 PinMask;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   877    uint8 PinPosition;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   878  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   879    RetVal = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   880  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   881    PortAddressPtr = Port_lAdr(PortNo);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   882  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   883    if(Port_lIsPortIocrAvailable(PortNo,(uint16)PORT_PIN_0_3)!= 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   884    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   885      PinPosition = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   886      PinMask = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   887      for(Index = 0U; Index<4U ; Index++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   888      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   889  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   890         PinAvailable  = Port_lIsPinAvailable(PortNo,Index);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   891  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   892         if (PinAvailable)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   893         {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   894           PinMask |= ((uint32)0xF8U << PinPosition);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   895         }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   896  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   897        PinPosition += 8U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   898      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   899      if((PORT_SFR_INIT_USER_MODE_READ32(PortAddressPtr->IOCR0.U) & PinMask) != \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   900                                                          ((*DataPtr) & PinMask))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   901      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   902        RetVal = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   903      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   904    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   905    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   906            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   907    DataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   908  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   909    if(Port_lIsPortIocrAvailable(PortNo,(uint16)PORT_PIN_4_7)!= 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   910    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   911      PinPosition = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   912      PinMask = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   913      for(Index = 4U; Index<8U ; Index++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   914      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   915  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   916         PinAvailable  = Port_lIsPinAvailable(PortNo,Index);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   917  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   918         if (PinAvailable)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   919         {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   920           PinMask |= ((uint32)0xF8U << PinPosition);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   921         }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   922        PinPosition += 8U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   923      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   924      if((PORT_SFR_INIT_USER_MODE_READ32(PortAddressPtr->IOCR4.U) & PinMask) != \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   925                                                          ((*DataPtr) & PinMask))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   926      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   927        RetVal = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   928      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   929    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   930    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   931            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   932    DataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   933  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   934    if(Port_lIsPortIocrAvailable(PortNo,(uint16)PORT_PIN_8_11)!= 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   935    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   936      PinPosition = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   937      PinMask = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   938      for(Index = 8U; Index<12U ; Index++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   939      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   940  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   941         PinAvailable  = Port_lIsPinAvailable(PortNo,Index);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   942  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   943         if (PinAvailable)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   944         {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   945           PinMask |= ((uint32)0xF8U << PinPosition);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   946         }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   947        PinPosition += 8U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   948      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   949  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   950      if((PORT_SFR_INIT_USER_MODE_READ32(PortAddressPtr->IOCR8.U) & PinMask) != \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   951                                                          ((*DataPtr) & PinMask))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   952      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   953        RetVal = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   954      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   955    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   956    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   957            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   958    DataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   959  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   960    if(Port_lIsPortIocrAvailable(PortNo,(uint16)PORT_PIN_12_15)!= 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   961    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   962      PinPosition = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   963      PinMask = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   964      for(Index = 12U; Index<16U ; Index++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   965      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   966  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   967         PinAvailable  = Port_lIsPinAvailable(PortNo,Index);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   968  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   969         if (PinAvailable)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   970         {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   971           PinMask |= ((uint32)0xF8U << PinPosition);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   972         }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   973        PinPosition += 8U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   974      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   975      if((PORT_SFR_INIT_USER_MODE_READ32(PortAddressPtr->IOCR12.U) & PinMask) != \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   976                                                          ((*DataPtr) & PinMask))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   977      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   978        RetVal = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   979      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   980    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   981  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   982    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   983  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   984  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   985  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   986  ** Syntax           : IFX_LOCAL_INLINE uint8 Port_lChkLVDS                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   987  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   988  **                      uint32 PortNo,const uint32 *LVDSDataPtr               **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   989  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   990  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   991  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   992  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   993  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   994  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   995  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   996  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   997  ** Parameters (in)  : uint32 PortNo - Port LVDS to be checked                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   998  **                    const uint32 *LVDSDataPtr - Data pointer reads the data **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	   999  **                    from LVDS register                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1000  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1001  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1002  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1003  ** Return value     : uint8                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1004  **                    0- No error if LVDS value is correct....................**
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1005  **                    1- Error if LVDS value is not correct                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1006  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1007  ** - The function like macro is to check if configured  Port Lvds value is    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1008  **    same as read Lvds value                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1009  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1010  IFX_LOCAL_INLINE uint8 Port_lChkLVDS(uint32 PortNo,const uint32 *LVDSDataPtr)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1011  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1012  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1013    uint8 counter;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1014    uint8 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1015    volatile uint32 *LVDSRegPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1016    Ifx_P  *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1017  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1018    RetVal = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1019  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1020    PortAddressPtr = Port_lAdr(PortNo);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1021  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1022    /* Check Port LVDS Initialization */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1023  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1024      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1025            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1026      LVDSRegPtr  = ((volatile uint32*)(volatile void*)PortAddressPtr +
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1027                    PORT_LPCR_REG_OFFSET);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1028      for(counter = 0U; (counter < PORT_MAX_LPCR_REG); counter++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1029      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1030        if(Port_lIsPortPinPairAvailable(*LVDSDataPtr) == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1031        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1032          /* LPCRn */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1033          if(PORT_SFR_INIT_USER_MODE_READ32(*LVDSRegPtr) != *LVDSDataPtr)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1034          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1035            RetVal = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1036            break;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1037          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1038  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1039        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1040        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1041            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1042        LVDSRegPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1043        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1044            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1045        LVDSDataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1046      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1047  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1048    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1049  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1050  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1051  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1052  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1053  /* Enable / Disable the use of the function */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1054  #if (PORT_SET_PIN_DIRECTION_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1055  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1056  ** Traceability     : [cover parentID=DS_AS_PORT141,DS_AS_PORT086,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1057                         DS_AS_PORT075_1,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1058                         DS_MCAL_PORT_0416,DS_AS_PORT063,DS_AS_PORT137,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1059                         DS_AS_PORT101_PORT211_2,DS_AS_PORT107_PORT146_2,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1060                         DS_AS4XX_PORT087_2,DS_AS3XX_PORT087_2,DS_AS_PORT054,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1061                         DS_AS_PORT213,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1062                         DS_AS_PORT138,DS_AS_PORT077,DS_NAS_PORT_PR912_1,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1063                         SAS_MCAL_PORT_0411,SAS_MCAL_PORT_0415,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1064                         DS_MCAL_PORT_0417, DS_AS_PORT107_PORT146_4,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1065                         DS_MCAL_PORT_0411_1]                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1066  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1067  ** Syntax           : void Port_SetPinDirection                               **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1068  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1069  **                      Port_PinType Pin,                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1070  **                      Port_PinDirectionType Direction                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1071  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1072  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1073  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1074  ** Service ID       : 0x01                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1075  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1076  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1077  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1078  ** Reentrancy       : Re-entrant                                              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1079  **                    (This function shall be re-entrant if accessing         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1080  **                     different pins, independent of port.)                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1081  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1082  ** Parameters (in)  : Port_PinType Pin - port pin ID whose direction has      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1083                        to be set                                               **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1084  **                    Port_PinDirectionType Direction - port pin direction    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1085                        to be set                                               **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1086  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1087  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1088  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1089  ** Return value     : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1090  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1091  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1092  **  - PORT063: sets the port pin direction during runtime                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1093  **  - PORT059: This functionality is available for parameter Pin              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1094  **     whose direction is configured as changeable during run time            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1095  **  - PORT086: This function is only available if the pre-compiler switch     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1096  **    PORT_SET_PIN_DIRECTION_API is set STD_ON.                               **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1097  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1098  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1099  void Port_SetPinDirection(Port_PinType Pin, Port_PinDirectionType Direction)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1100  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1101    /* Each Port Number for the hardware unit  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1102    uint32               PortNumber;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1103    uint32               PinNumber;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1104    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1105    uint8                ErrStatus;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1106    #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1107    uint32               PortAvailable;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1108    uint32               PortReadOnly;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1109    uint32               PinAvailable;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1110    #endif /*PORT_DEV_ERROR_DETECT == STD_ON */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1111    #endif /*PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1112    uint32               ConfigIndex;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1113    uint32               Index;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1114    volatile uint32      *IocrRegPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1115    const uint32        *DataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1116    Ifx_P               *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1117    const uint8          *IocrDataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1118  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1119    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1120    ErrStatus = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1121    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1122  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1123    #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1124    /* Check for DET: PORT_E_UNINIT */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1125    if (Port_InitStatus != PORT_INITIALIZED)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1126    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1127      /* Report PORT_E_UNINIT DET if Port initialisation is not done */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1128      Det_ReportError((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1129          PORT_SID_SETPINDIRECTION,PORT_E_UNINIT);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1130  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1131      /* PORT087: Skip the API functionality and return from the API */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1132    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1133    else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1134    #endif /* PORT_DEV_ERROR_DETECT */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1135    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1136      /* Extract the port number and pin number from the Pin Symbolic ID */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1137      PortNumber = (uint32)Port_lNumber(Pin);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1138      PinNumber  = (uint32)Port_lPinNumber(Pin);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1139  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1140      #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1141      /* PORT077: Function parameters are checked in the order in which they are
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1142                 passed.
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1143      */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1144      /* PORT087: Check if Pin is valid */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1145  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1146      #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1147      PortAvailable = Port_lIsPortAvailable(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1148      PortReadOnly  = Port_lIsPortReadOnly(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1149  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1150      PinAvailable = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1151      if( PortAvailable != 0U )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1152      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1153        PinAvailable  = Port_lIsPinAvailable(PortNumber,PinNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1154      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1155  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1156      if ( (Pin > PORT_MAX_PIN_ID) ||
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1157           ((PortReadOnly != 0U) || (PinAvailable == 0U))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1158         )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1159      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1160  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1161        /*Report PORT_E_PARAM_PIN DET if the pin is out of range */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1162        Det_ReportError((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1163            PORT_SID_SETPINDIRECTION,PORT_E_PARAM_PIN);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1164  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1165        ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1166  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1167      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1168      #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1169  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1170      #if (PORT_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1171      if(Pin > PORT_MAX_PIN_ID)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1172      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1173        /*Report Safety Error if the pin is out of range */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1174        SafeMcal_ReportError ((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1175           PORT_SID_SETPINDIRECTION,PORT_E_PARAM_PIN);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1176  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1177        ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1178  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1179      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1180  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1181     if((Direction != PORT_PIN_IN) && (Direction != PORT_PIN_OUT))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1182     {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1183       /*Report Safety Error if the direction is out of range */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1184       SafeMcal_ReportError ((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1185                       PORT_SID_SETPINDIRECTION,PORT_E_PARAM_DIRECTION);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1186  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1187       ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1188  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1189     }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1190     #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1191     #endif /* PORT_DEV_ERROR_DETECT and PORT_SAFETY_ENABLE */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1192  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1193  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1194     #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1195     if (ErrStatus == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1196     #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1197     {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1198      ConfigIndex = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1199      for(Index = 0U;Index < PortNumber;Index++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1200      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1201        if(Port_lIsPortAvailable(Index) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1202        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1203          ConfigIndex++; /* to identify the Index of configuration*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1204        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1205      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1206  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1207      /* Get the config data location for specified Port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1208      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1209          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1210      DataPtr =(const uint32*)(const void*)(
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1211                (Port_kConfigPtr->PortConfigSetPtr)+ConfigIndex);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1212  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1213      /*parameter Pin is valid, check for pin direction changeable DET error */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1214      /*
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1215      PORT059: PORT087: Check if the direction is configured as changeable or not
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1216      */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1217      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1218          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1219      if ( ((*(DataPtr + PORT_DATA_OFS_DIR)) & ((uint32)0x01U << PinNumber))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1220             == PORT_PIN_DIR_NOT_CHANGEABLE
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1221              )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1222      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1223       #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1224         /* Report PORT_E_DIRECTION_UNCHANGEABLE DET if pin is configured for
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1225            direction not changeable
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1226         */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1227         Det_ReportError(
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1228           (uint16)PORT_MODULE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1229           PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1230           PORT_SID_SETPINDIRECTION,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1231           PORT_E_DIRECTION_UNCHANGEABLE);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1232       #endif /* PORT_DEV_ERROR_DETECT */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1233      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1234      else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1235      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1236       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1237          due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1238       IocrDataPtr = (const uint8*)(const void*)(DataPtr + PORT_DATA_OFS_CTL);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1239  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1240       /* Get Port Address */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1241       PortAddressPtr = Port_lAdr(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1242       /* Get the IOCR0 register address of particular port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1243       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1244            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1245          IocrRegPtr = ((volatile uint32*)(volatile void*) \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1246                                 PortAddressPtr + PORT_IOCR0_REG_OFFSET);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1247  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1248          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1249             due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1250          if((*(IocrDataPtr + PinNumber) & (uint8)PORT_DIR_MSK)==(uint8)Direction)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1251          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1252            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1253             due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1254            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1255              to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1256            PORT_SFR_RUNTIME_USER_MODE_MODIFY32((*(IocrRegPtr + \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1257              (PinNumber / PORT_NUM_FOUR))),PORT_PIN_IOCR0_CLEARMASK(PinNumber), \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1258                                     ((uint32)(*(IocrDataPtr + PinNumber)) << \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1259                                       (PORT_IOCR0_BIT_SHIFT_COUNT(PinNumber))))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1260          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1261          else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1262          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1263            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1264               to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1265            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1266              due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1267            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1268              due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1269            PORT_SFR_RUNTIME_USER_MODE_MODIFY32((*(IocrRegPtr + \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1270            (PinNumber / PORT_NUM_FOUR))),PORT_PIN_IOCR0_CLEARMASK(PinNumber), \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1271                                             (*((DataPtr + PORT_DATA_OFS_CTL2) \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1272             + (PinNumber / PORT_NUM_FOUR)) & PORT_PIN_IOCR0_SETMASK(PinNumber)))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1273          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1274        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1275      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1276    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1277  } /* Port_SetPinDirection */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1278  #endif /* Direction changes allowed / Port_SetPinDirection API is ON */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1279  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1280  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1281  ** Traceability     : [cover parentID=DS_AS_PORT142,DS_AS_PORT075_2,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1282                          DS_AS_PORT101_PORT211_3,DS_AS_PORT107_PORT146_3,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1283                          DS_AS4XX_PORT087_3,DS_AS3XX_PORT087_3,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1284                          DS_AS_PORT060_PORT061_PORT066,DS_AS_PORT213,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1285                          SAS_MCAL_PORT_0411,DS_AS_PORT107_PORT146_4,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1286                          DS_MCAL_PORT_0411_2]                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1287  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1288  ** Syntax           : void Port_RefreshPortDirection ( void )                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1289  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1290  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1291  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1292  ** Service ID       : 0x02                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1293  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1294  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1295  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1296  ** Reentrancy       : non - reentrant                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1297  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1298  ** Parameters (in)  : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1299  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1300  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1301  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1302  ** Return value     : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1303  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1304  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1305  **   - PORT060: PORT061: PORT066: refreshes the direction for all the port    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1306  **     pins that are configured as direction not changeable during run time   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1307  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1308  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1309  void Port_RefreshPortDirection(void)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1310  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1311    uint32                LoopCtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1312    /* Each Port Number for the hardware unit  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1313    uint32                PortNumber;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1314    uint32                ConfigIndex;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1315    #if (PORT_SET_PIN_DIRECTION_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1316    /* Direction changeable allowed */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1317    uint32                DirectionData;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1318    uint32                PinPos;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1319    #endif /* PORT_SET_PIN_DIRECTION_API */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1320    const uint32          *DataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1321    const uint8           *IocrDataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1322    volatile uint32       *IocrRegPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1323    Ifx_P *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1324  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1325    #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1326    /* Check for DET: PORT_E_UNINIT */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1327    if (Port_InitStatus != PORT_INITIALIZED)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1328    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1329      /* Report PORT_E_UNINIT DET if Port initialisation is not done
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1330      */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1331     Det_ReportError(
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1332        (uint16)PORT_MODULE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1333        PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1334        PORT_SID_REFRESHPORTDIR,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1335        PORT_E_UNINIT);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1336      /* PORT087: Skip the API functionality and return from the API */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1337    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1338    else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1339    #endif /* (PORT_DEV_ERROR_DETECT) == STD_ON*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1340    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1341     /* Loop from Port 0 till last Port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1342     PortNumber = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1343     ConfigIndex = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1344     do
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1345     {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1346       if(Port_lIsPortAvailable(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1347       {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1348         /* Pointer to the data for the port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1349         /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1350          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1351         DataPtr = (const uint32*)(const void*)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1352                   ((Port_kConfigPtr->PortConfigSetPtr) + ConfigIndex);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1353  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1354         #if (PORT_SET_PIN_DIRECTION_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1355         /* Direction changeable allowed */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1356         /* Get the direction changeable configuration for all the port pins */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1357         /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1358          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1359         DirectionData = *(DataPtr + PORT_DATA_OFS_DIR);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1360         #endif /* PORT_SET_PIN_DIRECTION_API == STD_ON*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1361  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1362         /* Pointer to control data for the first pin */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1363         /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1364          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1365         IocrDataPtr = (const uint8*)(const void*)(DataPtr + PORT_DATA_OFS_CTL);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1366  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1367         /* Pointer to control register for the first pin */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1368         /* Get Port Address */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1369         PortAddressPtr = Port_lAdr(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1370         /* Get the IOCR0 register address of particular port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1371         /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1372            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1373         IocrRegPtr = ((volatile uint32 *)(volatile void*)PortAddressPtr + \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1374                                                 PORT_IOCR0_REG_OFFSET);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1375  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1376         /* Start from the first pin */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1377         #if (PORT_SET_PIN_DIRECTION_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1378         PinPos = 0x01U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1379         #endif /* PORT_SET_PIN_DIRECTION_API */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1380  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1381         LoopCtr = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1382         do
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1383         {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1384          if(Port_lIsPinAvailable(PortNumber,LoopCtr) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1385          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1386            #if (PORT_SET_PIN_DIRECTION_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1387            /* Direction changeable is enabled */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1388            if ( (DirectionData & PinPos) == PORT_PIN_DIR_NOT_CHANGEABLE)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1389            {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1390              /* Direction of the pin cannot be changed during run time */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1391              /* Write the default value to the control bit fields of the Pin */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1392              PORT_SFR_RUNTIME_USER_MODE_MODIFY32(*IocrRegPtr, \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1393                   PORT_PIN_IOCR0_CLEARMASK(LoopCtr),((uint32)(*IocrDataPtr) << \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1394                                           PORT_IOCR0_BIT_SHIFT_COUNT(LoopCtr)))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1395            }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1396            #else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1397              /* Direction changeable is disabled */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1398              /* Write the default value to the control bit fields of the Pin */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1399              PORT_SFR_RUNTIME_USER_MODE_MODIFY32(*IocrRegPtr, \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1400                   PORT_PIN_IOCR0_CLEARMASK(LoopCtr),((uint32)(*IocrDataPtr) << \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1401                                           PORT_IOCR0_BIT_SHIFT_COUNT(LoopCtr)))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1402            #endif /* PORT_SET_PIN_DIRECTION_API */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1403          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1404  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1405          LoopCtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1406          if((uint32)(LoopCtr % PORT_NUM_FOUR) == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1407          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1408          /* Increment to point to the next data set */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1409          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1410            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1411          IocrRegPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1412          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1413          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1414            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1415          IocrDataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1416  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1417          #if (PORT_SET_PIN_DIRECTION_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1418          /* Shift the pin position to next pin */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1419          PinPos = PinPos << 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1420          #endif /* PORT_SET_PIN_DIRECTION_API */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1421  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1422          /* Loop for each pin in the port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1423  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1424         } while (LoopCtr <= PORT_PIN_MAX_NUMBER );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1425  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1426  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1427        ConfigIndex++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1428       }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1429      PortNumber++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1430     } while (PortNumber <= PORT_MAX_NUMBER); /* Loop for all the ports */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1431    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1432  }/* Port_RefreshPortDirection */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1433  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1434  /* Enable / Disable the use of the function */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1435  #if (PORT_SET_PIN_MODE_API == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1436  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1437  ** Traceability     : [cover parentID=DS_AS_PORT145,DS_AS_PORT125,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1438                          DS_AS_PORT128,DS_AS_PORT101_PORT211_5,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1439                          DS_AS_PORT107_PORT146_5,DS_AS4XX_PORT087_5,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1440                          DS_AS3XX_PORT087_5,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1441                          DS_AS4XX_PORT223,DS_AS_PORT213,DS_AS_PORT077,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1442                          DS_NAS_PORT_PR912_3,SAS_MCAL_PORT_0409,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1443                          SAS_MCAL_PORT_0415,SAS_MCAL_PORT_0410,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1444                          DS_MCAL_PORT_0417,DS_MCAL_PORT_0409]                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1445  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1446  ** Syntax           : void Port_SetPinMode                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1447  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1448  **                      Port_PinType Pin,                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1449  **                      Port_PinModeType Mode                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1450  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1451  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1452  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1453  ** Service ID       : 0x04                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1454  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1455  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1456  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1457  ** Reentrancy       : Re-entrant                                              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1458  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1459  ** Parameters (in)  : Port_PinType Pin - port pin ID whose mode has to be set **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1460  **                    Port_PinModeType Mode - port pin mode to be set         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1461  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1462  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1463  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1464  ** Return value     : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1465  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1466  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1467  **   - PORT125: Sets the port pin mode during runtime.                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1468  **   - This function is available if the PORT_SET_PIN_MODE_API is set ON      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1469  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1470  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1471  void Port_SetPinMode(Port_PinType Pin, Port_PinModeType Mode)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1472  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1473    /* Each Port Number for the hardware unit  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1474    uint32           PortNumber;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1475    uint32           PinNumber;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1476    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1477    uint32           ErrMode;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1478    uint8            ErrStatus;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1479    uint8            Direction;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1480    uint32           ConfigIndex;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1481    uint32           Index;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1482    const uint32     *DataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1483    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1484    volatile uint32  *IocrRegPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1485    Ifx_P           *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1486  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1487    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1488    IocrRegPtr = NULL_PTR;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1489    ConfigIndex = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1490    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1491  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1492    /* Extract the port number and pin number from the Pin Symbolic ID */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1493    PortNumber = (uint32)Port_lNumber(Pin);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1494    PinNumber  = (uint32)Port_lPinNumber(Pin);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1495  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1496    #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1497    if (Port_InitStatus != PORT_INITIALIZED)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1498    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1499      /* Report PORT_E_UNINIT DET if Port initialisation is not done
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1500      */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1501      Det_ReportError((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1502        PORT_SID_SETPINMODE,PORT_E_UNINIT);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1503  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1504      ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1505    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1506    else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1507    #endif /* PORT_DEV_ERROR_DETECT == STD_ON */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1508    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1509      #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1510      /* PORT077: Function parameters are checked in the order in which they are
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1511                  passed.
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1512      */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1513      /* PORT087: Check if Pin is valid */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1514  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1515      ErrStatus = Port_lChkPin(Pin,PortNumber,PinNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1516      #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1517  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1518      #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1519      if (ErrStatus == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1520      #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1521      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1522        /* Get Port Address */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1523        PortAddressPtr = Port_lAdr(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1524        /* Get the IOCR0 register address of particular port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1525        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1526            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1527        IocrRegPtr = ((volatile uint32*)\ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1528                       (volatile void*)PortAddressPtr + PORT_IOCR0_REG_OFFSET);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1529  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1530        #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1531        for(Index = 0U; Index < PortNumber;Index++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1532        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1533          if(Port_lIsPortAvailable(Index) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1534          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1535            ConfigIndex++; /* to identify the Index of configuration*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1536          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1537        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1538  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1539          /* Get the config data location for specified Port */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1540        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1541          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1542        DataPtr =(const uint32*)(const void*)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1543                 ((Port_kConfigPtr->PortConfigSetPtr)+ConfigIndex);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1544  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1545        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1546          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1547        if ((((*(DataPtr + PORT_DATA_OFS_MODE)) & ((uint32)0x01U << PinNumber))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1548              == PORT_PIN_MODE_NOT_CHANGEABLE)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1549           )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1550        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1551          /*PORT223: Report PORT_E_MODE_UNCHANGEABLE DET if the pin is configured
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1552           as mode not changeable */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1553          #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1554          Det_ReportError((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1555            PORT_SID_SETPINMODE,PORT_E_MODE_UNCHANGEABLE);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1556          #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1557  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1558          ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1559        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1560        else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1561        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1562  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1563          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1564            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1565          Direction = (uint8)((PORT_SFR_RUNTIME_USER_MODE_READ32(*(IocrRegPtr + \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1566             (PinNumber / PORT_NUM_FOUR))) & PORT_PIN_IOCR0_SETMASK(PinNumber)) \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1567                                       >> PORT_IOCR0_BIT_SHIFT_COUNT(PinNumber));
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1568  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1569          ErrMode = Port_lModeErrChk(Direction, Mode, ConfigIndex, PinNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1570  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1571          if (ErrMode == 1U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1572          {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1573            #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1574            /* Report PORT_E_PARAM_INVALID_MODE DET if pin mode is not valid */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1575            Det_ReportError((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1576              PORT_SID_SETPINMODE,PORT_E_PARAM_INVALID_MODE);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1577            #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1578  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1579  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1580            /*Report Safety Error if the Mode is out of range */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1581            #if (PORT_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1582            SafeMcal_ReportError ((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1583               PORT_SID_SETPINMODE,PORT_E_PARAM_INVALID_MODE);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1584            #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1585  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1586            ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1587  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1588          }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1589        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1590        #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1591      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1592    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1593  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1594    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1595    if (ErrStatus == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1596    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1597    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1598  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1599      /* Set the new mode in IOCR register */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1600      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1601        to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1602      PORT_SFR_RUNTIME_USER_MODE_MODIFY32((*(IocrRegPtr + \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1603             (PinNumber / PORT_NUM_FOUR))),PORT_IOCR0_MODE_CLEARMASK(PinNumber), \ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1604                          ((uint32)Mode << PORT_IOCR0_BIT_SHIFT_COUNT(PinNumber)))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1605    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1606  }/* Port_SetPinMode */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1607  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1608  #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1609  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1610  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lModeErrChk                **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1611  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1612  **                      uint8 Dir,                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1613  **                      Port_PinModeType Mode,                                **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1614  **                      uint32 ConfigIndex,                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1615  **                      uint32 PinNumber                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1616  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1617  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1618  ** Service ID       : NA                                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1619  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1620  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1621  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1622  ** Reentrancy       : Re-entrant                                              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1623  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1624  ** Parameters (in)  : uint8 Dir - Current direction of a pin                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1625  **                    Port_PinModeType Mode - port pin mode to be set         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1626  **                    uint32 ConfigIndex - Array Index                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1627  **                    uint32 PinNumber - port pin number                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1628  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1629  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1630  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1631  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1632  **                    0 -No error in the pin mode set                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1633  **                    1 -Error in the pin mode set                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1634  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1635  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1636  **   - Checks for the error.                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1637  **   - This function is available if the PORT_SET_PIN_MODE_API is set ON      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1638  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1639  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1640  IFX_LOCAL_INLINE uint32 Port_lModeErrChk
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1641  (
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1642    uint8 Dir, Port_PinModeType Mode, uint32 ConfigIndex, uint32 PinNumber
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1643  )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1644  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1645    uint32 ErrStatus;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1646  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1647    ErrStatus = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1648  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1649    /* parameter Pin is valid, check for the pin valid mode */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1650    if ((Dir & (uint8)PORT_DIR_MSK) == (uint8)PORT_PIN_IN)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1651    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1652      if (Mode != (Port_PinModeType)PORT_PIN_MODE_GPIO)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1653      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1654        ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1655      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1656    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1657    else if ( (Mode & AVAILABLE_MODE_MASK) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1658    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1659      ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1660    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1661    else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1662    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1663      uint32 Position;        /* Variables for determining if the specified*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1664      uint32 Mode_supported;  /* mode is supported or not */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1665  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1666      Position = Mode >> PORT_IOCR_PC_POS;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1667      Mode_supported = (uint32)1U << Position;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1668  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1669      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1670          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1671      if(((uint32)(Port_kConfigPtr->
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1672                    PortPinHwSupportedModes[ConfigIndex].U[PinNumber]) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1673            Mode_supported ) == 0U
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1674        )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1675      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1676        ErrStatus = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1677      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1678    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1679  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1680    return(ErrStatus);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1681  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1682  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1683  ** Syntax           : IFX_LOCAL_INLINE uint8 Port_lChkPin                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1684  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1685  **                      Port_PinType Pin,                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1686  **                      uint32 PortNo,                                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1687  **                      uint32 PinNo                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1688  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1689  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1690  ** Service ID       : NA                                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1691  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1692  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1693  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1694  ** Reentrancy       : Re-entrant                                              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1695  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1696  ** Parameters (in)  : Port_PinType Pin -  pin ID whose mode has to be set     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1697  **                    uint32 PinNo - port pin number                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1698  **                    uint32 PortNo - port number                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1699  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1700  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1701  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1702  ** Return value     : uint8                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1703  **                    0 - No error if portpin is available                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1704  **                    1 - Error if portpin is not available                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1705  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1706  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1707  **   - Checks for the error.                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1708  **   - This function is available if the PORT_SET_PIN_MODE_API is set ON      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1709  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1710  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1711  IFX_LOCAL_INLINE uint8 Port_lChkPin(Port_PinType Pin,uint32 PortNo,uint32 PinNo)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1712  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1713    uint8 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1714    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1715    uint32 PortReadOnly;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1716    uint32 PinAvailable;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1717    uint32 PortAvailable;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1718    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1719  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1720    RetVal = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1721    #if ((PORT_DEV_ERROR_DETECT == STD_OFF) && (PORT_SAFETY_ENABLE == STD_OFF))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1722    UNUSED_PARAMETER(PortNo)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1723    UNUSED_PARAMETER(PinNo)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1724    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1725  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1726    #if ((PORT_DEV_ERROR_DETECT == STD_ON) || (PORT_SAFETY_ENABLE == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1727  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1728    PortAvailable = Port_lIsPortAvailable(PortNo);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1729    PortReadOnly  = Port_lIsPortReadOnly(PortNo);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1730  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1731    if( PortAvailable != 0U )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1732    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1733      PinAvailable  = Port_lIsPinAvailable(PortNo,PinNo);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1734    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1735    else
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1736    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1737      /* If Port is not available, then Pin also Not available */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1738      PinAvailable = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1739    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1740  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1741  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1742    if ( (Pin > PORT_MAX_PIN_ID) ||
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1743          ((PortReadOnly != 0U) || (PinAvailable == 0U))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1744       )
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1745    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1746    #if (PORT_DEV_ERROR_DETECT == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1747      /*Report PORT_E_PARAM_PIN DET if the pin is out of range */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1748      Det_ReportError((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1749        PORT_SID_SETPINMODE,PORT_E_PARAM_PIN);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1750  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1751    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1752  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1753    #if (PORT_SAFETY_ENABLE == STD_ON)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1754      /*Report Safety Error if the pin is out of range */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1755      SafeMcal_ReportError ((uint16)PORT_MODULE_ID,PORT_INSTANCE_ID,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1756          PORT_SID_SETPINMODE,PORT_E_PARAM_PIN);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1757  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1758    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1759  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1760    RetVal = 1U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1761    }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1762  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1763    #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1764  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1765   return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1766  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1767  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1768  #endif /* (PORT_DEV_ERROR_DETECT == STD_ON) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1769  #endif /* (PORT_SET_PIN_MODE_API == STD_ON) */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1770  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1771  ** Traceability     : [cover parentID=DS_AS_PORT043_PORT055,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1772                         DS_AS_PORT001_PORT002_PORT041,DS_AS_PORT214,
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1773                         DS_AS_PORT042]                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1774  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1775  ** Syntax           : IFX_LOCAL_INLINE void Port_lIOInit(void)                **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1776  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1777  ** [/cover]                                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1778  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1779  ** Service ID       : NA                                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1780  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1781  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1782  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1783  ** Reentrancy       : None Re-entrant                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1784  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1785  ** Parameters (in)  : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1786  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1787  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1788  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1789  ** Return value     : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1790  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1791  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1792  **   - INLINE function to initialize Port registers                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1793  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1794  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1795  IFX_LOCAL_INLINE void Port_lIOInit(void)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1796  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1797    const uint32            *DataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1798    const Port_n_ConfigType *ConfigDataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1799    /* Each Port Number for the hardware unit */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1800    uint32                   PortNumber;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1801    /* Each Port level for the hardware unit */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1802    uint32                   PortLevel;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1803    /* Index to identify the port configuration information
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1804    from the configuration array  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1805    uint32                   ConfigIndex;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1806    Ifx_P                   *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1807    const uint32            *LVDSDataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1808    const uint32            *PCSRDataPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1809    volatile uint32         *LVDSRegPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1810    volatile uint32         *PCSRRegPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1811    uint32                   counter;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1812  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1813    /* Function call to initialize PDR registers */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1814    Port_lPDRInit();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1815  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1816    ConfigIndex = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1817  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1818    LVDSDataPtr = (const uint32*)(const void*)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1819                                 (Port_kConfigPtr->Port_LVDSConfigTypePtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1820  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1821    PCSRDataPtr = (const uint32*)(const void*)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1822                                 (Port_kConfigPtr->Port_PCSRConfigTypePtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1823  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1824    /* writing P_OUT and IOCR registers */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1825    for (PortNumber = 0U; PortNumber <= PORT_MAX_NUMBER ; PortNumber++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1826    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1827  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1828      if(Port_lIsPortAvailable(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1829      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1830        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1831          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1832        ConfigDataPtr = (Port_kConfigPtr->PortConfigSetPtr) + ConfigIndex ;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1833  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1834        /* Address of each port configuration */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1835        DataPtr = (const uint32 *)(const void*)(ConfigDataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1836  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1837        PortAddressPtr = Port_lAdr(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1838  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1839        /*
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1840         PORT043: PORT055: OUT register is written before IOCR bit field to avoid
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1841         the glitches on the pin
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1842        */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1843        if(Port_lIsPortReadOnly(PortNumber) == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1844        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1845          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1846            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1847          PortLevel = (*(DataPtr + PORT_DATA_OFS_LEVEL));
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1848          PORT_SFR_INIT_USER_MODE_WRITE32(
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1849                            PortAddressPtr->OMR.U, Port_lPinLevel(PortLevel));
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1850        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1851  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1852        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_0_3)!= 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1853        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1854          PORT_SFR_INIT_USER_MODE_WRITE32(PortAddressPtr->IOCR0.U, *DataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1855        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1856        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1857            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1858        DataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1859  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1860        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_4_7) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1861        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1862          PORT_SFR_INIT_USER_MODE_WRITE32(PortAddressPtr->IOCR4.U, *DataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1863        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1864        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1865            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1866        DataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1867  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1868        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_8_11)!= 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1869        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1870          PORT_SFR_INIT_USER_MODE_WRITE32(PortAddressPtr->IOCR8.U, *DataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1871        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1872        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1873            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1874        DataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1875  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1876        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_12_15)!= 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1877        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1878          PORT_SFR_INIT_USER_MODE_WRITE32(PortAddressPtr->IOCR12.U, *DataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1879        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1880  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1881        if(Port_lIsPortLVDSAvailable(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1882        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1883           /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1884            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1885           LVDSRegPtr  = ((volatile uint32*)(volatile void*)PortAddressPtr +
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1886                                            PORT_LPCR_REG_OFFSET);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1887           for(counter = 0U; (counter < PORT_MAX_LPCR_REG); counter++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1888           {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1889            if(Port_lIsPortPinPairAvailable(*LVDSDataPtr) == 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1890              {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1891               PORT_SFR_INIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1892                /* LPCRn */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1893               PORT_SFR_INIT_WRITE32(*LVDSRegPtr,*LVDSDataPtr);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1894               PORT_SFR_INIT_SETENDINIT();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1895              }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1896              /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1897            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1898              LVDSRegPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1899              /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1900            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1901              LVDSDataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1902           }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1903        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1904  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1905        if(Port_lIsPortPCSRAvailable(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1906        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1907           /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1908            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1909           PCSRRegPtr = ((volatile uint32*)(volatile void*)PortAddressPtr +
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1910                                           PORT_PCSR_REG_OFFSET);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1911           PORT_SFR_INIT_RESETSAFETYENDINIT_TIMED(PORT_ENDINIT_TIMEOUT);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1912           /* PCSRn */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1913           PORT_SFR_INIT_WRITE32((*PCSRRegPtr),(*PCSRDataPtr));
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1914           PORT_SFR_INIT_SETSAFETYENDINIT_TIMED();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1915  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1916           /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1917            due to PBConfigStructure and is within allowed range.*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1918           PCSRDataPtr++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1919        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1920  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1921        ConfigIndex++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1922      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1923    } /* For loop */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1924  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1925    /* Initialize PORT 40 Pad Disable control register */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1926    /* Reset endinit protect */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1927    PORT_SFR_INIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1928  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1929    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1930      to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1931    PORT_SFR_INIT_WRITE32(P40_PDISC.U,Port_kConfigPtr->PDiscSet[0U]);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1932  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1933    /* Set endinit protect */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1934    PORT_SFR_INIT_SETENDINIT();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1935  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1936  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1937  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1938  ** Syntax           : IFX_LOCAL_INLINE void Port_lPDRInit(void)               **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1939  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1940  ** Service ID       : NA                                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1941  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1942  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1943  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1944  ** Reentrancy       : None Re-entrant                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1945  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1946  ** Parameters (in)  : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1947  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1948  ** Parameters (out) : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1949  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1950  ** Return value     : none                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1951  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1952  ** Description      : This function:                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1953  **   - INLINE function to initialize Port PDR registers                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1954  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1955  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1956  IFX_LOCAL_INLINE void Port_lPDRInit(void)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1957  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1958    /* Each Port Number for the hardware unit  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1959    uint32                  PortNumber;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1960    /* Index to identify the port configuration information
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1961    from the configuration array  */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1962    uint32                  ConfigIndex;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1963    Ifx_P            *PortAddressPtr;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1964  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1965    ConfigIndex = 0U;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1966    /* Reset endinit protect */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1967  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1968    /* Port driver strength is configured in Port PDR0 register */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1969    for (PortNumber = 0U; PortNumber < PORT_MAX_NUMBER ; PortNumber++)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1970    {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1971      /* Parameter Port is checked for validity */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1972      if(Port_lIsPortAvailable(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1973      {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1974        PORT_SFR_INIT_RESETENDINIT();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1975        PortAddressPtr = Port_lAdr(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1976        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1977          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1978        PORT_SFR_INIT_WRITE32((PortAddressPtr->PDR0.U),\ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1979          Port_kConfigPtr->PortConfigSetPtr[ConfigIndex].DriverStrength0);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1980  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1981        if(Port_lIsPortPdr1Available(PortNumber) != 0U)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1982        {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1983          PortAddressPtr = Port_lAdr(PortNumber);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1984          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1985          due to PBConfigStructure and is within allowed range*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1986          PORT_SFR_INIT_WRITE32((PortAddressPtr->PDR1.U),\ 
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1987                 Port_kConfigPtr->PortConfigSetPtr[ConfigIndex].DriverStrength1);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1988        }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1989        PORT_SFR_INIT_SETENDINIT();
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1990        ConfigIndex++;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1991      }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1992    }/* For loop */
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1993  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1994  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1995  ** Syntax           : IFX_LOCAL_INLINE Ifx_P * Port_lAdr                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1996  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1997  **                      uint32 PortNumber                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1998  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1999  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2000  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2001  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2002  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2003  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2004  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2005  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2006  ** Parameters (in)  : uint32 PortNumber                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2007  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2008  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2009  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2010  ** Return value     : Ifx_P *RetVal -Return the port adresses.                **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2011  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2012  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2013  ** - The function like macro is to extract the Address of Px_OUT              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2014  **   register.                                                                **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2015  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2016  IFX_LOCAL_INLINE Ifx_P * Port_lAdr(uint32 PortNumber)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2017  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2018    Ifx_P *RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2019  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2020    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2021            to efficiently access the SFRs of PORT*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2022    RetVal = ( ((Ifx_P *)(void *)&P00_OUT +
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2023                (((PortNumber / PORT_CONSTANT_10) * PORT_CONSTANT_16) +
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2024                (PortNumber % PORT_CONSTANT_10)))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2025             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2026    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2027  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2028  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2029  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2030  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2031  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable31         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2032  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2033  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2034  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2035  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2036  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2037  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2038  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2039  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2040  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2041  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2042  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2043  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2044  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2045  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2046  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2047  **                    RetVal - Value which denotes whether the port is        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2048  **                    available or not                                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2049  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2050  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2051  ** - The function like macro is to check if the port is available or not      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2052  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2053  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2054  IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable31(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2055  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2056    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2057  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2058    RetVal = ( ((uint32)(PORT_CONSTANT_0x01) << (Port)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2059               ((uint32)PORTS_AVAILABLE_00_31)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2060             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2061    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2062  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2063  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2064  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2065  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2066  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable40         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2067  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2068  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2069  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2070  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2071  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2072  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2073  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2074  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2075  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2076  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2077  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2078  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2079  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2080  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2081  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2082  **                    RetVal - Value which denotes whether the port is        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2083  **                    available or not                                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2084  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2085  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2086  ** - The function like macro is to check if the port is available or not      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2087  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2088  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2089  IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable40(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2090  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2091    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2092  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2093    RetVal = ( ((uint32)(PORT_CONSTANT_0x01) << (Port - PORT_NUMBER_32)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2094               ((uint32)PORTS_AVAILABLE_32_63)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2095             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2096    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2097  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2098  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2099  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2100  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2101  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2102  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2103  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2104  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2105  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2106  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2107  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2108  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2109  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2110  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2111  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2112  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2113  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2114  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2115  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2116  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2117  **                   RetVal - Value which denotes whether the port is         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2118  **                   available or not.                                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2119  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2120  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2121  ** - The function like macro is to check if the port is read only or          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2122  **   it is writable.                                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2123  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2124  IFX_LOCAL_INLINE uint32 Port_lIsPortAvailable(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2125  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2126    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2127  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2129              (Port_lIsPortAvailable31(Port))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2130             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2131    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2132  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2133  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2134  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2135  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly31          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2136  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2137  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2138  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2139  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2140  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2141  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2142  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2143  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2144  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2145  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2146  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2147  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2148  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2149  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2150  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2151  **                    RetValue -Value which denotes whether the Port          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2152  **                    is read only or not                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2153  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2154  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2155  ** - The function like macro is to check if the port is read only or          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2156  **   it is writable.                                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2157  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2158  IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly31(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2159  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2160    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2161  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2162    RetVal = ( ((uint32)(PORT_CONSTANT_0x01) << (Port)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2163               ((uint32)PORTS_READONLY_00_31)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2164              );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2165    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2166  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2167  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2168  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2169  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly40          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2170  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2171  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2172  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2173  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2174  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2175  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2176  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2177  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2178  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2179  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2180  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2181  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2182  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2183  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2184  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2185  **                    RetValue -Value which denotes whether the Port          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2186  **                    is read only or not                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2187  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2188  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2189  ** - The function like macro is to check if the port is read only or          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2190  **   it is writable.                                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2191  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2192  IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly40(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2193  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2194    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2195  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2196    RetVal = ( ((uint32)(PORT_CONSTANT_0x01) << (Port - PORT_NUMBER_32)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2197               ((uint32)PORTS_READONLY_32_63)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2198              );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2199    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2200  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2201  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2202  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2203  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2204  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2205  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2206  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2207  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2208  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2209  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2210  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2211  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2212  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2213  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2214  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2215  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2216  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2217  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2218  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2219  **                    RetValue -Value which denotes whether the Port          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2220  **                    is read only or not                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2221  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2222  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2223  ** - The function like macro is to check if the port is read only or          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2224  **   it is writable.                                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2225  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2226  IFX_LOCAL_INLINE uint32 Port_lIsPortReadOnly(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2227  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2228    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2229  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2230    RetVal = ((Port <= PORT_NUMBER_31) ? (Port_lIsPortReadOnly31(Port)) :
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2231                                           (Port_lIsPortReadOnly40(Port))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2232              );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2233    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2234  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2235  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2236  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2237  ** Syntax           : IFX_LOCAL_INLINE uint16 Port_lIsPinAvailable            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2238  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2239  **                      uint32 Port,uint32 Pin                                **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2240  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2241  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2242  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2243  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2244  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2245  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2246  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2247  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2248  ** Parameters (in)  : uint32 Port,uint32 Pin - Port and Pin to be checked     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2249  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2250  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2251  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2252  ** Return value     : uint16                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2253  **                    RetVal -Value which denotes whether the Pin is present  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2254  **                    on the Port or not.                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2255  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2256  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2257  ** - The function like macro is to check if the port pin is available or not  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2258  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2259  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2260  IFX_LOCAL_INLINE uint16 Port_lIsPinAvailable(uint32 Port,uint32 Pin)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2261  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2262    uint16 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2263  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2264    RetVal = (uint16)( ((uint32)PORT_CONSTANT_0x01 << (Pin)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2265                        (Port_kAvailablePins[(Port)])
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2266                     );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2267    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2268  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2269  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2270  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2271  ** Syntax           : IFX_LOCAL_INLINE uint16 Port_lIsPortPdr1Available       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2272  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2273  **                     uint32 Port                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2274  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2275  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2276  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2277  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2278  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2279  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2280  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2281  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2282  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2283  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2284  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2285  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2286  ** Return value     : uint16                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2287  **                    RetValue -Value which denotes whether PDR1 register     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2288  **                    present for the port or not                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2289  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2290  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2291  ** - The function like macro is to check if any of the port pin 8 - 15        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2292  **   is available or not for the microcontroller.                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2293  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2294  IFX_LOCAL_INLINE uint16 Port_lIsPortPdr1Available(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2295  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2296    uint16 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2297  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2298    RetVal = (uint16)(((uint32)(PORT_PDR1_MASK)) & (Port_kAvailablePins[(Port)]));
	mov	d8,#0
	movh.a	a12,#@his(Port_kAvailablePins)
.L214:
	mov	d9,d8
	lea	a12,[a12]@los(Port_kAvailablePins)
.L101:
	mov	d14,#1
	st.a	Port_kConfigPtr,a4
.L102:
	mov	d12,#10
	mov.aa	a13,a12
.L251:
	mov.u	d13,#65280
	sub.a	a10,#16
.L213:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1969    for (PortNumber = 0U; PortNumber < PORT_MAX_NUMBER ; PortNumber++)      (inlined)
	lea	a14,39
.L107:
	ld.w	d10,.1.cnt
.L108:
	ld.w	d11,.2.cnt

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1969    for (PortNumber = 0U; PortNumber < PORT_MAX_NUMBER ; PortNumber++)      (inlined)
.L2:
	mov	d15,#31
.L252:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
	jge.u	d15,d9,.L3
.L253:
	add	d0,d9,#-32
.L254:
	mov	d15,#1
.L255:
	sh	d15,d15,d0
.L256:
	and	d15,d15,#263

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
	j	.L4
.L3:
	sh	d15,d14,d9
.L257:
	and	d15,d10

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
.L4:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1972      if(Port_lIsPortAvailable(PortNumber) != 0U)      (inlined)
	jeq	d15,#0,.L5
.L109:
	call	Mcal_ResetENDINIT
.L258:
	dvinit.bu	e0,d9,d12
	ld.a	a2,Port_kConfigPtr
.L259:
	dvstep.u	e0,e0,d12
.L260:
	div.u	e2,d9,d12
.L261:
	ld.a	a15,[a2]
.L262:
	sh	d0,#4
.L263:
	mul	d4,d8,#52
.L264:
	add	d3,d0
.L265:
	addsc.a	a15,a15,d4,#0
.L266:
	sh	d0,d3,#8
.L267:
	ld.w	d15,[a15]20
.L268:
	add	d0,d11
	mov.a	a4,d0
.L269:
	st.w	[a4]64,d15
.L270:
	ld.hu	d15,[a13]0
	and	d15,d13
.L271:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1981        if(Port_lIsPortPdr1Available(PortNumber) != 0U)      (inlined)
	jeq	d15,#0,.L6
.L272:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d4,#0
	ld.w	d15,[a15]24
	st.w	[a4]68,d15

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1981        if(Port_lIsPortPdr1Available(PortNumber) != 0U)      (inlined)
.L6:
	call	Mcal_SetENDINIT
.L273:
	add	d8,#1

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1972      if(Port_lIsPortAvailable(PortNumber) != 0U)      (inlined)
.L5:
	add	d9,#1
	add.a	a13,#2

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1969    for (PortNumber = 0U; PortNumber < PORT_MAX_NUMBER ; PortNumber++)      (inlined)
	loop	a14,.L2
.L96:
	ld.a	a15,Port_kConfigPtr
.L274:
	mov	d8,#0
	ld.w	d14,.1.cnt
.L215:
	mov	d9,d8
	ld.w	d10,.2.cnt
.L216:
	ld.a	a13,[a15]8
.L217:
	ld.a	a15,[a15]12
.L218:
	st.a	[a10]8,a15
.L111:
	mov	d11,#10
	st.a	[a10]4,a12
.L112:
	mov	d12,#31

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1825    for (PortNumber = 0U; PortNumber <= PORT_MAX_NUMBER ; PortNumber++)      (inlined)
	lea	a15,40
.L219:
	mov	d13,#1

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1825    for (PortNumber = 0U; PortNumber <= PORT_MAX_NUMBER ; PortNumber++)      (inlined)
	st.a	[a10],a15
.L7:
	mov	d15,#31
.L275:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
	jge.u	d15,d9,.L8
.L276:
	add	d0,d9,#-32
.L277:
	mov	d15,#1
.L278:
	sh	d15,d15,d0
.L279:
	and	d15,d15,#263

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
	j	.L9
.L8:
	mov	d15,#1
.L280:
	sh	d15,d15,d9
.L281:
	and	d15,d14

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
.L9:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1828      if(Port_lIsPortAvailable(PortNumber) != 0U)      (inlined)
	jeq	d15,#0,.L10
.L117:
	dvinit.bu	e0,d9,d11
	ld.a	a15,Port_kConfigPtr
.L282:
	dvstep.u	e0,e0,d11
.L283:
	div.u	e2,d9,d11
.L118:
	ld.a	a15,[a15]
.L284:
	mul	d15,d8,#52
.L119:
	sh	d0,#4
.L120:
	addsc.a	a2,a15,d15,#0
.L121:
	add	d3,d0
	sh	d15,d3,#8
.L285:
	add	d15,d10
.L286:
	mov.a	a15,d15
.L122:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2230    RetVal = ((Port <= PORT_NUMBER_31) ? (Port_lIsPortReadOnly31(Port)) :      (inlined)
	jlt.u	d12,d9,.L11
.L287:
	mov	d15,#0

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2230    RetVal = ((Port <= PORT_NUMBER_31) ? (Port_lIsPortReadOnly31(Port)) :      (inlined)
	j	.L12
.L11:
	add	d15,d9,#-32
.L288:
	sh	d15,d13,d15
.L289:
	and	d15,d15,#256

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2230    RetVal = ((Port <= PORT_NUMBER_31) ? (Port_lIsPortReadOnly31(Port)) :      (inlined)
.L12:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1843        if(Port_lIsPortReadOnly(PortNumber) == 0U)      (inlined)
	jne	d15,#0,.L13
.L128:
	ld.w	d15,[a2]16
.L290:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2299    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2300  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2301  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2302  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2303  ** Syntax           : IFX_LOCAL_INLINE uint16 Port_lIsPortIocrAvailable       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2304  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2305  **                      uint32 Port,uint16 Pin                                **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2306  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2307  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2308  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2309  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2310  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2311  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2312  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2313  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2314  ** Parameters (in)  : uint32 Port,uint16 Pin - Port and Pin to be checked     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2315  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2316  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2317  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2318  ** Return value     : uint16                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2319  **                    RetValue -Value which denotes whether Iocr register     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2320  **                    is available or not for the microcontroller             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2321  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2322  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2323  ** - The function like macro is to check if the IOCRx register for the port   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2324  **   is available or not for the microcontroller.                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2325  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2326  IFX_LOCAL_INLINE uint16 Port_lIsPortIocrAvailable(uint32 Port,uint16 Pin)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2327  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2328    uint16 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2329  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2330    RetVal = (uint16)( ((uint32)(Pin)) & (Port_kAvailablePins[(Port)]) );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2331    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2332  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2333  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2334  #if((PORT_SET_PIN_DIRECTION_API == STD_ON) || (PORT_SET_PIN_MODE_API == STD_ON))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2335  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2336  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lNumber                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2337  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2338  **                      Port_PinType pin                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2339  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2340  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2341  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2342  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2343  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2344  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2345  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2346  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2347  ** Parameters (in)  : Port_PinType Pin                                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2348  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2349  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2350  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2351  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2352  **                    RetValue -Value which denotes port number extracted     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2353  **                    from pin symbolic ID                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2354  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2355  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2356  ** - Defines to extract port number Port_PinType data, bit4 to bit 11 (8 bit) **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2357  **   represents the Port Number, to get that value Right shifted              **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2358  **   by 4 and Mask with 0xFF                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2359  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2360  IFX_LOCAL_INLINE uint32 Port_lNumber(Port_PinType Pin)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2361  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2362     uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2363  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2364     RetVal = (((Pin) >> PORT_NUMBER_OFFSET) & PORT_NUM_LOW8_MASK);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2365     return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2366  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2367  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2368  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2369  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lPinNumber                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2370  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2371  **                      Port_PinType pin                                      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2372  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2373  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2374  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2375  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2376  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2377  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2378  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2379  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2380  ** Parameters (in)  : Port_PinType Pin                                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2381  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2382  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2383  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2384  * Return value     : uint32                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2385  **                   RetValue -Value which denotes pin number extracted       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2386  **                   from pin symbolic ID                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2387  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2388  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2389  **  -Defines to extract pin number from Port_PinType data                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2390  **   least significant 4-bit represents the Pin Number, to get that           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2391  **   value Masked with 0x0F                                                   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2392  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2393  IFX_LOCAL_INLINE uint32 Port_lPinNumber(Port_PinType Pin)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2394  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2395     uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2396  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2397     RetVal = ((Pin) & PORT_PIN_LOW4_MASK);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2398  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2399     return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2400  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2401  #endif
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2402  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2403  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2404  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lPinLevel                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2405  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2406  **                      uint32 level                                          **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2407  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2408  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2409  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2410  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2411  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2412  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2413  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2414  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2415  ** Parameters (in)  : uint32 Level                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2416  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2417  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2418  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2419  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2420  **                    RetVal - Value to be set for the OMR register           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2421  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2422  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2423  ** -OMR register value to set the configured initial level                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2424  **  To get the port pin level Masked with 0x0000FFFFU and left shited by 16   **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2425  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2426  IFX_LOCAL_INLINE uint32 Port_lPinLevel(uint32 Level)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2427  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2428    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2429  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2430    RetVal = ((((~(Level)) & PORT_LOWER_16BIT_MASK) << PORT_16BIT_SHIFTVALUE) |
	mov	d0,#-1
	xor	d0,d15
.L291:
	insert	d0,d0,#0,#16,#16
.L292:
	sh	d0,d0,#16
.L293:
	or	d0,d15
	st.w	[a15]4,d0

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1843        if(Port_lIsPortReadOnly(PortNumber) == 0U)      (inlined)
.L13:
	ld.a	a4,[a10]4
	ld.hu	d0,[a4]0
	and	d15,d0,#15
.L294:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1852        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_0_3)!= 0U)      (inlined)
	jeq	d15,#0,.L14
.L295:
	ld.w	d15,[a2]
	st.w	[a15]16,d15

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1852        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_0_3)!= 0U)      (inlined)
.L14:
	and	d15,d0,#240
	add.a	a2,#4
.L296:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1860        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_4_7) != 0U)      (inlined)
	jeq	d15,#0,.L15
.L297:
	ld.w	d15,[a2]
	st.w	[a15]20,d15

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1860        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_4_7) != 0U)      (inlined)
.L15:
	mov	d15,#3840
	add.a	a2,#4
.L298:
	and	d15,d0
.L299:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1868        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_8_11)!= 0U)      (inlined)
	jeq	d15,#0,.L16
.L300:
	ld.w	d15,[a2]
	st.w	[a15]24,d15

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1868        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_8_11)!= 0U)      (inlined)
.L16:
	mov.u	d15,#61440
	add.a	a2,#4
.L301:
	and	d0,d15
.L302:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1876        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_12_15)!= 0U)      (inlined)
	jeq	d0,#0,.L17
.L303:
	ld.w	d15,[a2]
	st.w	[a15]28,d15

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1876        if(Port_lIsPortIocrAvailable(PortNumber,(uint16)PORT_PIN_12_15)!= 0U)      (inlined)
.L17:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2431                (Level)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2432             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2433  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2434    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2435  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2436  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2437  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2438  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable31     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2439  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2440  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2441  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2442  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2443  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2444  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2445  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2446  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2447  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2448  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2449  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2450  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2451  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2452  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2453  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2454  **                    RetValue -Value which denotes whether Port supports LVDS**
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2455  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2456  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2457  ** - The function like macro is to check if the port supports LVDS            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2458  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2459  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2460  IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable31(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2461  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2462    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2463  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2464    RetVal = ( ((uint32)(PORT_CONSTANT_0x01) << (Port)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2465               ((uint32)PORTS_LVDS_00_31)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2466             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2467    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2468  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2469  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2470  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2471  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable40     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2472  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2473  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2474  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2475  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2476  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2477  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2478  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2479  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2480  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2481  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2482  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2483  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2484  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2485  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2486  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2487  **                    RetValue -Value which denotes whether Port supports LVDS**
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2488  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2489  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2490  ** - The function like macro is to check if the port supports LVDS            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2491  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2492  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2493  IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable40(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2494  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2495    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2496  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2497    RetVal = ( ((uint32)(PORT_CONSTANT_0x01) << (Port - PORT_NUMBER_32)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2498               ((uint32)PORTS_LVDS_32_40)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2499             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2500    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2501  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2502  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2503  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2504  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2505  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2506  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2507  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2508  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2509  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2510  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2511  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2512  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2513  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2514  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2515  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2516  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2517  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2518  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2519  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2520  **                    RetValue -Value which denotes whether Port supports LVDS**
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2521  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2522  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2523  ** - The function like macro is to check if the port supports LVDS            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2524  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2525  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2526  IFX_LOCAL_INLINE uint32 Port_lIsPortLVDSAvailable(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2527  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2528    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2529  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2530    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortLVDSAvailable40(Port)) :
	mov	d15,#31
.L304:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2530    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortLVDSAvailable40(Port)) :      (inlined)
	jge.u	d15,d9,.L18
.L305:
	mov	d15,#0

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2530    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortLVDSAvailable40(Port)) :      (inlined)
	j	.L19
.L18:
	mov	d15,#1
.L306:
	sh	d0,d15,d9
	ld.w	d15,.3.cnt
.L307:
	and	d15,d0

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2530    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortLVDSAvailable40(Port)) :      (inlined)
.L19:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1881        if(Port_lIsPortLVDSAvailable(PortNumber) != 0U)      (inlined)
	jeq	d15,#0,.L20
.L130:
	lea	a12,[a15]160
.L220:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1887           for(counter = 0U; (counter < PORT_MAX_LPCR_REG); counter++)      (inlined)
	mov.a	a14,#2
.L21:
	ld.w	d15,[a13]
.L308:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2531              (Port_lIsPortLVDSAvailable31(Port))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2532             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2533    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2534  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2535  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2536  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2537  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2538  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable31     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2539  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2540  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2541  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2542  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2543  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2544  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2545  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2546  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2547  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2548  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2549  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2550  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2551  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2552  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2553  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2554  **                    RetValue -Value which denotes whether Port supports PCSR**
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2555  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2556  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2557  ** - The function like macro is to check if the port supports PCSR            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2558  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2559  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2560  IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable31(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2561  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2562    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2563  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2564    RetVal = ( ((uint32)(PORT_CONSTANT_0x01) << (Port)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2565               ((uint32)PORTS_PCSR_00_31)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2566             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2567    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2568  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2569  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2570  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2571  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable40     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2572  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2573  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2574  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2575  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2576  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2577  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2578  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2579  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2580  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2581  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2582  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2583  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2584  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2585  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2586  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2587  **                    RetValue -Value which denotes whether Port supports PCSR**
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2588  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2589  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2590  ** - The function like macro is to check if the port supports PCSR            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2591  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2592  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2593  IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable40(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2594  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2595    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2596  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2597    RetVal = ( ((uint32)(PORT_CONSTANT_0x01) << (Port - PORT_NUMBER_32)) &
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2598               ((uint32)PORTS_PCSR_32_63)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2599             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2600    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2601  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2602  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2603  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2604  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2605  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2606  **                      uint32 Port                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2607  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2608  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2609  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2610  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2611  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2612  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2613  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2614  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2615  ** Parameters (in)  : uint32 Port - Port to be checked                        **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2616  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2617  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2618  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2619  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2620  **                    RetValue -Value which denotes whether Port supports PCSR**
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2621  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2622  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2623  ** - The function like macro is to check if the port supports PCSR            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2624  **   for the microcontroller.                                                 **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2625  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2626  IFX_LOCAL_INLINE uint32 Port_lIsPortPCSRAvailable(uint32 Port)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2627  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2628    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2629  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2630    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortPCSRAvailable40(Port)) :
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2631              (Port_lIsPortPCSRAvailable31(Port))
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2632             );
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2633    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2634  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2635  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2636  /*******************************************************************************
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2637  ** Syntax           : IFX_LOCAL_INLINE uint32 Port_lIsPortPinPairAvailable    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2638  **                    (                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2639  **                      uint32 PortLPCRvalue                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2640  **                    )                                                       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2641  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2642  ** Service ID       : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2643  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2644  ** Sync/Async       : Synchronous                                             **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2645  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2646  ** Reentrancy       : Non reentrant                                           **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2647  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2648  ** Parameters (in)  : uint32 PortLPCRvalue - Port LPCR Reg value to be checked**
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2649  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2650  ** Parameters (out) : None                                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2651  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2652  ** Return value     : uint32                                                  **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2653  **                    RetVal -Value which denotes the LVDS configuration      **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2654  **                    for the PortPinPair.                                    **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2655  **                                                                            **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2656  ** Description      :                                                         **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2657  ** - The function like macro is to check if the portpinpair for lvds is       **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2658  **     avialable for the microcontroller.                                     **
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2659  *******************************************************************************/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2660  IFX_LOCAL_INLINE uint32 Port_lIsPortPinPairAvailable(uint32 PortLPCRvalue)
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2661  {
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2662    uint32 RetVal;
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2663  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2664    RetVal = ( (PortLPCRvalue >> (uint32)16) & 0xFFFFU );
	sh	d15,d15,#-16
.L309:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1889            if(Port_lIsPortPinPairAvailable(*LVDSDataPtr) == 0U)      (inlined)
	jne	d15,#0,.L22
.L310:
	call	Mcal_ResetENDINIT
.L311:
	ld.w	d15,[a13]
	st.w	[a12],d15
.L312:
	call	Mcal_SetENDINIT

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1889            if(Port_lIsPortPinPairAvailable(*LVDSDataPtr) == 0U)      (inlined)
.L22:
	add.a	a12,#4
.L313:
	add.a	a13,#4

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1887           for(counter = 0U; (counter < PORT_MAX_LPCR_REG); counter++)      (inlined)
	loop	a14,.L21

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1881        if(Port_lIsPortLVDSAvailable(PortNumber) != 0U)      (inlined)
.L20:
	mov	d15,#31
.L314:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2630    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortPCSRAvailable40(Port)) :      (inlined)
	jge.u	d15,d9,.L23
.L315:
	mov	d15,#1
.L316:
	add	d0,d9,#-32
.L317:
	sh	d15,d15,d0
.L318:
	and	d15,d15,#256

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2630    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortPCSRAvailable40(Port)) :      (inlined)
	j	.L24
.L23:
	mov	d15,#1
.L319:
	sh	d0,d15,d9
.L320:
	mov	d15,#2049
.L321:
	and	d15,d0

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2630    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortPCSRAvailable40(Port)) :      (inlined)
.L24:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1905        if(Port_lIsPortPCSRAvailable(PortNumber) != 0U)      (inlined)
	jeq	d15,#0,.L25
.L135:
	ld.w	d4,.4.cnt
	call	Mcal_ResetSafetyENDINIT_Timed
.L322:
	ld.a	a2,[a10]8
.L221:
	ld.w	d15,[a2+]
	st.a	[a10]8,a2
	st.w	[a15]100,d15
.L323:
	call	Mcal_SetSafetyENDINIT_Timed

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1905        if(Port_lIsPortPCSRAvailable(PortNumber) != 0U)      (inlined)
.L25:
	add	d8,#1

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1828      if(Port_lIsPortAvailable(PortNumber) != 0U)      (inlined)
.L10:
	ld.a	a15,[a10]4
	add.a	a15,#2
	st.a	[a10]4,a15
	add	d9,#1
.L324:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  1825    for (PortNumber = 0U; PortNumber <= PORT_MAX_NUMBER ; PortNumber++)      (inlined)
	ld.a	a15,[a10]
	add.a	a15,#-1
	st.a	[a10],a15
	add.a	a15,#1
	loop	a15,.L7
.L325:
	call	Mcal_ResetENDINIT
.L326:
	ld.a	a15,Port_kConfigPtr
	ld.a	a15,[a15]4
	ld.hu	d15,[a15]0
	movh.a	a15,#61444
	st.w	[a15]@los(0xf003e060),d15
.L327:
	j	Mcal_SetENDINIT
.L78:
	
__Port_Init_function_end:
	.size	Port_Init,__Port_Init_function_end-Port_Init
.L58:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Port_SetPinDirection')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Port_SetPinDirection
; Function Port_SetPinDirection
.L45:
Port_SetPinDirection:	.type	func
	mov	d15,d4
.L223:
	mov	d6,d5
.L150:
	extr.u	d7,d15,#4,#8
.L151:
	and	d8,d15,#15
.L156:
	mov	d0,#0
.L224:
	mov	d1,d0
.L226:
	jeq	d7,#0,.L30
.L332:
	mov.a	a15,d7
.L160:
	mov	d2,#1
	ld.w	d4,.1.cnt
.L222:
	mov	d3,d2
	add.a	a15,#-1
.L333:
	mov	d15,#31
.L27:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
	jge.u	d15,d1,.L28
.L334:
	add	d5,d1,#-32
.L335:
	sh	d5,d2,d5
.L336:
	and	d5,d5,#263

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
	j	.L29
.L28:
	sh	d5,d3,d1
.L337:
	and	d5,d4

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
.L29:
	cadd	d0,d5,d0,#1
.L161:
	add	d1,#1
	loop	a15,.L27
.L30:
	ld.a	a15,Port_kConfigPtr
.L338:
	mul	d15,d0,#52
.L339:
	mov	d0,#1
.L225:
	ld.a	a15,[a15]
.L340:
	sh	d0,d0,d8
.L341:
	addsc.a	a15,a15,d15,#0
.L227:
	ld.w	d15,[a15]32
.L342:
	and	d15,d0
.L343:
	jeq	d15,#0,.L31
.L163:
	mov	d15,#10
	ld.w	d0,.2.cnt
.L344:
	dvinit.bu	e4,d7,d15
	addsc.a	a4,a15,d8,#0
.L345:
	dvstep.u	e4,e4,d15
.L346:
	div.u	e2,d7,d15
.L164:
	mov	d2,#-1
.L167:
	sh	d4,#4
.L347:
	add	d3,d4
	ld.bu	d4,[a4]
.L348:
	sh	d15,d3,#8
.L349:
	add	d0,d15
.L350:
	mov.a	a2,d0
.L168:
	and	d15,d8,#3
.L170:
	lea	a2,[a2]16
.L171:
	insert	d3,d8,#0,#0,#2
	sh	d0,d15,#3
	mov	d15,#248
	addsc.a	a2,a2,d3,#0
.L229:
	sh	d1,d15,d0
.L172:
	and	d15,d4,#128
.L173:
	xor	d2,d1
.L174:
	jne	d15,d6,.L32
.L175:
	sh	d4,d4,d0
	ld.w	d15,[a2]
	and	d15,d2
.L230:
	or	d15,d4
	st.w	[a2],d15
.L31:
	ret
.L32:
	addsc.a	a15,a15,d3,#0
.L228:
	ld.w	d0,[a2]
	ld.w	d15,[a15]36
	and	d0,d2
	and	d15,d1
.L231:
	or	d0,d15
	st.w	[a2],d0
.L177:
	ret
.L139:
	
__Port_SetPinDirection_function_end:
	.size	Port_SetPinDirection,__Port_SetPinDirection_function_end-Port_SetPinDirection
.L63:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Port_RefreshPortDirection')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Port_RefreshPortDirection
; Function Port_RefreshPortDirection
.L47:
Port_RefreshPortDirection:	.type	func
	mov	d2,#0
	movh.a	a2,#@his(Port_kAvailablePins)
.L232:
	mov	d3,d2
	lea	a2,[a2]@los(Port_kAvailablePins)
.L233:
	mov	d6,#10
	ld.a	a4,Port_kConfigPtr
.L355:
	mov	d7,#1
	lea	a5,40
.L189:
	mov	d10,#248
	ld.w	d4,.1.cnt
.L356:
	mov	d12,#-1
	ld.w	d5,.2.cnt
.L190:
	mov	d13,#15
.L34:
	mov	d15,#31
.L357:

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
	jge.u	d15,d2,.L35
.L358:
	add	d1,d2,#-32
.L359:
	mov	d0,#1
.L360:
	sh	d0,d0,d1
.L361:
	and	d0,d0,#263

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
	j	.L36
.L35:
	mov	d15,#1
.L362:
	sh	d15,d15,d2
.L363:
	and	d0,d15,d4

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2128    RetVal = ((Port > PORT_NUMBER_31) ? (Port_lIsPortAvailable40(Port)) :      (inlined)
.L36:
	jeq	d0,#0,.L37
.L193:
	dvinit.bu	e0,d2,d6
	ld.a	a15,[a4]
.L364:
	dvstep.u	e0,e0,d6
.L365:
	div.u	e8,d2,d6
.L366:
	mul	d15,d3,#52
.L367:
	sh	d0,#4
.L368:
	addsc.a	a15,a15,d15,#0
.L234:
	add	d9,d0
.L369:
	ld.w	d11,[a15]32
.L235:
	sh	d0,d9,#8
	ld.hu	d9,[a2]0
.L370:
	add	d0,d5
.L371:
	add	d15,d0,#16
.L236:
	mov.a	a6,d15
.L237:
	mov	d1,#1
.L238:
	mov	d8,#0
.L38:
	sh	d0,d7,d8
	extr.u	d0,d0,#0,#16
.L372:
	and	d0,d9
.L373:
	jeq	d0,#0,.L39
.L374:
	and	d15,d11,d1
.L375:
	jne	d15,#0,.L40
.L191:
	and	d15,d8,#3
	sh	d15,#3
	ld.w	d14,[a6]
	sh	d0,d10,d15
	xor	d0,d12
	and	d14,d0
	ld.bu	d0,[a15]
	sh	d0,d0,d15
.L239:
	or	d14,d0
	st.w	[a6],d14
.L40:
.L39:
	add	d8,#1
.L376:
	and	d15,d8,#3
.L377:
	jne	d15,#0,.L41
.L378:
	add.a	a6,#4
.L41:
	sh	d1,#1
	add.a	a15,#1
.L379:
	jge.u	d13,d8,.L38
.L380:
	add	d3,#1
.L37:
	add	d2,#1
	add.a	a2,#2
	loop	a5,.L34
.L381:
	ret
.L179:
	
__Port_RefreshPortDirection_function_end:
	.size	Port_RefreshPortDirection,__Port_RefreshPortDirection_function_end-Port_RefreshPortDirection
.L68:
	; End of function
	
	.sdecl	'.text.Shared.DEFAULT_CODE_ROM',code,cluster('Port_SetPinMode')
	.sect	'.text.Shared.DEFAULT_CODE_ROM'
	.align	2
	
	.global	Port_SetPinMode
; Function Port_SetPinMode
.L49:
Port_SetPinMode:	.type	func
	extr.u	d0,d4,#4,#8
	ld.w	d2,.2.cnt
.L199:
	mov	d15,#10
.L201:
	and	d1,d4,#15
.L204:
	dvinit.bu	e8,d0,d15
	dvstep.u	e8,e8,d15
.L386:
	div.u	e6,d0,d15
.L387:
	sh	d8,#4
.L388:
	add	d7,d8
	sh	d15,d7,#8
.L389:
	add	d2,d15
.L390:
	mov.a	a15,d2
.L205:
	and	d15,d1,#3
.L208:
	lea	a15,[a15]16
.L209:
	sh	d0,d15,#3
	insert	d15,d1,#0,#0,#2
	mov	d2,#-1
	sh	d5,d5,d0
.L240:
	addsc.a	a15,a15,d15,#0
.L241:
	mov	d15,#56
	ld.w	d1,[a15]
	sh	d15,d15,d0
	xor	d15,d2
	and	d1,d15
.L242:
	or	d1,d5
	st.w	[a15],d1
.L210:
	ret
.L195:
	
__Port_SetPinMode_function_end:
	.size	Port_SetPinMode,__Port_SetPinMode_function_end-Port_SetPinMode
.L73:
	; End of function
	
	.sdecl	'.rodata.Shared.DEFAULT_CONST_16BIT',data,rom,cluster('Port_kAvailablePins')
	.sect	'.rodata.Shared.DEFAULT_CONST_16BIT'
	.align	4
Port_kAvailablePins:	.type	object
	.size	Port_kAvailablePins,82
	.half	8191,248,4095
	.space	14
	.half	511,65535,3,15
	.half	2047,511
	.space	8
	.half	32719,255,4095,255
	.space	16
	.half	253,65535,62
	.space	10
	.half	1023
	.sdecl	'.zbss.Port.Port_kConfigPtr',data,cluster('Port_kConfigPtr')
	.sect	'.zbss.Port.Port_kConfigPtr'
	.align	4
Port_kConfigPtr:	.type	object
	.size	Port_kConfigPtr,4
	.space	4
	.calls	'Port_Init','Mcal_ResetENDINIT'
	.calls	'Port_Init','Mcal_SetENDINIT'
	.calls	'Port_Init','Mcal_ResetSafetyENDINIT_Timed'
	.calls	'Port_Init','Mcal_SetSafetyENDINIT_Timed'
	.calls	'Port_Init','',16
	.calls	'Port_SetPinDirection','',0
	.calls	'Port_RefreshPortDirection','',0
	.extern	Mcal_ResetENDINIT
	.extern	Mcal_SetENDINIT
	.extern	Mcal_ResetSafetyENDINIT_Timed
	.extern	Mcal_SetSafetyENDINIT_Timed
	.calls	'Port_SetPinMode','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L51:
	.word	12887
	.half	3
	.word	.L52
	.byte	4
.L50:
	.byte	1
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L53
.L81:
	.byte	2
	.byte	'Port_lIOInit',0,3,1,131,14,23,1,1
.L82:
	.byte	3,4,4,4,4,4,4,4,4,4,4,4,4,0,0
.L95:
	.byte	2
	.byte	'Port_lPDRInit',0,3,1,164,15,23,1,1
.L97:
	.byte	3,4,4,4,4,0,0,5
	.byte	'unsigned int',0,4,7,5
	.byte	'int',0,4,5,5
	.byte	'unsigned char',0,1,8,5
	.byte	'unsigned short int',0,2,7,6
	.byte	'_Ifx_P_OUT_Bits',0,2,143,3,16,4,7
	.byte	'P0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'P1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'P2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'P3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'P4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'P5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'P6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'P7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'P8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'P9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'P10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'P11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'P12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'P13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'P14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'P15',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'reserved_16',0,2
	.word	309
	.byte	16,0,2,35,2,0,8,2,180,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	331
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMR_Bits',0,2,169,2,16,4,7
	.byte	'PS0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'PS1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'PS2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'PS3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'PS4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'PS5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'PS6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'PS7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'PS8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'PS9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'PS10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'PS11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'PS12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'PS13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'PS14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'PS15',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'PCL0',0,1
	.word	292
	.byte	1,7,2,35,2,7
	.byte	'PCL1',0,1
	.word	292
	.byte	1,6,2,35,2,7
	.byte	'PCL2',0,1
	.word	292
	.byte	1,5,2,35,2,7
	.byte	'PCL3',0,1
	.word	292
	.byte	1,4,2,35,2,7
	.byte	'PCL4',0,1
	.word	292
	.byte	1,3,2,35,2,7
	.byte	'PCL5',0,1
	.word	292
	.byte	1,2,2,35,2,7
	.byte	'PCL6',0,1
	.word	292
	.byte	1,1,2,35,2,7
	.byte	'PCL7',0,1
	.word	292
	.byte	1,0,2,35,2,7
	.byte	'PCL8',0,1
	.word	292
	.byte	1,7,2,35,3,7
	.byte	'PCL9',0,1
	.word	292
	.byte	1,6,2,35,3,7
	.byte	'PCL10',0,1
	.word	292
	.byte	1,5,2,35,3,7
	.byte	'PCL11',0,1
	.word	292
	.byte	1,4,2,35,3,7
	.byte	'PCL12',0,1
	.word	292
	.byte	1,3,2,35,3,7
	.byte	'PCL13',0,1
	.word	292
	.byte	1,2,2,35,3,7
	.byte	'PCL14',0,1
	.word	292
	.byte	1,1,2,35,3,7
	.byte	'PCL15',0,1
	.word	292
	.byte	1,0,2,35,3,0,8,2,132,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	647
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_ID_Bits',0,2,110,16,4,7
	.byte	'MODREV',0,1
	.word	292
	.byte	8,0,2,35,0,7
	.byte	'MODTYPE',0,1
	.word	292
	.byte	8,0,2,35,1,7
	.byte	'MODNUMBER',0,2
	.word	309
	.byte	16,0,2,35,2,0,8,2,147,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	1218
	.byte	4,2,35,0,0,10,4
	.word	292
	.byte	11,3,0,6
	.byte	'_Ifx_P_IOCR0_Bits',0,2,140,1,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	3,5,2,35,0,7
	.byte	'PC0',0,1
	.word	292
	.byte	5,0,2,35,0,7
	.byte	'reserved_8',0,1
	.word	292
	.byte	3,5,2,35,1,7
	.byte	'PC1',0,1
	.word	292
	.byte	5,0,2,35,1,7
	.byte	'reserved_16',0,1
	.word	292
	.byte	3,5,2,35,2,7
	.byte	'PC2',0,1
	.word	292
	.byte	5,0,2,35,2,7
	.byte	'reserved_24',0,1
	.word	292
	.byte	3,5,2,35,3,7
	.byte	'PC3',0,1
	.word	292
	.byte	5,0,2,35,3,0,8,2,163,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	1346
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_IOCR4_Bits',0,2,166,1,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	3,5,2,35,0,7
	.byte	'PC4',0,1
	.word	292
	.byte	5,0,2,35,0,7
	.byte	'reserved_8',0,1
	.word	292
	.byte	3,5,2,35,1,7
	.byte	'PC5',0,1
	.word	292
	.byte	5,0,2,35,1,7
	.byte	'reserved_16',0,1
	.word	292
	.byte	3,5,2,35,2,7
	.byte	'PC6',0,1
	.word	292
	.byte	5,0,2,35,2,7
	.byte	'reserved_24',0,1
	.word	292
	.byte	3,5,2,35,3,7
	.byte	'PC7',0,1
	.word	292
	.byte	5,0,2,35,3,0,8,2,179,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	1561
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_IOCR8_Bits',0,2,179,1,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	3,5,2,35,0,7
	.byte	'PC8',0,1
	.word	292
	.byte	5,0,2,35,0,7
	.byte	'reserved_8',0,1
	.word	292
	.byte	3,5,2,35,1,7
	.byte	'PC9',0,1
	.word	292
	.byte	5,0,2,35,1,7
	.byte	'reserved_16',0,1
	.word	292
	.byte	3,5,2,35,2,7
	.byte	'PC10',0,1
	.word	292
	.byte	5,0,2,35,2,7
	.byte	'reserved_24',0,1
	.word	292
	.byte	3,5,2,35,3,7
	.byte	'PC11',0,1
	.word	292
	.byte	5,0,2,35,3,0,8,2,187,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	1776
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_IOCR12_Bits',0,2,153,1,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	3,5,2,35,0,7
	.byte	'PC12',0,1
	.word	292
	.byte	5,0,2,35,0,7
	.byte	'reserved_8',0,1
	.word	292
	.byte	3,5,2,35,1,7
	.byte	'PC13',0,1
	.word	292
	.byte	5,0,2,35,1,7
	.byte	'reserved_16',0,1
	.word	292
	.byte	3,5,2,35,2,7
	.byte	'PC14',0,1
	.word	292
	.byte	5,0,2,35,2,7
	.byte	'reserved_24',0,1
	.word	292
	.byte	3,5,2,35,3,7
	.byte	'PC15',0,1
	.word	292
	.byte	5,0,2,35,3,0,8,2,171,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	1993
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_IN_Bits',0,2,118,16,4,7
	.byte	'P0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'P1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'P2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'P3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'P4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'P5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'P6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'P7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'P8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'P9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'P10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'P11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'P12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'P13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'P14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'P15',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'reserved_16',0,2
	.word	309
	.byte	16,0,2,35,2,0,8,2,155,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	2213
	.byte	4,2,35,0,0,10,24
	.word	292
	.byte	11,23,0,6
	.byte	'_Ifx_P_PDR0_Bits',0,2,204,3,16,4,7
	.byte	'PD0',0,1
	.word	292
	.byte	3,5,2,35,0,7
	.byte	'PL0',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'PD1',0,1
	.word	292
	.byte	3,1,2,35,0,7
	.byte	'PL1',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'PD2',0,1
	.word	292
	.byte	3,5,2,35,1,7
	.byte	'PL2',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'PD3',0,1
	.word	292
	.byte	3,1,2,35,1,7
	.byte	'PL3',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'PD4',0,1
	.word	292
	.byte	3,5,2,35,2,7
	.byte	'PL4',0,1
	.word	292
	.byte	1,4,2,35,2,7
	.byte	'PD5',0,1
	.word	292
	.byte	3,1,2,35,2,7
	.byte	'PL5',0,1
	.word	292
	.byte	1,0,2,35,2,7
	.byte	'PD6',0,1
	.word	292
	.byte	3,5,2,35,3,7
	.byte	'PL6',0,1
	.word	292
	.byte	1,4,2,35,3,7
	.byte	'PD7',0,1
	.word	292
	.byte	3,1,2,35,3,7
	.byte	'PL7',0,1
	.word	292
	.byte	1,0,2,35,3,0,8,2,204,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	2536
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_PDR1_Bits',0,2,225,3,16,4,7
	.byte	'PD8',0,1
	.word	292
	.byte	3,5,2,35,0,7
	.byte	'PL8',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'PD9',0,1
	.word	292
	.byte	3,1,2,35,0,7
	.byte	'PL9',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'PD10',0,1
	.word	292
	.byte	3,5,2,35,1,7
	.byte	'PL10',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'PD11',0,1
	.word	292
	.byte	3,1,2,35,1,7
	.byte	'PL11',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'PD12',0,1
	.word	292
	.byte	3,5,2,35,2,7
	.byte	'PL12',0,1
	.word	292
	.byte	1,4,2,35,2,7
	.byte	'PD13',0,1
	.word	292
	.byte	3,1,2,35,2,7
	.byte	'PL13',0,1
	.word	292
	.byte	1,0,2,35,2,7
	.byte	'PD14',0,1
	.word	292
	.byte	3,5,2,35,3,7
	.byte	'PL14',0,1
	.word	292
	.byte	1,4,2,35,3,7
	.byte	'PD15',0,1
	.word	292
	.byte	3,1,2,35,3,7
	.byte	'PL15',0,1
	.word	292
	.byte	1,0,2,35,3,0,8,2,212,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	2840
	.byte	4,2,35,0,0,10,8
	.word	292
	.byte	11,7,0,6
	.byte	'_Ifx_P_ESR_Bits',0,2,88,16,4,7
	.byte	'EN0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'EN1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'EN2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'EN3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'EN4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'EN5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'EN6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'EN7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'EN8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'EN9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'EN10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'EN11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'EN12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'EN13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'EN14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'EN15',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'reserved_16',0,2
	.word	309
	.byte	16,0,2,35,2,0,8,2,139,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	3165
	.byte	4,2,35,0,0,10,12
	.word	292
	.byte	11,11,0,6
	.byte	'_Ifx_P_PDISC_Bits',0,2,182,3,16,4,7
	.byte	'PDIS0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'PDIS1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'PDIS2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'PDIS3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'PDIS4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'PDIS5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'PDIS6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'PDIS7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'PDIS8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'PDIS9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'PDIS10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'PDIS11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'PDIS12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'PDIS13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'PDIS14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'PDIS15',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'reserved_16',0,2
	.word	309
	.byte	16,0,2,35,2,0,8,2,196,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	3505
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_PCSR_Bits',0,2,165,3,16,4,7
	.byte	'SEL0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'SEL1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'SEL2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'SEL3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'SEL4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'SEL5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'SEL6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'reserved_7',0,2
	.word	309
	.byte	3,6,2,35,0,7
	.byte	'SEL10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'SEL11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'reserved_12',0,4
	.word	269
	.byte	19,1,2,35,0,7
	.byte	'LCK',0,1
	.word	292
	.byte	1,0,2,35,3,0,8,2,188,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	3871
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMSR0_Bits',0,2,206,2,16,4,7
	.byte	'PS0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'PS1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'PS2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'PS3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'reserved_4',0,4
	.word	269
	.byte	28,0,2,35,0,0,8,2,148,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	4141
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMSR4_Bits',0,2,227,2,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	4,4,2,35,0,7
	.byte	'PS4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'PS5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'PS6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'PS7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'reserved_8',0,4
	.word	269
	.byte	24,0,2,35,0,0,8,2,164,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	4288
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMSR8_Bits',0,2,238,2,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	8,0,2,35,0,7
	.byte	'PS8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'PS9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'PS10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'PS11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'reserved_12',0,4
	.word	269
	.byte	20,0,2,35,0,0,8,2,172,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	4457
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMSR12_Bits',0,2,216,2,16,4,7
	.byte	'reserved_0',0,2
	.word	309
	.byte	12,4,2,35,0,7
	.byte	'PS12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'PS13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'PS14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'PS15',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'reserved_16',0,2
	.word	309
	.byte	16,0,2,35,2,0,8,2,156,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	4629
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMCR0_Bits',0,2,232,1,16,4,7
	.byte	'reserved_0',0,2
	.word	309
	.byte	16,0,2,35,0,7
	.byte	'PCL0',0,1
	.word	292
	.byte	1,7,2,35,2,7
	.byte	'PCL1',0,1
	.word	292
	.byte	1,6,2,35,2,7
	.byte	'PCL2',0,1
	.word	292
	.byte	1,5,2,35,2,7
	.byte	'PCL3',0,1
	.word	292
	.byte	1,4,2,35,2,7
	.byte	'reserved_20',0,2
	.word	309
	.byte	12,0,2,35,2,0,8,2,228,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	4804
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMCR4_Bits',0,2,253,1,16,4,7
	.byte	'reserved_0',0,4
	.word	269
	.byte	20,12,2,35,0,7
	.byte	'PCL4',0,1
	.word	292
	.byte	1,3,2,35,2,7
	.byte	'PCL5',0,1
	.word	292
	.byte	1,2,2,35,2,7
	.byte	'PCL6',0,1
	.word	292
	.byte	1,1,2,35,2,7
	.byte	'PCL7',0,1
	.word	292
	.byte	1,0,2,35,2,7
	.byte	'reserved_24',0,1
	.word	292
	.byte	8,0,2,35,3,0,8,2,244,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	4978
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMCR8_Bits',0,2,136,2,16,4,7
	.byte	'reserved_0',0,4
	.word	269
	.byte	24,8,2,35,0,7
	.byte	'PCL8',0,1
	.word	292
	.byte	1,7,2,35,3,7
	.byte	'PCL9',0,1
	.word	292
	.byte	1,6,2,35,3,7
	.byte	'PCL10',0,1
	.word	292
	.byte	1,5,2,35,3,7
	.byte	'PCL11',0,1
	.word	292
	.byte	1,4,2,35,3,7
	.byte	'reserved_28',0,1
	.word	292
	.byte	4,0,2,35,3,0,8,2,252,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	5152
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMCR12_Bits',0,2,243,1,16,4,7
	.byte	'reserved_0',0,4
	.word	269
	.byte	28,4,2,35,0,7
	.byte	'PCL12',0,1
	.word	292
	.byte	1,3,2,35,3,7
	.byte	'PCL13',0,1
	.word	292
	.byte	1,2,2,35,3,7
	.byte	'PCL14',0,1
	.word	292
	.byte	1,1,2,35,3,7
	.byte	'PCL15',0,1
	.word	292
	.byte	1,0,2,35,3,0,8,2,236,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	5328
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMSR_Bits',0,2,249,2,16,4,7
	.byte	'PS0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'PS1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'PS2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'PS3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'PS4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'PS5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'PS6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'PS7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'PS8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'PS9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'PS10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'PS11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'PS12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'PS13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'PS14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'PS15',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'reserved_16',0,2
	.word	309
	.byte	16,0,2,35,2,0,8,2,140,5,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	5484
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_OMCR_Bits',0,2,147,2,16,4,7
	.byte	'reserved_0',0,2
	.word	309
	.byte	16,0,2,35,0,7
	.byte	'PCL0',0,1
	.word	292
	.byte	1,7,2,35,2,7
	.byte	'PCL1',0,1
	.word	292
	.byte	1,6,2,35,2,7
	.byte	'PCL2',0,1
	.word	292
	.byte	1,5,2,35,2,7
	.byte	'PCL3',0,1
	.word	292
	.byte	1,4,2,35,2,7
	.byte	'PCL4',0,1
	.word	292
	.byte	1,3,2,35,2,7
	.byte	'PCL5',0,1
	.word	292
	.byte	1,2,2,35,2,7
	.byte	'PCL6',0,1
	.word	292
	.byte	1,1,2,35,2,7
	.byte	'PCL7',0,1
	.word	292
	.byte	1,0,2,35,2,7
	.byte	'PCL8',0,1
	.word	292
	.byte	1,7,2,35,3,7
	.byte	'PCL9',0,1
	.word	292
	.byte	1,6,2,35,3,7
	.byte	'PCL10',0,1
	.word	292
	.byte	1,5,2,35,3,7
	.byte	'PCL11',0,1
	.word	292
	.byte	1,4,2,35,3,7
	.byte	'PCL12',0,1
	.word	292
	.byte	1,3,2,35,3,7
	.byte	'PCL13',0,1
	.word	292
	.byte	1,2,2,35,3,7
	.byte	'PCL14',0,1
	.word	292
	.byte	1,1,2,35,3,7
	.byte	'PCL15',0,1
	.word	292
	.byte	1,0,2,35,3,0,8,2,220,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	5817
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_LPCR0_Bits',0,2,192,1,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'PS1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'reserved_2',0,4
	.word	269
	.byte	30,0,2,35,0,0,8,2,195,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	6165
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_LPCR1_Bits',0,2,200,1,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'PS1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'reserved_2',0,4
	.word	269
	.byte	30,0,2,35,0,0,6
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,2,208,1,16,4,7
	.byte	'RDIS_CTRL',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'RX_DIS',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'TERM',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'LRXTERM',0,1
	.word	292
	.byte	5,0,2,35,0,7
	.byte	'reserved_8',0,4
	.word	269
	.byte	24,0,2,35,0,0,8,2,203,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	6289
	.byte	4,2,35,0,9
	.byte	'B_P21',0
	.word	6373
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_LPCR2_Bits',0,2,218,1,16,4,7
	.byte	'reserved_0',0,1
	.word	292
	.byte	8,0,2,35,0,7
	.byte	'LVDSR',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'LVDSRL',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'reserved_10',0,1
	.word	292
	.byte	2,4,2,35,1,7
	.byte	'TDIS_CTRL',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'TX_DIS',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'TX_PD',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'TX_PWDPD',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'reserved_16',0,2
	.word	309
	.byte	16,0,2,35,2,0,8,2,212,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	6553
	.byte	4,2,35,0,0,10,76
	.word	292
	.byte	11,75,0,6
	.byte	'_Ifx_P_ACCEN1_Bits',0,2,82,16,4,7
	.byte	'reserved_0',0,4
	.word	269
	.byte	32,0,2,35,0,0,8,2,131,4,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	6806
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P_ACCEN0_Bits',0,2,45,16,4,7
	.byte	'EN0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'EN1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'EN2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'EN3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'EN4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'EN5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'EN6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'EN7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'EN8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'EN9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'EN10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'EN11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'EN12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'EN13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'EN14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'EN15',0,1
	.word	292
	.byte	1,0,2,35,1,7
	.byte	'EN16',0,1
	.word	292
	.byte	1,7,2,35,2,7
	.byte	'EN17',0,1
	.word	292
	.byte	1,6,2,35,2,7
	.byte	'EN18',0,1
	.word	292
	.byte	1,5,2,35,2,7
	.byte	'EN19',0,1
	.word	292
	.byte	1,4,2,35,2,7
	.byte	'EN20',0,1
	.word	292
	.byte	1,3,2,35,2,7
	.byte	'EN21',0,1
	.word	292
	.byte	1,2,2,35,2,7
	.byte	'EN22',0,1
	.word	292
	.byte	1,1,2,35,2,7
	.byte	'EN23',0,1
	.word	292
	.byte	1,0,2,35,2,7
	.byte	'EN24',0,1
	.word	292
	.byte	1,7,2,35,3,7
	.byte	'EN25',0,1
	.word	292
	.byte	1,6,2,35,3,7
	.byte	'EN26',0,1
	.word	292
	.byte	1,5,2,35,3,7
	.byte	'EN27',0,1
	.word	292
	.byte	1,4,2,35,3,7
	.byte	'EN28',0,1
	.word	292
	.byte	1,3,2,35,3,7
	.byte	'EN29',0,1
	.word	292
	.byte	1,2,2,35,3,7
	.byte	'EN30',0,1
	.word	292
	.byte	1,1,2,35,3,7
	.byte	'EN31',0,1
	.word	292
	.byte	1,0,2,35,3,0,8,2,251,3,9,4,9
	.byte	'U',0
	.word	269
	.byte	4,2,35,0,9
	.byte	'I',0
	.word	285
	.byte	4,2,35,0,9
	.byte	'B',0
	.word	6893
	.byte	4,2,35,0,0,6
	.byte	'_Ifx_P',0,2,228,5,25,128,2,9
	.byte	'OUT',0
	.word	607
	.byte	4,2,35,0,9
	.byte	'OMR',0
	.word	1178
	.byte	4,2,35,4,9
	.byte	'ID',0
	.word	1297
	.byte	4,2,35,8,9
	.byte	'reserved_C',0
	.word	1337
	.byte	4,2,35,12,9
	.byte	'IOCR0',0
	.word	1521
	.byte	4,2,35,16,9
	.byte	'IOCR4',0
	.word	1736
	.byte	4,2,35,20,9
	.byte	'IOCR8',0
	.word	1953
	.byte	4,2,35,24,9
	.byte	'IOCR12',0
	.word	2173
	.byte	4,2,35,28,9
	.byte	'reserved_20',0
	.word	1337
	.byte	4,2,35,32,9
	.byte	'IN',0
	.word	2487
	.byte	4,2,35,36,9
	.byte	'reserved_28',0
	.word	2527
	.byte	24,2,35,40,9
	.byte	'PDR0',0
	.word	2800
	.byte	4,2,35,64,9
	.byte	'PDR1',0
	.word	3116
	.byte	4,2,35,68,9
	.byte	'reserved_48',0
	.word	3156
	.byte	8,2,35,72,9
	.byte	'ESR',0
	.word	3456
	.byte	4,2,35,80,9
	.byte	'reserved_54',0
	.word	3496
	.byte	12,2,35,84,9
	.byte	'PDISC',0
	.word	3831
	.byte	4,2,35,96,9
	.byte	'PCSR',0
	.word	4101
	.byte	4,2,35,100,9
	.byte	'reserved_68',0
	.word	3156
	.byte	8,2,35,104,9
	.byte	'OMSR0',0
	.word	4248
	.byte	4,2,35,112,9
	.byte	'OMSR4',0
	.word	4417
	.byte	4,2,35,116,9
	.byte	'OMSR8',0
	.word	4589
	.byte	4,2,35,120,9
	.byte	'OMSR12',0
	.word	4764
	.byte	4,2,35,124,9
	.byte	'OMCR0',0
	.word	4938
	.byte	4,3,35,128,1,9
	.byte	'OMCR4',0
	.word	5112
	.byte	4,3,35,132,1,9
	.byte	'OMCR8',0
	.word	5288
	.byte	4,3,35,136,1,9
	.byte	'OMCR12',0
	.word	5444
	.byte	4,3,35,140,1,9
	.byte	'OMSR',0
	.word	5777
	.byte	4,3,35,144,1,9
	.byte	'OMCR',0
	.word	6125
	.byte	4,3,35,148,1,9
	.byte	'reserved_98',0
	.word	3156
	.byte	8,3,35,152,1,9
	.byte	'LPCR0',0
	.word	6249
	.byte	4,3,35,160,1,9
	.byte	'LPCR1',0
	.word	6498
	.byte	4,3,35,164,1,9
	.byte	'LPCR2',0
	.word	6757
	.byte	4,3,35,168,1,9
	.byte	'reserved_A4',0
	.word	6797
	.byte	76,3,35,172,1,9
	.byte	'ACCEN1',0
	.word	6853
	.byte	4,3,35,248,1,9
	.byte	'ACCEN0',0
	.word	7420
	.byte	4,3,35,252,1,0,12
	.word	7460
	.byte	13
	.word	8063
.L87:
	.byte	5
	.byte	'unsigned long int',0,4,7
.L110:
	.byte	14
	.byte	'Port_lAdr',0,3,1,224,15,26
	.word	8068
	.byte	1,1
.L113:
	.byte	15
	.byte	'PortNumber',0,1,224,15,43
	.word	8073
.L115:
	.byte	4,0,14
	.byte	'Port_lIsPortAvailable31',0,3,1,134,16,25
	.word	8073
	.byte	1,1,15
	.byte	'Port',0,1,134,16,56
	.word	8073
	.byte	4,0,14
	.byte	'Port_lIsPortAvailable40',0,3,1,169,16,25
	.word	8073
	.byte	1,1,15
	.byte	'Port',0,1,169,16,56
	.word	8073
	.byte	4,0
.L100:
	.byte	14
	.byte	'Port_lIsPortAvailable',0,3,1,204,16,25
	.word	8073
	.byte	1,1
.L103:
	.byte	15
	.byte	'Port',0,1,204,16,54
	.word	8073
.L105:
	.byte	3,4,4,0,0,14
	.byte	'Port_lIsPortReadOnly40',0,3,1,144,17,25
	.word	8073
	.byte	1,1,15
	.byte	'Port',0,1,144,17,55
	.word	8073
	.byte	4,0
.L123:
	.byte	14
	.byte	'Port_lIsPortReadOnly',0,3,1,178,17,25
	.word	8073
	.byte	1,1
.L124:
	.byte	15
	.byte	'Port',0,1,178,17,53
	.word	8073
.L126:
	.byte	3,4,0,0,14
	.byte	'Port_lIsPinAvailable',0,3,1,212,17,25
	.word	309
	.byte	1,1,15
	.byte	'Port',0,1,212,17,53
	.word	8073
	.byte	15
	.byte	'Pin',0,1,212,17,65
	.word	8073
	.byte	4,0,14
	.byte	'Port_lIsPortPdr1Available',0,3,1,246,17,25
	.word	309
	.byte	1,1,15
	.byte	'Port',0,1,246,17,58
	.word	8073
	.byte	4,0,14
	.byte	'Port_lIsPortIocrAvailable',0,3,1,150,18,25
	.word	309
	.byte	1,1,15
	.byte	'Port',0,1,150,18,58
	.word	8073
	.byte	15
	.byte	'Pin',0,1,150,18,70
	.word	309
	.byte	4,0,14
	.byte	'Port_lPinLevel',0,3,1,250,18,25
	.word	8073
	.byte	1,1,15
	.byte	'Level',0,1,250,18,47
	.word	8073
	.byte	4,0
.L149:
	.byte	14
	.byte	'Port_lNumber',0,3,1,184,18,25
	.word	8073
	.byte	1,1
.L152:
	.byte	15
	.byte	'Pin',0,1,184,18,51
	.word	8073
.L154:
	.byte	4,0
.L155:
	.byte	14
	.byte	'Port_lPinNumber',0,3,1,217,18,25
	.word	8073
	.byte	1,1
.L157:
	.byte	15
	.byte	'Pin',0,1,217,18,54
	.word	8073
.L159:
	.byte	4,0,14
	.byte	'Port_lIsPortLVDSAvailable31',0,3,1,156,19,25
	.word	8073
	.byte	1,1,15
	.byte	'Port',0,1,156,19,60
	.word	8073
	.byte	4,0
.L129:
	.byte	14
	.byte	'Port_lIsPortLVDSAvailable',0,3,1,222,19,25
	.word	8073
	.byte	1,1
.L131:
	.byte	15
	.byte	'Port',0,1,222,19,58
	.word	8073
.L133:
	.byte	3,4,0,0,14
	.byte	'Port_lIsPortPCSRAvailable31',0,3,1,128,20,25
	.word	8073
	.byte	1,1,15
	.byte	'Port',0,1,128,20,60
	.word	8073
	.byte	4,0,14
	.byte	'Port_lIsPortPCSRAvailable40',0,3,1,161,20,25
	.word	8073
	.byte	1,1,15
	.byte	'Port',0,1,161,20,60
	.word	8073
	.byte	4,0
.L134:
	.byte	14
	.byte	'Port_lIsPortPCSRAvailable',0,3,1,194,20,25
	.word	8073
	.byte	1,1
.L136:
	.byte	15
	.byte	'Port',0,1,194,20,58
	.word	8073
.L138:
	.byte	3,4,4,0,0,14
	.byte	'Port_lIsPortPinPairAvailable',0,3,1,228,20,25
	.word	8073
	.byte	1,1,15
	.byte	'PortLPCRvalue',0,1,228,20,61
	.word	8073
	.byte	4,0,16
	.byte	'Mcal_ResetENDINIT',0,3,119,13,1,1,1,1,16
	.byte	'Mcal_SetENDINIT',0,3,146,1,13,1,1,1,1,17
	.byte	'Mcal_ResetSafetyENDINIT_Timed',0,3,190,2,13,1,1,1,1,15
	.byte	'TimeOut',0,3,190,2,50
	.word	8073
	.byte	0,16
	.byte	'Mcal_SetSafetyENDINIT_Timed',0,3,214,2,13,1,1,1,1,18,4,205,2,3,16,9
	.byte	'PC0',0
	.word	292
	.byte	1,2,35,0,9
	.byte	'PC1',0
	.word	292
	.byte	1,2,35,1,9
	.byte	'PC2',0
	.word	292
	.byte	1,2,35,2,9
	.byte	'PC3',0
	.word	292
	.byte	1,2,35,3,9
	.byte	'PC4',0
	.word	292
	.byte	1,2,35,4,9
	.byte	'PC5',0
	.word	292
	.byte	1,2,35,5,9
	.byte	'PC6',0
	.word	292
	.byte	1,2,35,6,9
	.byte	'PC7',0
	.word	292
	.byte	1,2,35,7,9
	.byte	'PC8',0
	.word	292
	.byte	1,2,35,8,9
	.byte	'PC9',0
	.word	292
	.byte	1,2,35,9,9
	.byte	'PC10',0
	.word	292
	.byte	1,2,35,10,9
	.byte	'PC11',0
	.word	292
	.byte	1,2,35,11,9
	.byte	'PC12',0
	.word	292
	.byte	1,2,35,12,9
	.byte	'PC13',0
	.word	292
	.byte	1,2,35,13,9
	.byte	'PC14',0
	.word	292
	.byte	1,2,35,14,9
	.byte	'PC15',0
	.word	292
	.byte	1,2,35,15,0,10,16
	.word	8073
	.byte	11,3,0,19
	.byte	'Port_n_ControlType',0,4,203,2,15,16,9
	.byte	'B',0
	.word	9199
	.byte	16,2,35,0,9
	.byte	'U',0
	.word	9420
	.byte	16,2,35,0,0,18,4,175,2,3,2,7
	.byte	'P0',0,1
	.word	292
	.byte	1,7,2,35,0,7
	.byte	'P1',0,1
	.word	292
	.byte	1,6,2,35,0,7
	.byte	'P2',0,1
	.word	292
	.byte	1,5,2,35,0,7
	.byte	'P3',0,1
	.word	292
	.byte	1,4,2,35,0,7
	.byte	'P4',0,1
	.word	292
	.byte	1,3,2,35,0,7
	.byte	'P5',0,1
	.word	292
	.byte	1,2,2,35,0,7
	.byte	'P6',0,1
	.word	292
	.byte	1,1,2,35,0,7
	.byte	'P7',0,1
	.word	292
	.byte	1,0,2,35,0,7
	.byte	'P8',0,1
	.word	292
	.byte	1,7,2,35,1,7
	.byte	'P9',0,1
	.word	292
	.byte	1,6,2,35,1,7
	.byte	'P10',0,1
	.word	292
	.byte	1,5,2,35,1,7
	.byte	'P11',0,1
	.word	292
	.byte	1,4,2,35,1,7
	.byte	'P12',0,1
	.word	292
	.byte	1,3,2,35,1,7
	.byte	'P13',0,1
	.word	292
	.byte	1,2,2,35,1,7
	.byte	'P14',0,1
	.word	292
	.byte	1,1,2,35,1,7
	.byte	'P15',0,1
	.word	292
	.byte	1,0,2,35,1,0,19
	.byte	'Port_n_PinType',0,4,173,2,15,4,9
	.byte	'B',0
	.word	9477
	.byte	2,2,35,0,9
	.byte	'U',0
	.word	8073
	.byte	4,2,35,0,0,6
	.byte	'Port_n_ConfigType',0,4,137,3,16,52,9
	.byte	'PinControl',0
	.word	9429
	.byte	16,2,35,0,9
	.byte	'PinLevel',0
	.word	9714
	.byte	4,2,35,16,9
	.byte	'DriverStrength0',0
	.word	8073
	.byte	4,2,35,20,9
	.byte	'DriverStrength1',0
	.word	8073
	.byte	4,2,35,24,9
	.byte	'ModeChangeControl',0
	.word	9714
	.byte	4,2,35,28,9
	.byte	'DirChangeControl',0
	.word	9714
	.byte	4,2,35,32,9
	.byte	'PinControl2',0
	.word	9429
	.byte	16,2,35,36,0,20
	.word	9758
.L85:
	.byte	13
	.word	9945
	.byte	20
	.word	309
	.byte	13
	.word	9955
	.byte	6
	.byte	'Port_n_LVDSConfigType',0,4,164,3,16,12,9
	.byte	'LPCR0',0
	.word	8073
	.byte	4,2,35,0,9
	.byte	'LPCR1',0
	.word	8073
	.byte	4,2,35,4,9
	.byte	'LPCR2',0
	.word	8073
	.byte	4,2,35,8,0,20
	.word	9965
	.byte	13
	.word	10039
	.byte	20
	.word	8073
	.byte	13
	.word	10049
	.byte	6
	.byte	'Port_ConfigType',0,4,200,3,16,16,9
	.byte	'PortConfigSetPtr',0
	.word	9950
	.byte	4,2,35,0,9
	.byte	'PDiscSet',0
	.word	9960
	.byte	4,2,35,4,9
	.byte	'Port_LVDSConfigTypePtr',0
	.word	10044
	.byte	4,2,35,8,9
	.byte	'Port_PCSRConfigTypePtr',0
	.word	10054
	.byte	4,2,35,12,0,20
	.word	10059
.L79:
	.byte	13
	.word	10190
	.byte	20
	.word	8073
.L83:
	.byte	13
	.word	10200
	.byte	12
	.word	8073
.L92:
	.byte	13
	.word	10210
.L141:
	.byte	21,4,161,2,9,1,22
	.byte	'PORT_PIN_IN',0,0,22
	.byte	'PORT_PIN_OUT',0,128,1,0,20
	.word	292
.L147:
	.byte	13
	.word	10257
	.byte	23
	.word	204
	.byte	3,24
	.word	8988
	.byte	25
	.word	9029
	.byte	26
	.word	9052
	.byte	0,4,24
	.word	8513
	.byte	25
	.word	8551
	.byte	25
	.word	8565
	.byte	26
	.word	8578
	.byte	0,4,24
	.word	8513
	.byte	25
	.word	8551
	.byte	25
	.word	8565
	.byte	26
	.word	8578
	.byte	0,4,24
	.word	8513
	.byte	25
	.word	8551
	.byte	25
	.word	8565
	.byte	26
	.word	8578
	.byte	0,4,24
	.word	8513
	.byte	25
	.word	8551
	.byte	25
	.word	8565
	.byte	26
	.word	8578
	.byte	0,4,24
	.word	8580
	.byte	25
	.word	8607
	.byte	26
	.word	8622
	.byte	0,4,24
	.word	8094
	.byte	25
	.word	8116
	.byte	26
	.word	8136
	.byte	0,4,24
	.word	8346
	.byte	25
	.word	8379
	.byte	27
	.word	8393
	.byte	24
	.word	8295
	.byte	25
	.word	8330
	.byte	26
	.word	8344
	.byte	0,26
	.word	8394
	.byte	0,0,4,24
	.word	8763
	.byte	25
	.word	8801
	.byte	27
	.word	8815
	.byte	24
	.word	8707
	.byte	25
	.word	8747
	.byte	26
	.word	8761
	.byte	0,26
	.word	8816
	.byte	0,0,4,24
	.word	8242
	.byte	25
	.word	8276
	.byte	27
	.word	8290
	.byte	24
	.word	8138
	.byte	25
	.word	8174
	.byte	26
	.word	8188
	.byte	0,26
	.word	8291
	.byte	24
	.word	8190
	.byte	25
	.word	8226
	.byte	26
	.word	8240
	.byte	0,26
	.word	8292
	.byte	0,0,4,24
	.word	8931
	.byte	25
	.word	8969
	.byte	27
	.word	8983
	.byte	24
	.word	8819
	.byte	25
	.word	8859
	.byte	26
	.word	8873
	.byte	0,26
	.word	8984
	.byte	24
	.word	8875
	.byte	25
	.word	8915
	.byte	26
	.word	8929
	.byte	0,26
	.word	8985
	.byte	0,0,4,24
	.word	240
	.byte	27
	.word	262
	.byte	24
	.word	8459
	.byte	25
	.word	8497
	.byte	26
	.word	8511
	.byte	0,26
	.word	263
	.byte	24
	.word	8094
	.byte	25
	.word	8116
	.byte	26
	.word	8136
	.byte	0,26
	.word	264
	.byte	24
	.word	8094
	.byte	25
	.word	8116
	.byte	26
	.word	8136
	.byte	0,26
	.word	265
	.byte	24
	.word	8242
	.byte	25
	.word	8276
	.byte	27
	.word	8290
	.byte	24
	.word	8138
	.byte	25
	.word	8174
	.byte	26
	.word	8188
	.byte	0,26
	.word	8291
	.byte	24
	.word	8190
	.byte	25
	.word	8226
	.byte	26
	.word	8240
	.byte	0,26
	.word	8292
	.byte	0,0,26
	.word	266
	.byte	0,0,4,0,0,23
	.word	240
	.byte	3,24
	.word	8459
	.byte	25
	.word	8497
	.byte	26
	.word	8511
	.byte	0,4,24
	.word	8094
	.byte	25
	.word	8116
	.byte	26
	.word	8136
	.byte	0,4,24
	.word	8094
	.byte	25
	.word	8116
	.byte	26
	.word	8136
	.byte	0,4,24
	.word	8242
	.byte	25
	.word	8276
	.byte	27
	.word	8290
	.byte	24
	.word	8138
	.byte	25
	.word	8174
	.byte	26
	.word	8188
	.byte	0,26
	.word	8291
	.byte	24
	.word	8190
	.byte	25
	.word	8226
	.byte	26
	.word	8240
	.byte	0,26
	.word	8292
	.byte	0,0,4,0,0,23
	.word	8094
	.byte	25
	.word	8116
	.byte	4,0,23
	.word	8138
	.byte	25
	.word	8174
	.byte	4,0,23
	.word	8190
	.byte	25
	.word	8226
	.byte	4,0,23
	.word	8242
	.byte	25
	.word	8276
	.byte	3,24
	.word	8138
	.byte	25
	.word	8174
	.byte	26
	.word	8188
	.byte	0,4,24
	.word	8190
	.byte	25
	.word	8226
	.byte	26
	.word	8240
	.byte	0,4,0,0,23
	.word	8295
	.byte	25
	.word	8330
	.byte	4,0,23
	.word	8346
	.byte	25
	.word	8379
	.byte	3,24
	.word	8295
	.byte	25
	.word	8330
	.byte	26
	.word	8344
	.byte	0,4,0,0,23
	.word	8397
	.byte	25
	.word	8430
	.byte	25
	.word	8444
	.byte	4,0,23
	.word	8459
	.byte	25
	.word	8497
	.byte	4,0,23
	.word	8513
	.byte	25
	.word	8551
	.byte	25
	.word	8565
	.byte	4,0,23
	.word	8580
	.byte	25
	.word	8607
	.byte	4,0,23
	.word	8624
	.byte	25
	.word	8649
	.byte	4,0,23
	.word	8664
	.byte	25
	.word	8692
	.byte	4,0,23
	.word	8707
	.byte	25
	.word	8747
	.byte	4,0,23
	.word	8763
	.byte	25
	.word	8801
	.byte	3,24
	.word	8707
	.byte	25
	.word	8747
	.byte	26
	.word	8761
	.byte	0,4,0,0,23
	.word	8819
	.byte	25
	.word	8859
	.byte	4,0,23
	.word	8875
	.byte	25
	.word	8915
	.byte	4,0,23
	.word	8931
	.byte	25
	.word	8969
	.byte	3,24
	.word	8819
	.byte	25
	.word	8859
	.byte	26
	.word	8873
	.byte	0,4,24
	.word	8875
	.byte	25
	.word	8915
	.byte	26
	.word	8929
	.byte	0,4,0,0,23
	.word	8988
	.byte	25
	.word	9029
	.byte	4,0,28,1,13
	.word	11203
	.byte	29
	.byte	'__codeptr',0,1,1,1
	.word	11205
	.byte	29
	.byte	'Ifx_P_ACCEN0_Bits',0,2,79,3
	.word	6893
	.byte	29
	.byte	'Ifx_P_ACCEN1_Bits',0,2,85,3
	.word	6806
	.byte	29
	.byte	'Ifx_P_ESR_Bits',0,2,107,3
	.word	3165
	.byte	29
	.byte	'Ifx_P_ID_Bits',0,2,115,3
	.word	1218
	.byte	29
	.byte	'Ifx_P_IN_Bits',0,2,137,1,3
	.word	2213
	.byte	29
	.byte	'Ifx_P_IOCR0_Bits',0,2,150,1,3
	.word	1346
	.byte	29
	.byte	'Ifx_P_IOCR12_Bits',0,2,163,1,3
	.word	1993
	.byte	29
	.byte	'Ifx_P_IOCR4_Bits',0,2,176,1,3
	.word	1561
	.byte	29
	.byte	'Ifx_P_IOCR8_Bits',0,2,189,1,3
	.word	1776
	.byte	29
	.byte	'Ifx_P_LPCR0_Bits',0,2,197,1,3
	.word	6165
	.byte	29
	.byte	'Ifx_P_LPCR1_Bits',0,2,205,1,3
	.word	6289
	.byte	29
	.byte	'Ifx_P_LPCR1_P21_Bits',0,2,215,1,3
	.word	6373
	.byte	29
	.byte	'Ifx_P_LPCR2_Bits',0,2,229,1,3
	.word	6553
	.byte	29
	.byte	'Ifx_P_OMCR0_Bits',0,2,240,1,3
	.word	4804
	.byte	29
	.byte	'Ifx_P_OMCR12_Bits',0,2,250,1,3
	.word	5328
	.byte	29
	.byte	'Ifx_P_OMCR4_Bits',0,2,133,2,3
	.word	4978
	.byte	29
	.byte	'Ifx_P_OMCR8_Bits',0,2,144,2,3
	.word	5152
	.byte	29
	.byte	'Ifx_P_OMCR_Bits',0,2,166,2,3
	.word	5817
	.byte	29
	.byte	'Ifx_P_OMR_Bits',0,2,203,2,3
	.word	647
	.byte	29
	.byte	'Ifx_P_OMSR0_Bits',0,2,213,2,3
	.word	4141
	.byte	29
	.byte	'Ifx_P_OMSR12_Bits',0,2,224,2,3
	.word	4629
	.byte	29
	.byte	'Ifx_P_OMSR4_Bits',0,2,235,2,3
	.word	4288
	.byte	29
	.byte	'Ifx_P_OMSR8_Bits',0,2,246,2,3
	.word	4457
	.byte	29
	.byte	'Ifx_P_OMSR_Bits',0,2,140,3,3
	.word	5484
	.byte	29
	.byte	'Ifx_P_OUT_Bits',0,2,162,3,3
	.word	331
	.byte	29
	.byte	'Ifx_P_PCSR_Bits',0,2,179,3,3
	.word	3871
	.byte	29
	.byte	'Ifx_P_PDISC_Bits',0,2,201,3,3
	.word	3505
	.byte	29
	.byte	'Ifx_P_PDR0_Bits',0,2,222,3,3
	.word	2536
	.byte	29
	.byte	'Ifx_P_PDR1_Bits',0,2,243,3,3
	.word	2840
	.byte	29
	.byte	'Ifx_P_ACCEN0',0,2,128,4,3
	.word	7420
	.byte	29
	.byte	'Ifx_P_ACCEN1',0,2,136,4,3
	.word	6853
	.byte	29
	.byte	'Ifx_P_ESR',0,2,144,4,3
	.word	3456
	.byte	29
	.byte	'Ifx_P_ID',0,2,152,4,3
	.word	1297
	.byte	29
	.byte	'Ifx_P_IN',0,2,160,4,3
	.word	2487
	.byte	29
	.byte	'Ifx_P_IOCR0',0,2,168,4,3
	.word	1521
	.byte	29
	.byte	'Ifx_P_IOCR12',0,2,176,4,3
	.word	2173
	.byte	29
	.byte	'Ifx_P_IOCR4',0,2,184,4,3
	.word	1736
	.byte	29
	.byte	'Ifx_P_IOCR8',0,2,192,4,3
	.word	1953
	.byte	29
	.byte	'Ifx_P_LPCR0',0,2,200,4,3
	.word	6249
	.byte	29
	.byte	'Ifx_P_LPCR1',0,2,209,4,3
	.word	6498
	.byte	29
	.byte	'Ifx_P_LPCR2',0,2,217,4,3
	.word	6757
	.byte	29
	.byte	'Ifx_P_OMCR',0,2,225,4,3
	.word	6125
	.byte	29
	.byte	'Ifx_P_OMCR0',0,2,233,4,3
	.word	4938
	.byte	29
	.byte	'Ifx_P_OMCR12',0,2,241,4,3
	.word	5444
	.byte	29
	.byte	'Ifx_P_OMCR4',0,2,249,4,3
	.word	5112
	.byte	29
	.byte	'Ifx_P_OMCR8',0,2,129,5,3
	.word	5288
	.byte	29
	.byte	'Ifx_P_OMR',0,2,137,5,3
	.word	1178
	.byte	29
	.byte	'Ifx_P_OMSR',0,2,145,5,3
	.word	5777
	.byte	29
	.byte	'Ifx_P_OMSR0',0,2,153,5,3
	.word	4248
	.byte	29
	.byte	'Ifx_P_OMSR12',0,2,161,5,3
	.word	4764
	.byte	29
	.byte	'Ifx_P_OMSR4',0,2,169,5,3
	.word	4417
	.byte	29
	.byte	'Ifx_P_OMSR8',0,2,177,5,3
	.word	4589
	.byte	29
	.byte	'Ifx_P_OUT',0,2,185,5,3
	.word	607
	.byte	29
	.byte	'Ifx_P_PCSR',0,2,193,5,3
	.word	4101
	.byte	29
	.byte	'Ifx_P_PDISC',0,2,201,5,3
	.word	3831
	.byte	29
	.byte	'Ifx_P_PDR0',0,2,209,5,3
	.word	2800
	.byte	29
	.byte	'Ifx_P_PDR1',0,2,217,5,3
	.word	3116
	.byte	12
	.word	7460
	.byte	29
	.byte	'Ifx_P',0,2,138,6,3
	.word	12546
	.byte	29
	.byte	'uint8',0,5,90,29
	.word	292
	.byte	29
	.byte	'uint16',0,5,92,29
	.word	309
	.byte	29
	.byte	'uint32',0,5,94,29
	.word	8073
	.byte	29
	.byte	'unsigned_int',0,6,116,22
	.word	269
	.byte	29
	.byte	'Port_PinType',0,4,158,2,16
	.word	8073
	.byte	29
	.byte	'Port_PinDirectionType',0,4,165,2,2
	.word	10220
	.byte	29
	.byte	'Port_PinModeType',0,4,168,2,16
	.word	8073
	.byte	29
	.byte	'Port_n_PinType',0,4,200,2,3
	.word	9714
	.byte	29
	.byte	'Port_n_ControlType',0,4,230,2,2
	.word	9429
	.byte	29
	.byte	'Port_n_ConfigType',0,4,161,3,2
	.word	9758
	.byte	29
	.byte	'Port_n_LVDSConfigType',0,4,188,3,2
	.word	9965
	.byte	29
	.byte	'Port_n_PCSRConfigType',0,4,191,3,16
	.word	8073
	.byte	29
	.byte	'Port_ConfigType',0,4,220,3,2
	.word	10059
	.byte	10,82
	.word	309
	.byte	11,40,0
.L212:
	.byte	20
	.word	12876
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L52:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	1,0,0,4,11,0,0,0,5,36,0,3,8,11,15,62,15,0,0,6,19,1,3,8,58,15,59,15,57,15,11,15,0,0,7,13,0,3,8,11,15,73
	.byte	19,13,15,12,15,56,9,0,0,8,23,1,58,15,59,15,57,15,11,15,0,0,9,13,0,3,8,73,19,11,15,56,9,0,0,10,1,1,11,15
	.byte	73,19,0,0,11,33,0,47,15,0,0,12,53,0,73,19,0,0,13,15,0,73,19,0,0,14,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,15,5,0,3,8,58,15,59,15,57,15,73,19,0,0,16,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63
	.byte	12,60,12,0,0,17,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,18,19,1,58,15,59,15,57,15,11,15
	.byte	0,0,19,23,1,3,8,58,15,59,15,57,15,11,15,0,0,20,38,0,73,19,0,0,21,4,1,58,15,59,15,57,15,11,15,0,0,22,40
	.byte	0,3,8,28,13,0,0,23,46,1,49,19,0,0,24,29,1,49,19,0,0,25,5,0,49,19,0,0,26,11,0,49,19,0,0,27,11,1,49,19,0
	.byte	0,28,21,0,54,15,0,0,29,22,0,3,8,58,15,59,15,57,15,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L53:
	.word	.L244-.L243
.L243:
	.half	3
	.word	.L246-.L245
.L245:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc\\TC27xC',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\tricore_general\\ssc\\inc',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\inc',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Aurix_MC-ISAR\\general\\tricore\\inc',0
	.byte	0
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0,0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'Mcal_WdgLib.h',0,2,0,0
	.byte	'Port.h',0,3,0,0
	.byte	'Platform_Types.h',0,4,0,0
	.byte	'Mcal_TcLib.h',0,2,0,0,0
.L246:
.L244:
	.sdecl	'.debug_info',debug,cluster('Port_Init')
	.sect	'.debug_info'
.L54:
	.word	913
	.half	3
	.word	.L55
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L57,.L56
	.byte	2
	.word	.L50
	.byte	3
	.byte	'Port_Init',0,1,253,3,6,1,1,1
	.word	.L43,.L78,.L42
	.byte	4
	.byte	'ConfigPtr',0,1,253,3,42
	.word	.L79,.L80
	.byte	5
	.word	.L43,.L78
	.byte	6
	.word	.L81,.L43,.L78
	.byte	7
	.word	.L82,.L43,.L78
	.byte	8
	.byte	'DataPtr',0,1,133,14,28
	.word	.L83,.L84
	.byte	8
	.byte	'ConfigDataPtr',0,1,134,14,28
	.word	.L85,.L86
	.byte	8
	.byte	'PortNumber',0,1,136,14,28
	.word	.L87,.L88
	.byte	8
	.byte	'ConfigIndex',0,1,141,14,28
	.word	.L87,.L89
	.byte	8
	.byte	'LVDSDataPtr',0,1,143,14,28
	.word	.L83,.L90
	.byte	8
	.byte	'PCSRDataPtr',0,1,144,14,28
	.word	.L83,.L91
	.byte	8
	.byte	'LVDSRegPtr',0,1,145,14,28
	.word	.L92,.L93
	.byte	8
	.byte	'counter',0,1,147,14,28
	.word	.L87,.L94
	.byte	6
	.word	.L95,.L43,.L96
	.byte	7
	.word	.L97,.L43,.L96
	.byte	8
	.byte	'PortNumber',0,1,167,15,27
	.word	.L87,.L98
	.byte	8
	.byte	'ConfigIndex',0,1,170,15,27
	.word	.L87,.L99
	.byte	6
	.word	.L100,.L101,.L102
	.byte	9
	.word	.L103,.L104
	.byte	10
	.word	.L105,.L106
	.byte	0,6
	.word	.L100,.L107,.L108
	.byte	9
	.word	.L103,.L104
	.byte	0,6
	.word	.L100,.L2,.L109
	.byte	9
	.word	.L103,.L104
	.byte	0,0,0,6
	.word	.L110,.L111,.L112
	.byte	9
	.word	.L113,.L114
	.byte	10
	.word	.L115,.L116
	.byte	0,6
	.word	.L123,.L112,.L7
	.byte	9
	.word	.L124,.L125
	.byte	10
	.word	.L126,.L127
	.byte	0,6
	.word	.L100,.L7,.L117
	.byte	9
	.word	.L103,.L104
	.byte	11
	.word	.L105,.L7,.L117
	.byte	0,6
	.word	.L110,.L117,.L118
	.byte	9
	.word	.L113,.L114
	.byte	0,6
	.word	.L110,.L119,.L120
	.byte	9
	.word	.L113,.L114
	.byte	0,6
	.word	.L110,.L121,.L122
	.byte	9
	.word	.L113,.L114
	.byte	0,6
	.word	.L123,.L122,.L128
	.byte	9
	.word	.L124,.L125
	.byte	0,6
	.word	.L129,.L17,.L130
	.byte	9
	.word	.L131,.L132
	.byte	11
	.word	.L133,.L17,.L130
	.byte	0,6
	.word	.L134,.L20,.L135
	.byte	9
	.word	.L136,.L137
	.byte	11
	.word	.L138,.L20,.L135
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Port_Init')
	.sect	'.debug_abbrev'
.L55:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,5,0,49,16,2,6
	.byte	0,0,10,11,0,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Port_Init')
	.sect	'.debug_line'
.L56:
	.word	.L248-.L247
.L247:
	.half	3
	.word	.L250-.L249
.L249:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0,0,0,0,0
.L250:
	.byte	5,15,7,0,5,2
	.word	.L43
	.byte	3,172,15,1,5,51,3,205,2,1,5,19,9
	.half	.L214-.L43
	.byte	3,183,125,1,5,51,3,201,2,1,5,15,9
	.half	.L101-.L214
	.byte	3,144,126,1,5,23,3,187,116,1,5,29,9
	.half	.L102-.L101
	.byte	3,163,11,1,5,68,3,73,1,5,22,9
	.half	.L251-.L102
	.byte	3,201,2,1,5,6,3,131,114,1,5,54,9
	.half	.L213-.L251
	.byte	3,180,11,1,5,15,9
	.half	.L107-.L213
	.byte	3,218,0,1,9
	.half	.L108-.L107
	.byte	3,91,1,5,21,9
	.half	.L2-.L108
	.byte	3,234,0,1,5,13,9
	.half	.L252-.L2
	.byte	1,5,53,7,9
	.half	.L253-.L252
	.byte	3,93,1,5,15,9
	.half	.L254-.L253
	.byte	1,5,44,9
	.half	.L255-.L254
	.byte	1,5,72,9
	.half	.L256-.L255
	.byte	1,5,71,3,35,1,5,44,9
	.half	.L3-.L256
	.byte	3,186,127,1,5,55,9
	.half	.L257-.L3
	.byte	1,5,5,9
	.half	.L4-.L257
	.byte	3,170,127,1,5,7,7,9
	.half	.L109-.L4
	.byte	3,2,1,5,29,9
	.half	.L258-.L109
	.byte	3,49,1,5,7,3,83,1,5,29,9
	.half	.L259-.L258
	.byte	3,45,1,5,27,9
	.half	.L260-.L259
	.byte	3,1,1,5,7,9
	.half	.L261-.L260
	.byte	3,82,1,5,29,9
	.half	.L262-.L261
	.byte	3,45,1,5,7,9
	.half	.L263-.L262
	.byte	3,83,1,5,69,9
	.half	.L264-.L263
	.byte	3,45,1,5,7,9
	.half	.L265-.L264
	.byte	3,83,1,5,69,9
	.half	.L266-.L265
	.byte	3,45,1,5,7,9
	.half	.L267-.L266
	.byte	3,83,1,5,41,9
	.half	.L268-.L267
	.byte	3,44,1,5,7,9
	.half	.L269-.L268
	.byte	3,84,1,5,70,9
	.half	.L270-.L269
	.byte	3,192,2,1,5,7,9
	.half	.L271-.L270
	.byte	3,195,125,1,5,9,7,9
	.half	.L272-.L271
	.byte	3,5,1,5,7,9
	.half	.L6-.L272
	.byte	3,3,1,5,18,9
	.half	.L273-.L6
	.byte	3,1,1,5,66,9
	.half	.L5-.L273
	.byte	3,107,1,5,54,1,5,33,7,9
	.half	.L96-.L5
	.byte	3,234,126,1,5,15,9
	.half	.L274-.L96
	.byte	3,125,1,3,243,1,1,5,19,9
	.half	.L215-.L274
	.byte	3,150,126,1,5,15,3,197,1,1,5,48,9
	.half	.L216-.L215
	.byte	3,181,126,1,9
	.half	.L217-.L216
	.byte	3,3,1,5,29,9
	.half	.L111-.L217
	.byte	3,202,1,1,5,69,3,185,126,1,5,22,9
	.half	.L112-.L111
	.byte	3,149,3,1,5,55,3,235,124,1,5,15,9
	.half	.L219-.L112
	.byte	3,243,2,1,5,55,3,141,125,1,5,21,9
	.half	.L7-.L219
	.byte	3,175,2,1,5,13,9
	.half	.L275-.L7
	.byte	1,5,53,7,9
	.half	.L276-.L275
	.byte	3,93,1,5,15,9
	.half	.L277-.L276
	.byte	1,5,44,9
	.half	.L278-.L277
	.byte	1,5,72,9
	.half	.L279-.L278
	.byte	1,5,71,3,35,1,5,15,9
	.half	.L8-.L279
	.byte	3,186,127,1,5,44,9
	.half	.L280-.L8
	.byte	1,5,55,9
	.half	.L281-.L280
	.byte	1,5,5,9
	.half	.L9-.L281
	.byte	3,154,126,1,5,29,7,9
	.half	.L117-.L9
	.byte	3,195,1,1,5,24,3,193,126,1,5,29,9
	.half	.L282-.L117
	.byte	3,191,1,1,5,27,9
	.half	.L283-.L282
	.byte	3,1,1,5,39,9
	.half	.L118-.L283
	.byte	3,192,126,1,5,59,9
	.half	.L284-.L118
	.byte	1,5,29,9
	.half	.L119-.L284
	.byte	3,191,1,1,5,59,9
	.half	.L120-.L119
	.byte	3,193,126,1,5,69,9
	.half	.L121-.L120
	.byte	3,191,1,1,5,41,9
	.half	.L285-.L121
	.byte	3,127,1,5,3,9
	.half	.L286-.L285
	.byte	3,4,1,5,13,9
	.half	.L122-.L286
	.byte	3,204,1,1,5,38,7,9
	.half	.L287-.L122
	.byte	1,5,71,1,5,53,9
	.half	.L11-.L287
	.byte	3,94,1,5,44,9
	.half	.L288-.L11
	.byte	1,5,72,9
	.half	.L289-.L288
	.byte	1,5,7,9
	.half	.L12-.L289
	.byte	3,159,125,1,5,22,7,9
	.half	.L128-.L12
	.byte	3,4,1,5,16,9
	.half	.L290-.L128
	.byte	3,199,4,1,5,26,9
	.half	.L291-.L290
	.byte	1,5,51,9
	.half	.L292-.L291
	.byte	1,5,77,9
	.half	.L293-.L292
	.byte	1,5,9,3,186,123,1,5,60,9
	.half	.L13-.L293
	.byte	3,226,3,1,5,7,9
	.half	.L294-.L13
	.byte	3,162,124,1,5,9,7,9
	.half	.L295-.L294
	.byte	3,2,1,5,60,9
	.half	.L14-.L295
	.byte	3,220,3,1,5,14,3,168,124,1,5,7,9
	.half	.L296-.L14
	.byte	3,2,1,5,9,7,9
	.half	.L297-.L296
	.byte	3,2,1,5,23,9
	.half	.L15-.L297
	.byte	3,212,3,1,5,14,3,176,124,1,5,60,9
	.half	.L298-.L15
	.byte	3,208,3,1,5,7,9
	.half	.L299-.L298
	.byte	3,178,124,1,5,9,7,9
	.half	.L300-.L299
	.byte	3,2,1,5,23,9
	.half	.L16-.L300
	.byte	3,204,3,1,5,14,3,184,124,1,5,60,9
	.half	.L301-.L16
	.byte	3,200,3,1,5,7,9
	.half	.L302-.L301
	.byte	3,186,124,1,5,9,7,9
	.half	.L303-.L302
	.byte	3,2,1,5,21,9
	.half	.L17-.L303
	.byte	3,140,5,1,5,13,9
	.half	.L304-.L17
	.byte	1,5,37,7,9
	.half	.L305-.L304
	.byte	1,5,75,1,5,15,9
	.half	.L18-.L305
	.byte	3,190,127,1,5,44,9
	.half	.L306-.L18
	.byte	1,5,15,3,1,1,5,55,9
	.half	.L307-.L306
	.byte	3,127,1,5,7,9
	.half	.L19-.L307
	.byte	3,185,123,1,5,74,7,9
	.half	.L130-.L19
	.byte	3,4,1,5,57,9
	.half	.L220-.L130
	.byte	3,2,1,5,43,9
	.half	.L21-.L220
	.byte	3,2,1,5,29,9
	.half	.L308-.L21
	.byte	3,135,6,1,5,11,9
	.half	.L309-.L308
	.byte	3,249,121,1,5,14,7,9
	.half	.L310-.L309
	.byte	3,2,1,9
	.half	.L311-.L310
	.byte	3,2,1,9
	.half	.L312-.L311
	.byte	3,1,1,5,23,9
	.half	.L22-.L312
	.byte	3,4,1,5,24,9
	.half	.L313-.L22
	.byte	3,3,1,5,57,3,114,1,5,21,7,9
	.half	.L20-.L313
	.byte	3,231,5,1,5,13,9
	.half	.L314-.L20
	.byte	1,5,15,7,9
	.half	.L315-.L314
	.byte	3,95,1,5,53,9
	.half	.L316-.L315
	.byte	1,5,44,9
	.half	.L317-.L316
	.byte	1,5,72,9
	.half	.L318-.L317
	.byte	1,5,75,3,33,1,5,15,9
	.half	.L23-.L318
	.byte	3,190,127,1,5,44,9
	.half	.L319-.L23
	.byte	1,5,15,9
	.half	.L320-.L319
	.byte	3,1,1,5,55,9
	.half	.L321-.L320
	.byte	3,127,1,5,7,9
	.half	.L24-.L321
	.byte	3,237,122,1,5,10,7,9
	.half	.L135-.L24
	.byte	3,6,1,9
	.half	.L322-.L135
	.byte	3,2,1,9
	.half	.L323-.L322
	.byte	3,1,1,5,18,9
	.half	.L25-.L323
	.byte	3,7,1,5,67,9
	.half	.L10-.L25
	.byte	3,160,127,1,5,55,9
	.half	.L324-.L10
	.byte	1,5,3,9
	.half	.L325-.L324
	.byte	3,230,0,1,9
	.half	.L326-.L325
	.byte	3,4,1,9
	.half	.L327-.L326
	.byte	3,3,1,5,1,7,9
	.half	.L58-.L327
	.byte	3,197,117,0,1,1
.L248:
	.sdecl	'.debug_ranges',debug,cluster('Port_Init')
	.sect	'.debug_ranges'
.L57:
	.word	-1,.L43,0,.L58-.L43,0,0
.L106:
	.word	-1,.L43,.L101-.L43,.L102-.L43,.L107-.L43,.L108-.L43,.L2-.L43,.L109-.L43,0,0
.L116:
	.word	-1,.L43,.L111-.L43,.L112-.L43,.L117-.L43,.L118-.L43,.L119-.L43,.L120-.L43,.L121-.L43,.L122-.L43,0,0
.L127:
	.word	-1,.L43,.L112-.L43,.L7-.L43,.L122-.L43,.L128-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('Port_SetPinDirection')
	.sect	'.debug_info'
.L59:
	.word	629
	.half	3
	.word	.L60
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L62,.L61
	.byte	2
	.word	.L50
	.byte	3
	.byte	'Port_SetPinDirection',0,1,203,8,6,1,1,1
	.word	.L45,.L139,.L44
	.byte	4
	.byte	'Pin',0,1,203,8,40
	.word	.L87,.L140
	.byte	4
	.byte	'Direction',0,1,203,8,67
	.word	.L141,.L142
	.byte	5
	.word	.L45,.L139
	.byte	6
	.byte	'ConfigIndex',0,1,216,8,24
	.word	.L87,.L143
	.byte	6
	.byte	'Index',0,1,217,8,24
	.word	.L87,.L144
	.byte	6
	.byte	'IocrRegPtr',0,1,218,8,25
	.word	.L92,.L145
	.byte	6
	.byte	'DataPtr',0,1,219,8,24
	.word	.L83,.L146
	.byte	6
	.byte	'IocrDataPtr',0,1,221,8,25
	.word	.L147,.L148
	.byte	7
	.word	.L149,.L150,.L151
	.byte	8
	.word	.L152,.L153
	.byte	9
	.word	.L154,.L150,.L151
	.byte	0,7
	.word	.L155,.L151,.L156
	.byte	8
	.word	.L157,.L158
	.byte	9
	.word	.L159,.L151,.L156
	.byte	0,7
	.word	.L100,.L160,.L161
	.byte	8
	.word	.L103,.L162
	.byte	9
	.word	.L105,.L160,.L161
	.byte	0,7
	.word	.L110,.L163,.L164
	.byte	8
	.word	.L113,.L165
	.byte	10
	.word	.L115,.L166
	.byte	0,11
	.word	.L169
	.byte	6
	.byte	'val',0,1,232,9,11
	.word	.L87,.L176
	.byte	0,7
	.word	.L110,.L167,.L168
	.byte	8
	.word	.L113,.L165
	.byte	0,5
	.word	.L32,.L177
	.byte	6
	.byte	'val',0,1,245,9,11
	.word	.L87,.L178
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Port_SetPinDirection')
	.sect	'.debug_abbrev'
.L60:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,85,6,0,0,11,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Port_SetPinDirection')
	.sect	'.debug_line'
.L61:
	.word	.L329-.L328
.L328:
	.half	3
	.word	.L331-.L330
.L330:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0,0,0,0,0
.L331:
	.byte	5,6,7,0,5,2
	.word	.L45
	.byte	3,202,8,1,5,44,9
	.half	.L150-.L45
	.byte	3,241,9,1,5,20,9
	.half	.L151-.L150
	.byte	3,33,1,5,17,9
	.half	.L156-.L151
	.byte	3,209,118,1,5,15,9
	.half	.L224-.L156
	.byte	3,1,1,5,38,9
	.half	.L226-.L224
	.byte	3,66,1,7,9
	.half	.L332-.L226
	.byte	1,5,15,9
	.half	.L160-.L332
	.byte	3,188,7,1,3,94,1,9
	.half	.L222-.L160
	.byte	3,127,1,5,38,3,231,120,1,5,21,9
	.half	.L333-.L222
	.byte	3,223,7,1,5,13,9
	.half	.L27-.L333
	.byte	1,5,53,7,9
	.half	.L334-.L27
	.byte	3,93,1,5,44,9
	.half	.L335-.L334
	.byte	1,5,72,9
	.half	.L336-.L335
	.byte	1,5,71,3,35,1,5,44,9
	.half	.L28-.L336
	.byte	3,186,127,1,5,55,9
	.half	.L337-.L28
	.byte	1,5,20,9
	.half	.L29-.L337
	.byte	3,169,121,1,5,44,9
	.half	.L161-.L29
	.byte	3,124,1,5,38,3,66,1,5,16,7,9
	.half	.L30-.L161
	.byte	3,202,0,1,5,50,9
	.half	.L338-.L30
	.byte	1,5,47,9
	.half	.L339-.L338
	.byte	3,8,1,5,31,9
	.half	.L225-.L339
	.byte	3,120,1,5,61,9
	.half	.L340-.L225
	.byte	3,8,1,5,50,9
	.half	.L341-.L340
	.byte	3,120,1,5,12,9
	.half	.L227-.L341
	.byte	3,8,1,5,44,9
	.half	.L342-.L227
	.byte	1,5,5,9
	.half	.L343-.L342
	.byte	1,5,29,7,9
	.half	.L163-.L343
	.byte	3,165,6,1,5,15,3,126,1,5,29,9
	.half	.L344-.L163
	.byte	3,1,1,5,27,3,251,121,1,5,29,9
	.half	.L345-.L344
	.byte	3,133,6,1,5,27,9
	.half	.L346-.L345
	.byte	3,1,1,5,11,9
	.half	.L164-.L346
	.byte	3,128,122,1,5,29,9
	.half	.L167-.L164
	.byte	3,255,5,1,5,69,9
	.half	.L347-.L167
	.byte	1,5,13,3,251,121,1,5,69,9
	.half	.L348-.L347
	.byte	3,133,6,1,5,41,9
	.half	.L349-.L348
	.byte	3,127,1,5,3,9
	.half	.L350-.L349
	.byte	3,4,1,5,11,9
	.half	.L168-.L350
	.byte	3,254,121,1,5,47,9
	.half	.L170-.L168
	.byte	3,118,1,5,11,9
	.half	.L171-.L170
	.byte	3,10,1,5,40,9
	.half	.L172-.L171
	.byte	3,122,1,5,11,9
	.half	.L173-.L172
	.byte	3,6,1,5,9,9
	.half	.L174-.L173
	.byte	3,122,1,5,11,7,9
	.half	.L175-.L174
	.byte	3,6,1,5,1,9
	.half	.L31-.L175
	.byte	3,21,1,5,11,7,9
	.half	.L32-.L31
	.byte	3,120,1,5,1,9
	.half	.L177-.L32
	.byte	3,8,1,7,9
	.half	.L63-.L177
	.byte	0,1,1
.L329:
	.sdecl	'.debug_ranges',debug,cluster('Port_SetPinDirection')
	.sect	'.debug_ranges'
.L62:
	.word	-1,.L45,0,.L63-.L45,0,0
.L166:
	.word	-1,.L45,.L163-.L45,.L164-.L45,.L167-.L45,.L168-.L45,0,0
.L169:
	.word	-1,.L45,.L164-.L45,.L167-.L45,.L168-.L45,.L170-.L45,.L171-.L45,.L172-.L45,.L173-.L45,.L174-.L45,.L175-.L45
	.word	.L31-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('Port_RefreshPortDirection')
	.sect	'.debug_info'
.L64:
	.word	513
	.half	3
	.word	.L65
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L67,.L66
	.byte	2
	.word	.L50
	.byte	3
	.byte	'Port_RefreshPortDirection',0,1,157,10,6,1,1,1
	.word	.L47,.L179,.L46
	.byte	4
	.word	.L47,.L179
	.byte	5
	.byte	'LoopCtr',0,1,159,10,25
	.word	.L87,.L180
	.byte	5
	.byte	'PortNumber',0,1,161,10,25
	.word	.L87,.L181
	.byte	5
	.byte	'ConfigIndex',0,1,162,10,25
	.word	.L87,.L182
	.byte	5
	.byte	'DirectionData',0,1,165,10,25
	.word	.L87,.L183
	.byte	5
	.byte	'PinPos',0,1,166,10,25
	.word	.L87,.L184
	.byte	5
	.byte	'DataPtr',0,1,168,10,26
	.word	.L83,.L185
	.byte	5
	.byte	'IocrDataPtr',0,1,169,10,26
	.word	.L147,.L186
	.byte	5
	.byte	'IocrRegPtr',0,1,170,10,26
	.word	.L92,.L187
	.byte	6
	.word	.L188
	.byte	5
	.byte	'val',0,1,240,10,13
	.word	.L87,.L192
	.byte	0,7
	.word	.L100,.L34,.L193
	.byte	8
	.word	.L103,.L194
	.byte	9
	.word	.L105,.L34,.L193
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Port_RefreshPortDirection')
	.sect	'.debug_abbrev'
.L65:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,11,1
	.byte	85,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Port_RefreshPortDirection')
	.sect	'.debug_line'
.L66:
	.word	.L352-.L351
.L351:
	.half	3
	.word	.L354-.L353
.L353:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0,0,0,0,0
.L354:
	.byte	5,15,7,0,5,2
	.word	.L47
	.byte	3,189,10,1,5,24,3,155,7,1,5,16,9
	.half	.L232-.L47
	.byte	3,230,120,1,5,24,3,154,7,1,5,29,9
	.half	.L233-.L232
	.byte	3,143,126,1,5,20,3,224,122,1,5,23,9
	.half	.L355-.L233
	.byte	3,144,7,1,5,43,3,190,121,1,5,13,9
	.half	.L189-.L355
	.byte	3,90,1,5,15,3,155,5,1,5,13,9
	.half	.L356-.L189
	.byte	3,229,122,1,5,15,3,246,4,1,5,28,9
	.half	.L190-.L356
	.byte	3,170,123,1,5,21,9
	.half	.L34-.L190
	.byte	3,192,5,1,5,13,9
	.half	.L357-.L34
	.byte	1,5,53,7,9
	.half	.L358-.L357
	.byte	3,93,1,5,15,9
	.half	.L359-.L358
	.byte	1,5,44,9
	.half	.L360-.L359
	.byte	1,5,72,9
	.half	.L361-.L360
	.byte	1,5,71,3,35,1,5,15,9
	.half	.L35-.L361
	.byte	3,186,127,1,5,44,9
	.half	.L362-.L35
	.byte	1,5,55,9
	.half	.L363-.L362
	.byte	1,5,6,9
	.half	.L36-.L363
	.byte	3,184,122,1,5,29,7,9
	.half	.L193-.L36
	.byte	3,165,5,1,5,35,3,225,122,1,5,29,9
	.half	.L364-.L193
	.byte	3,159,5,1,5,27,9
	.half	.L365-.L364
	.byte	3,1,1,5,55,9
	.half	.L366-.L365
	.byte	3,224,122,1,5,29,9
	.half	.L367-.L366
	.byte	3,159,5,1,5,55,9
	.half	.L368-.L367
	.byte	3,225,122,1,5,69,9
	.half	.L234-.L368
	.byte	3,159,5,1,5,24,9
	.half	.L369-.L234
	.byte	3,232,122,1,5,69,9
	.half	.L235-.L369
	.byte	3,152,5,1,5,43,3,242,1,1,5,41,9
	.half	.L370-.L235
	.byte	3,141,126,1,5,72,9
	.half	.L371-.L370
	.byte	3,247,122,1,5,19,9
	.half	.L236-.L371
	.byte	1,5,15,9
	.half	.L237-.L236
	.byte	3,5,1,5,16,9
	.half	.L238-.L237
	.byte	3,3,1,5,50,9
	.half	.L38-.L238
	.byte	3,243,6,1,5,60,9
	.half	.L372-.L38
	.byte	1,5,9,9
	.half	.L373-.L372
	.byte	3,144,121,1,5,31,7,9
	.half	.L374-.L373
	.byte	3,4,1,5,11,9
	.half	.L375-.L374
	.byte	1,5,13,7,9
	.half	.L191-.L375
	.byte	3,4,1,5,16,9
	.half	.L39-.L191
	.byte	3,13,1,5,21,9
	.half	.L376-.L39
	.byte	3,1,1,5,9,9
	.half	.L377-.L376
	.byte	1,5,19,7,9
	.half	.L378-.L377
	.byte	3,5,1,5,25,9
	.half	.L41-.L378
	.byte	3,8,1,5,20,3,124,1,5,49,9
	.half	.L379-.L41
	.byte	3,9,1,5,18,7,9
	.half	.L380-.L379
	.byte	3,3,1,5,15,9
	.half	.L37-.L380
	.byte	3,2,1,5,43,3,1,1,5,1,7,9
	.half	.L381-.L37
	.byte	3,2,1,7,9
	.half	.L68-.L381
	.byte	0,1,1
.L352:
	.sdecl	'.debug_ranges',debug,cluster('Port_RefreshPortDirection')
	.sect	'.debug_ranges'
.L67:
	.word	-1,.L47,0,.L68-.L47,0,0
.L188:
	.word	-1,.L47,.L189-.L47,.L190-.L47,.L191-.L47,.L39-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('Port_SetPinMode')
	.sect	'.debug_info'
.L69:
	.word	466
	.half	3
	.word	.L70
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1
	.word	.L72,.L71
	.byte	2
	.word	.L50
	.byte	3
	.byte	'Port_SetPinMode',0,1,191,11,6,1,1,1
	.word	.L49,.L195,.L48
	.byte	4
	.byte	'Pin',0,1,191,11,35
	.word	.L87,.L196
	.byte	4
	.byte	'Mode',0,1,191,11,57
	.word	.L87,.L197
	.byte	5
	.word	.L49,.L195
	.byte	6
	.byte	'IocrRegPtr',0,1,204,11,21
	.word	.L92,.L198
	.byte	7
	.word	.L149,.L49,.L199
	.byte	8
	.word	.L152,.L200
	.byte	9
	.word	.L154,.L49,.L199
	.byte	0,7
	.word	.L110,.L199,.L201
	.byte	8
	.word	.L113,.L202
	.byte	10
	.word	.L115,.L203
	.byte	0,7
	.word	.L155,.L201,.L204
	.byte	8
	.word	.L157,.L206
	.byte	9
	.word	.L159,.L201,.L204
	.byte	0,7
	.word	.L110,.L204,.L205
	.byte	8
	.word	.L113,.L202
	.byte	0,11
	.word	.L207
	.byte	6
	.byte	'val',0,1,194,12,5
	.word	.L87,.L211
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Port_SetPinMode')
	.sect	'.debug_abbrev'
.L70:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,85,6,0,0,11,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Port_SetPinMode')
	.sect	'.debug_line'
.L71:
	.word	.L383-.L382
.L382:
	.half	3
	.word	.L385-.L384
.L384:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0,0,0,0,0
.L385:
	.byte	5,44,7,0,5,2
	.word	.L49
	.byte	3,187,18,1,5,15,3,170,125,1,5,29,9
	.half	.L199-.L49
	.byte	3,2,1,5,20,9
	.half	.L201-.L199
	.byte	3,245,2,1,5,29,9
	.half	.L204-.L201
	.byte	3,138,125,1,5,27,9
	.half	.L386-.L204
	.byte	3,1,1,5,29,9
	.half	.L387-.L386
	.byte	3,127,1,5,69,9
	.half	.L388-.L387
	.byte	1,5,41,9
	.half	.L389-.L388
	.byte	3,127,1,5,3,9
	.half	.L390-.L389
	.byte	3,4,1,5,5,9
	.half	.L205-.L390
	.byte	3,216,124,1,5,53,9
	.half	.L208-.L205
	.byte	3,182,127,1,5,5,9
	.half	.L209-.L208
	.byte	3,202,0,1,5,1,9
	.half	.L210-.L209
	.byte	3,4,1,7,9
	.half	.L73-.L210
	.byte	0,1,1
.L383:
	.sdecl	'.debug_ranges',debug,cluster('Port_SetPinMode')
	.sect	'.debug_ranges'
.L72:
	.word	-1,.L49,0,.L73-.L49,0,0
.L203:
	.word	-1,.L49,.L199-.L49,.L201-.L49,.L204-.L49,.L205-.L49,0,0
.L207:
	.word	-1,.L49,.L205-.L49,.L208-.L49,.L209-.L49,.L210-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('Port_kAvailablePins')
	.sect	'.debug_info'
.L74:
	.word	237
	.half	3
	.word	.L75
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L50
	.byte	3
	.byte	'Port_kAvailablePins',0,1,226,2,21
	.word	.L212
	.byte	5,3
	.word	Port_kAvailablePins
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Port_kAvailablePins')
	.sect	'.debug_abbrev'
.L75:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Port_kConfigPtr')
	.sect	'.debug_info'
.L76:
	.word	233
	.half	3
	.word	.L77
	.byte	4,1
	.byte	'..\\Aurix_MC-ISAR\\port_infineon_tricore\\ssc\\src\\Port.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'W:\\AURIX\\Robot\\TC277_RobotCtrl_ADCQueue_zhaojing\\Tasking\\TC277_RobotCtrl_ADCQueue\\Debug\\',0,12
	.byte	1,2
	.word	.L50
	.byte	3
	.byte	'Port_kConfigPtr',0,1,158,3,33
	.word	.L79
	.byte	5,3
	.word	Port_kConfigPtr
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Port_kConfigPtr')
	.sect	'.debug_abbrev'
.L77:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Port_Init')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L43,.L121-.L43,.L21-.L43
	.half	1
	.byte	98
	.word	0,0
.L89:
	.word	-1,.L43,.L215-.L43,.L78-.L43
	.half	1
	.byte	88
	.word	0,0
.L99:
	.word	-1,.L43,.L214-.L43,.L215-.L43
	.half	1
	.byte	88
	.word	0,0
.L80:
	.word	-1,.L43,0,.L2-.L43
	.half	1
	.byte	100
	.word	0,0
.L84:
	.word	0,0
.L90:
	.word	-1,.L43,.L217-.L43,.L78-.L43
	.half	1
	.byte	109
	.word	0,0
.L93:
	.word	-1,.L43,.L220-.L43,.L20-.L43
	.half	1
	.byte	108
	.word	0,0
.L91:
	.word	-1,.L43,.L218-.L43,.L219-.L43
	.half	1
	.byte	111
	.word	.L111-.L43,.L78-.L43
	.half	2
	.byte	145,120
	.word	.L221-.L43,.L25-.L43
	.half	1
	.byte	98
	.word	0,0
.L104:
	.word	0,0
.L125:
	.word	0,0
.L132:
	.word	0,0
.L137:
	.word	0,0
.L88:
	.word	-1,.L43,.L216-.L43,.L78-.L43
	.half	1
	.byte	89
	.word	0,0
.L98:
	.word	-1,.L43,.L101-.L43,.L216-.L43
	.half	1
	.byte	89
	.word	0,0
.L114:
	.word	0,0
.L42:
	.word	-1,.L43,0,.L213-.L43
	.half	2
	.byte	138,0
	.word	.L213-.L43,.L78-.L43
	.half	2
	.byte	138,16
	.word	.L78-.L43,.L78-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L94:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Port_RefreshPortDirection')
	.sect	'.debug_loc'
.L182:
	.word	-1,.L47,.L233-.L47,.L179-.L47
	.half	1
	.byte	83
	.word	0,0
.L185:
	.word	-1,.L47,.L234-.L47,.L37-.L47
	.half	1
	.byte	111
	.word	0,0
.L183:
	.word	-1,.L47,.L235-.L47,.L37-.L47
	.half	1
	.byte	91
	.word	0,0
.L186:
	.word	0,0
.L187:
	.word	-1,.L47,.L236-.L47,.L38-.L47
	.half	1
	.byte	95
	.word	.L237-.L47,.L37-.L47
	.half	1
	.byte	102
	.word	0,0
.L180:
	.word	-1,.L47,.L38-.L47,.L37-.L47
	.half	1
	.byte	88
	.word	0,0
.L184:
	.word	-1,.L47,.L238-.L47,.L37-.L47
	.half	1
	.byte	81
	.word	0,0
.L194:
	.word	0,0
.L181:
	.word	-1,.L47,.L232-.L47,.L179-.L47
	.half	1
	.byte	82
	.word	0,0
.L46:
	.word	-1,.L47,0,.L179-.L47
	.half	2
	.byte	138,0
	.word	0,0
.L192:
	.word	-1,.L47,.L239-.L47,.L39-.L47
	.half	1
	.byte	94
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Port_SetPinDirection')
	.sect	'.debug_loc'
.L143:
	.word	-1,.L45,.L224-.L45,.L225-.L45
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L146:
	.word	-1,.L45,.L227-.L45,.L228-.L45
	.half	1
	.byte	111
	.word	0,0
.L142:
	.word	-1,.L45,0,.L27-.L45
	.half	1
	.byte	85
	.word	.L150-.L45,.L139-.L45
	.half	1
	.byte	86
	.word	0,0
.L144:
	.word	-1,.L45,.L226-.L45,.L172-.L45
	.half	1
	.byte	81
	.word	0,0
.L148:
	.word	0,0
.L145:
	.word	-1,.L45,.L171-.L45,.L229-.L45
	.half	1
	.byte	98
	.word	0,0
.L140:
	.word	-1,.L45,0,.L222-.L45
	.half	1
	.byte	84
	.word	.L223-.L45,.L27-.L45
	.half	1
	.byte	95
	.word	0,0
.L153:
	.word	0,0
.L158:
	.word	0,0
.L162:
	.word	0,0
.L165:
	.word	0,0
.L44:
	.word	-1,.L45,0,.L139-.L45
	.half	2
	.byte	138,0
	.word	0,0
.L176:
	.word	-1,.L45,.L230-.L45,.L31-.L45
	.half	1
	.byte	95
	.word	0,0
.L178:
	.word	-1,.L45,.L231-.L45,.L139-.L45
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Port_SetPinMode')
	.sect	'.debug_loc'
.L198:
	.word	-1,.L49,.L209-.L49,.L241-.L49
	.half	1
	.byte	111
	.word	0,0
.L197:
	.word	-1,.L49,0,.L240-.L49
	.half	1
	.byte	85
	.word	0,0
.L196:
	.word	-1,.L49,0,.L195-.L49
	.half	1
	.byte	84
	.word	0,0
.L200:
	.word	0,0
.L206:
	.word	0,0
.L202:
	.word	0,0
.L48:
	.word	-1,.L49,0,.L195-.L49
	.half	2
	.byte	138,0
	.word	0,0
.L211:
	.word	-1,.L49,.L242-.L49,.L195-.L49
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L391:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Port_Init')
	.sect	'.debug_frame'
	.word	36
	.word	.L391,.L43,.L78-.L43
	.byte	4
	.word	(.L213-.L43)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L78-.L213)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Port_SetPinDirection')
	.sect	'.debug_frame'
	.word	20
	.word	.L391,.L45,.L139-.L45
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Port_RefreshPortDirection')
	.sect	'.debug_frame'
	.word	16
	.word	.L391,.L47,.L179-.L47
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('Port_SetPinMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L391,.L49,.L195-.L49
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2665    return(RetVal);
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2666  }
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2667  
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2668  /*Memory Map of the PORT Code*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2669  #define PORT_STOP_SEC_CODE
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2670  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2671   allowed only for MemMap.h*/
; ..\Aurix_MC-ISAR\port_infineon_tricore\ssc\src\Port.c	  2672  #include "MemMap.h"

	; Module end
